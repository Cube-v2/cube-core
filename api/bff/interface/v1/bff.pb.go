// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: bff/interface/v1/bff.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserRegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *UserRegisterReq) Reset() {
	*x = UserRegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterReq) ProtoMessage() {}

func (x *UserRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterReq.ProtoReflect.Descriptor instead.
func (*UserRegisterReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{0}
}

func (x *UserRegisterReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserRegisterReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserRegisterReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type LoginByPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Mode     string `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *LoginByPasswordReq) Reset() {
	*x = LoginByPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginByPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByPasswordReq) ProtoMessage() {}

func (x *LoginByPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByPasswordReq.ProtoReflect.Descriptor instead.
func (*LoginByPasswordReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{1}
}

func (x *LoginByPasswordReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginByPasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginByPasswordReq) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type LoginByCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *LoginByCodeReq) Reset() {
	*x = LoginByCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginByCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByCodeReq) ProtoMessage() {}

func (x *LoginByCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByCodeReq.ProtoReflect.Descriptor instead.
func (*LoginByCodeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{2}
}

func (x *LoginByCodeReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *LoginByCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type LoginByWeChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wechat string `protobuf:"bytes,1,opt,name=wechat,proto3" json:"wechat,omitempty"`
}

func (x *LoginByWeChatReq) Reset() {
	*x = LoginByWeChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginByWeChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByWeChatReq) ProtoMessage() {}

func (x *LoginByWeChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByWeChatReq.ProtoReflect.Descriptor instead.
func (*LoginByWeChatReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{3}
}

func (x *LoginByWeChatReq) GetWechat() string {
	if x != nil {
		return x.Wechat
	}
	return ""
}

type LoginByGithubReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Github string `protobuf:"bytes,1,opt,name=github,proto3" json:"github,omitempty"`
}

func (x *LoginByGithubReq) Reset() {
	*x = LoginByGithubReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginByGithubReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByGithubReq) ProtoMessage() {}

func (x *LoginByGithubReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByGithubReq.ProtoReflect.Descriptor instead.
func (*LoginByGithubReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{4}
}

func (x *LoginByGithubReq) GetGithub() string {
	if x != nil {
		return x.Github
	}
	return ""
}

type LoginReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LoginReply) Reset() {
	*x = LoginReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReply) ProtoMessage() {}

func (x *LoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReply.ProtoReflect.Descriptor instead.
func (*LoginReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{5}
}

func (x *LoginReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type LoginPasswordResetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Code     string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Mode     string `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *LoginPasswordResetReq) Reset() {
	*x = LoginPasswordResetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginPasswordResetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginPasswordResetReq) ProtoMessage() {}

func (x *LoginPasswordResetReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginPasswordResetReq.ProtoReflect.Descriptor instead.
func (*LoginPasswordResetReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{6}
}

func (x *LoginPasswordResetReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginPasswordResetReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LoginPasswordResetReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginPasswordResetReq) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type SendPhoneCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone    string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Template string `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
}

func (x *SendPhoneCodeReq) Reset() {
	*x = SendPhoneCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPhoneCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPhoneCodeReq) ProtoMessage() {}

func (x *SendPhoneCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPhoneCodeReq.ProtoReflect.Descriptor instead.
func (*SendPhoneCodeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{7}
}

func (x *SendPhoneCodeReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SendPhoneCodeReq) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

type SendEmailCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Template string `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
}

func (x *SendEmailCodeReq) Reset() {
	*x = SendEmailCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmailCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailCodeReq) ProtoMessage() {}

func (x *SendEmailCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailCodeReq.ProtoReflect.Descriptor instead.
func (*SendEmailCodeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{8}
}

func (x *SendEmailCodeReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SendEmailCodeReq) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

type GetCosSessionKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TmpSecretId  string `protobuf:"bytes,1,opt,name=tmp_secret_id,json=tmpSecretId,proto3" json:"tmp_secret_id,omitempty"`
	TmpSecretKey string `protobuf:"bytes,2,opt,name=tmp_secret_key,json=tmpSecretKey,proto3" json:"tmp_secret_key,omitempty"`
	SessionToken string `protobuf:"bytes,3,opt,name=session_token,json=sessionToken,proto3" json:"session_token,omitempty"`
	StartTime    int64  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	ExpiredTime  int64  `protobuf:"varint,5,opt,name=expired_time,json=expiredTime,proto3" json:"expired_time,omitempty"`
}

func (x *GetCosSessionKeyReply) Reset() {
	*x = GetCosSessionKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCosSessionKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCosSessionKeyReply) ProtoMessage() {}

func (x *GetCosSessionKeyReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCosSessionKeyReply.ProtoReflect.Descriptor instead.
func (*GetCosSessionKeyReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{9}
}

func (x *GetCosSessionKeyReply) GetTmpSecretId() string {
	if x != nil {
		return x.TmpSecretId
	}
	return ""
}

func (x *GetCosSessionKeyReply) GetTmpSecretKey() string {
	if x != nil {
		return x.TmpSecretKey
	}
	return ""
}

func (x *GetCosSessionKeyReply) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *GetCosSessionKeyReply) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetCosSessionKeyReply) GetExpiredTime() int64 {
	if x != nil {
		return x.ExpiredTime
	}
	return 0
}

type GetAvatarReviewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetAvatarReviewReq) Reset() {
	*x = GetAvatarReviewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvatarReviewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvatarReviewReq) ProtoMessage() {}

func (x *GetAvatarReviewReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvatarReviewReq.ProtoReflect.Descriptor instead.
func (*GetAvatarReviewReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{10}
}

func (x *GetAvatarReviewReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetAvatarReviewReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Review []*GetAvatarReviewReply_Review `protobuf:"bytes,1,rep,name=review,proto3" json:"review,omitempty"`
}

func (x *GetAvatarReviewReply) Reset() {
	*x = GetAvatarReviewReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvatarReviewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvatarReviewReply) ProtoMessage() {}

func (x *GetAvatarReviewReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvatarReviewReply.ProtoReflect.Descriptor instead.
func (*GetAvatarReviewReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{11}
}

func (x *GetAvatarReviewReply) GetReview() []*GetAvatarReviewReply_Review {
	if x != nil {
		return x.Review
	}
	return nil
}

type GetCoverReviewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetCoverReviewReq) Reset() {
	*x = GetCoverReviewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoverReviewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoverReviewReq) ProtoMessage() {}

func (x *GetCoverReviewReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoverReviewReq.ProtoReflect.Descriptor instead.
func (*GetCoverReviewReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{12}
}

func (x *GetCoverReviewReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetCoverReviewReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Review []*GetCoverReviewReply_Review `protobuf:"bytes,1,rep,name=review,proto3" json:"review,omitempty"`
}

func (x *GetCoverReviewReply) Reset() {
	*x = GetCoverReviewReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoverReviewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoverReviewReply) ProtoMessage() {}

func (x *GetCoverReviewReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoverReviewReply.ProtoReflect.Descriptor instead.
func (*GetCoverReviewReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{13}
}

func (x *GetCoverReviewReply) GetReview() []*GetCoverReviewReply_Review {
	if x != nil {
		return x.Review
	}
	return nil
}

type GetAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone    string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Qq       string `protobuf:"bytes,3,opt,name=qq,proto3" json:"qq,omitempty"`
	Wechat   string `protobuf:"bytes,4,opt,name=wechat,proto3" json:"wechat,omitempty"`
	Weibo    string `protobuf:"bytes,5,opt,name=weibo,proto3" json:"weibo,omitempty"`
	Github   string `protobuf:"bytes,6,opt,name=github,proto3" json:"github,omitempty"`
	Password string `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *GetAccountReply) Reset() {
	*x = GetAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountReply) ProtoMessage() {}

func (x *GetAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountReply.ProtoReflect.Descriptor instead.
func (*GetAccountReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{14}
}

func (x *GetAccountReply) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetAccountReply) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetAccountReply) GetQq() string {
	if x != nil {
		return x.Qq
	}
	return ""
}

func (x *GetAccountReply) GetWechat() string {
	if x != nil {
		return x.Wechat
	}
	return ""
}

func (x *GetAccountReply) GetWeibo() string {
	if x != nil {
		return x.Weibo
	}
	return ""
}

func (x *GetAccountReply) GetGithub() string {
	if x != nil {
		return x.Github
	}
	return ""
}

func (x *GetAccountReply) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type GetProfileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Avatar    string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	School    string `protobuf:"bytes,4,opt,name=school,proto3" json:"school,omitempty"`
	Company   string `protobuf:"bytes,5,opt,name=company,proto3" json:"company,omitempty"`
	Job       string `protobuf:"bytes,6,opt,name=job,proto3" json:"job,omitempty"`
	Homepage  string `protobuf:"bytes,7,opt,name=homepage,proto3" json:"homepage,omitempty"`
	Introduce string `protobuf:"bytes,8,opt,name=introduce,proto3" json:"introduce,omitempty"`
}

func (x *GetProfileReply) Reset() {
	*x = GetProfileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileReply) ProtoMessage() {}

func (x *GetProfileReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileReply.ProtoReflect.Descriptor instead.
func (*GetProfileReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{15}
}

func (x *GetProfileReply) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetProfileReply) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetProfileReply) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GetProfileReply) GetSchool() string {
	if x != nil {
		return x.School
	}
	return ""
}

func (x *GetProfileReply) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *GetProfileReply) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *GetProfileReply) GetHomepage() string {
	if x != nil {
		return x.Homepage
	}
	return ""
}

func (x *GetProfileReply) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

type GetProfileListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuids []string `protobuf:"bytes,1,rep,name=uuids,proto3" json:"uuids,omitempty"`
}

func (x *GetProfileListReq) Reset() {
	*x = GetProfileListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileListReq) ProtoMessage() {}

func (x *GetProfileListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileListReq.ProtoReflect.Descriptor instead.
func (*GetProfileListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{16}
}

func (x *GetProfileListReq) GetUuids() []string {
	if x != nil {
		return x.Uuids
	}
	return nil
}

type GetProfileListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile []*GetProfileListReply_Profile `protobuf:"bytes,1,rep,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetProfileListReply) Reset() {
	*x = GetProfileListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileListReply) ProtoMessage() {}

func (x *GetProfileListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileListReply.ProtoReflect.Descriptor instead.
func (*GetProfileListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{17}
}

func (x *GetProfileListReply) GetProfile() []*GetProfileListReply_Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type GetUserInfoVisitorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetUserInfoVisitorReq) Reset() {
	*x = GetUserInfoVisitorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoVisitorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoVisitorReq) ProtoMessage() {}

func (x *GetUserInfoVisitorReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoVisitorReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoVisitorReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserInfoVisitorReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetUserInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Avatar      string `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
	School      string `protobuf:"bytes,3,opt,name=school,proto3" json:"school,omitempty"`
	Company     string `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
	Job         string `protobuf:"bytes,5,opt,name=job,proto3" json:"job,omitempty"`
	Homepage    string `protobuf:"bytes,6,opt,name=homepage,proto3" json:"homepage,omitempty"`
	Introduce   string `protobuf:"bytes,7,opt,name=introduce,proto3" json:"introduce,omitempty"`
	Created     string `protobuf:"bytes,8,opt,name=created,proto3" json:"created,omitempty"`
	Score       int32  `protobuf:"varint,9,opt,name=score,proto3" json:"score,omitempty"`
	Agree       int32  `protobuf:"varint,10,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect     int32  `protobuf:"varint,11,opt,name=collect,proto3" json:"collect,omitempty"`
	View        int32  `protobuf:"varint,12,opt,name=view,proto3" json:"view,omitempty"`
	Follow      int32  `protobuf:"varint,13,opt,name=follow,proto3" json:"follow,omitempty"`
	Followed    int32  `protobuf:"varint,14,opt,name=followed,proto3" json:"followed,omitempty"`
	Article     int32  `protobuf:"varint,15,opt,name=article,proto3" json:"article,omitempty"`
	Column      int32  `protobuf:"varint,16,opt,name=column,proto3" json:"column,omitempty"`
	Talk        int32  `protobuf:"varint,17,opt,name=talk,proto3" json:"talk,omitempty"`
	Collections int32  `protobuf:"varint,18,opt,name=collections,proto3" json:"collections,omitempty"`
	Subscribe   int32  `protobuf:"varint,19,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
}

func (x *GetUserInfoReply) Reset() {
	*x = GetUserInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReply) ProtoMessage() {}

func (x *GetUserInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReply.ProtoReflect.Descriptor instead.
func (*GetUserInfoReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{19}
}

func (x *GetUserInfoReply) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetUserInfoReply) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GetUserInfoReply) GetSchool() string {
	if x != nil {
		return x.School
	}
	return ""
}

func (x *GetUserInfoReply) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *GetUserInfoReply) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *GetUserInfoReply) GetHomepage() string {
	if x != nil {
		return x.Homepage
	}
	return ""
}

func (x *GetUserInfoReply) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *GetUserInfoReply) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *GetUserInfoReply) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *GetUserInfoReply) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetUserInfoReply) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetUserInfoReply) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetUserInfoReply) GetFollow() int32 {
	if x != nil {
		return x.Follow
	}
	return 0
}

func (x *GetUserInfoReply) GetFollowed() int32 {
	if x != nil {
		return x.Followed
	}
	return 0
}

func (x *GetUserInfoReply) GetArticle() int32 {
	if x != nil {
		return x.Article
	}
	return 0
}

func (x *GetUserInfoReply) GetColumn() int32 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *GetUserInfoReply) GetTalk() int32 {
	if x != nil {
		return x.Talk
	}
	return 0
}

func (x *GetUserInfoReply) GetCollections() int32 {
	if x != nil {
		return x.Collections
	}
	return 0
}

func (x *GetUserInfoReply) GetSubscribe() int32 {
	if x != nil {
		return x.Subscribe
	}
	return 0
}

type GetUserFollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetUserFollowReq) Reset() {
	*x = GetUserFollowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserFollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFollowReq) ProtoMessage() {}

func (x *GetUserFollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFollowReq.ProtoReflect.Descriptor instead.
func (*GetUserFollowReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{20}
}

func (x *GetUserFollowReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetUserFollowReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Follow bool `protobuf:"varint,1,opt,name=follow,proto3" json:"follow,omitempty"`
}

func (x *GetUserFollowReply) Reset() {
	*x = GetUserFollowReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserFollowReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFollowReply) ProtoMessage() {}

func (x *GetUserFollowReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFollowReply.ProtoReflect.Descriptor instead.
func (*GetUserFollowReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{21}
}

func (x *GetUserFollowReply) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

type GetColumnSubscribesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetColumnSubscribesReq) Reset() {
	*x = GetColumnSubscribesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnSubscribesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnSubscribesReq) ProtoMessage() {}

func (x *GetColumnSubscribesReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnSubscribesReq.ProtoReflect.Descriptor instead.
func (*GetColumnSubscribesReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{22}
}

func (x *GetColumnSubscribesReq) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetColumnSubscribesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscribes []*GetColumnSubscribesReply_Subscribes `protobuf:"bytes,1,rep,name=subscribes,proto3" json:"subscribes,omitempty"`
}

func (x *GetColumnSubscribesReply) Reset() {
	*x = GetColumnSubscribesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnSubscribesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnSubscribesReply) ProtoMessage() {}

func (x *GetColumnSubscribesReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnSubscribesReply.ProtoReflect.Descriptor instead.
func (*GetColumnSubscribesReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{23}
}

func (x *GetColumnSubscribesReply) GetSubscribes() []*GetColumnSubscribesReply_Subscribes {
	if x != nil {
		return x.Subscribes
	}
	return nil
}

type GetFollowListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetFollowListReq) Reset() {
	*x = GetFollowListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowListReq) ProtoMessage() {}

func (x *GetFollowListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowListReq.ProtoReflect.Descriptor instead.
func (*GetFollowListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{24}
}

func (x *GetFollowListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetFollowListReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetFollowListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Follow []*GetFollowListReply_Follow `protobuf:"bytes,1,rep,name=follow,proto3" json:"follow,omitempty"`
}

func (x *GetFollowListReply) Reset() {
	*x = GetFollowListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowListReply) ProtoMessage() {}

func (x *GetFollowListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowListReply.ProtoReflect.Descriptor instead.
func (*GetFollowListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{25}
}

func (x *GetFollowListReply) GetFollow() []*GetFollowListReply_Follow {
	if x != nil {
		return x.Follow
	}
	return nil
}

type GetFollowListCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetFollowListCountReq) Reset() {
	*x = GetFollowListCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowListCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowListCountReq) ProtoMessage() {}

func (x *GetFollowListCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowListCountReq.ProtoReflect.Descriptor instead.
func (*GetFollowListCountReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{26}
}

func (x *GetFollowListCountReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetFollowListCountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetFollowListCountReply) Reset() {
	*x = GetFollowListCountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowListCountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowListCountReply) ProtoMessage() {}

func (x *GetFollowListCountReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowListCountReply.ProtoReflect.Descriptor instead.
func (*GetFollowListCountReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{27}
}

func (x *GetFollowListCountReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetFollowedListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetFollowedListReq) Reset() {
	*x = GetFollowedListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowedListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowedListReq) ProtoMessage() {}

func (x *GetFollowedListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowedListReq.ProtoReflect.Descriptor instead.
func (*GetFollowedListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{28}
}

func (x *GetFollowedListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetFollowedListReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetFollowedListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Follow []*GetFollowedListReply_Follow `protobuf:"bytes,1,rep,name=follow,proto3" json:"follow,omitempty"`
}

func (x *GetFollowedListReply) Reset() {
	*x = GetFollowedListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowedListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowedListReply) ProtoMessage() {}

func (x *GetFollowedListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowedListReply.ProtoReflect.Descriptor instead.
func (*GetFollowedListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{29}
}

func (x *GetFollowedListReply) GetFollow() []*GetFollowedListReply_Follow {
	if x != nil {
		return x.Follow
	}
	return nil
}

type GetFollowedListCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetFollowedListCountReq) Reset() {
	*x = GetFollowedListCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowedListCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowedListCountReq) ProtoMessage() {}

func (x *GetFollowedListCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowedListCountReq.ProtoReflect.Descriptor instead.
func (*GetFollowedListCountReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{30}
}

func (x *GetFollowedListCountReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetFollowedListCountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetFollowedListCountReply) Reset() {
	*x = GetFollowedListCountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowedListCountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowedListCountReply) ProtoMessage() {}

func (x *GetFollowedListCountReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowedListCountReply.ProtoReflect.Descriptor instead.
func (*GetFollowedListCountReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{31}
}

func (x *GetFollowedListCountReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetProfileUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username  string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Avatar    string `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
	School    string `protobuf:"bytes,3,opt,name=school,proto3" json:"school,omitempty"`
	Company   string `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
	Job       string `protobuf:"bytes,5,opt,name=job,proto3" json:"job,omitempty"`
	Homepage  string `protobuf:"bytes,6,opt,name=homepage,proto3" json:"homepage,omitempty"`
	Introduce string `protobuf:"bytes,7,opt,name=introduce,proto3" json:"introduce,omitempty"`
	Status    int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetProfileUpdateReply) Reset() {
	*x = GetProfileUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileUpdateReply) ProtoMessage() {}

func (x *GetProfileUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileUpdateReply.ProtoReflect.Descriptor instead.
func (*GetProfileUpdateReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{32}
}

func (x *GetProfileUpdateReply) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetProfileUpdateReply) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GetProfileUpdateReply) GetSchool() string {
	if x != nil {
		return x.School
	}
	return ""
}

func (x *GetProfileUpdateReply) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *GetProfileUpdateReply) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *GetProfileUpdateReply) GetHomepage() string {
	if x != nil {
		return x.Homepage
	}
	return ""
}

func (x *GetProfileUpdateReply) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *GetProfileUpdateReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetUserSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Search string `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetUserSearchReq) Reset() {
	*x = GetUserSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSearchReq) ProtoMessage() {}

func (x *GetUserSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSearchReq.ProtoReflect.Descriptor instead.
func (*GetUserSearchReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{33}
}

func (x *GetUserSearchReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserSearchReq) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetUserSearchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*GetUserSearchReply_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int32                      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetUserSearchReply) Reset() {
	*x = GetUserSearchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSearchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSearchReply) ProtoMessage() {}

func (x *GetUserSearchReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSearchReply.ProtoReflect.Descriptor instead.
func (*GetUserSearchReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{34}
}

func (x *GetUserSearchReply) GetList() []*GetUserSearchReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetUserSearchReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SetProfileUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username  string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	School    string `protobuf:"bytes,2,opt,name=school,proto3" json:"school,omitempty"`
	Company   string `protobuf:"bytes,3,opt,name=company,proto3" json:"company,omitempty"`
	Job       string `protobuf:"bytes,4,opt,name=job,proto3" json:"job,omitempty"`
	Homepage  string `protobuf:"bytes,5,opt,name=homepage,proto3" json:"homepage,omitempty"`
	Introduce string `protobuf:"bytes,6,opt,name=introduce,proto3" json:"introduce,omitempty"`
}

func (x *SetProfileUpdateReq) Reset() {
	*x = SetProfileUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProfileUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProfileUpdateReq) ProtoMessage() {}

func (x *SetProfileUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProfileUpdateReq.ProtoReflect.Descriptor instead.
func (*SetProfileUpdateReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{35}
}

func (x *SetProfileUpdateReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetProfileUpdateReq) GetSchool() string {
	if x != nil {
		return x.School
	}
	return ""
}

func (x *SetProfileUpdateReq) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *SetProfileUpdateReq) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *SetProfileUpdateReq) GetHomepage() string {
	if x != nil {
		return x.Homepage
	}
	return ""
}

func (x *SetProfileUpdateReq) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

type SetUserPhoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SetUserPhoneReq) Reset() {
	*x = SetUserPhoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserPhoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserPhoneReq) ProtoMessage() {}

func (x *SetUserPhoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserPhoneReq.ProtoReflect.Descriptor instead.
func (*SetUserPhoneReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{36}
}

func (x *SetUserPhoneReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SetUserPhoneReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SetUserEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SetUserEmailReq) Reset() {
	*x = SetUserEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserEmailReq) ProtoMessage() {}

func (x *SetUserEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserEmailReq.ProtoReflect.Descriptor instead.
func (*SetUserEmailReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{37}
}

func (x *SetUserEmailReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SetUserEmailReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SetUserPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *SetUserPasswordReq) Reset() {
	*x = SetUserPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserPasswordReq) ProtoMessage() {}

func (x *SetUserPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserPasswordReq.ProtoReflect.Descriptor instead.
func (*SetUserPasswordReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{38}
}

func (x *SetUserPasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SetUserFollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SetUserFollowReq) Reset() {
	*x = SetUserFollowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserFollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserFollowReq) ProtoMessage() {}

func (x *SetUserFollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserFollowReq.ProtoReflect.Descriptor instead.
func (*SetUserFollowReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{39}
}

func (x *SetUserFollowReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type CancelUserFollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *CancelUserFollowReq) Reset() {
	*x = CancelUserFollowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelUserFollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelUserFollowReq) ProtoMessage() {}

func (x *CancelUserFollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelUserFollowReq.ProtoReflect.Descriptor instead.
func (*CancelUserFollowReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{40}
}

func (x *CancelUserFollowReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ChangeUserPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oldpassword string `protobuf:"bytes,1,opt,name=oldpassword,proto3" json:"oldpassword,omitempty"`
	Password    string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ChangeUserPasswordReq) Reset() {
	*x = ChangeUserPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeUserPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserPasswordReq) ProtoMessage() {}

func (x *ChangeUserPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserPasswordReq.ProtoReflect.Descriptor instead.
func (*ChangeUserPasswordReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{41}
}

func (x *ChangeUserPasswordReq) GetOldpassword() string {
	if x != nil {
		return x.Oldpassword
	}
	return ""
}

func (x *ChangeUserPasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UnbindUserPhoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *UnbindUserPhoneReq) Reset() {
	*x = UnbindUserPhoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindUserPhoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindUserPhoneReq) ProtoMessage() {}

func (x *UnbindUserPhoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindUserPhoneReq.ProtoReflect.Descriptor instead.
func (*UnbindUserPhoneReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{42}
}

func (x *UnbindUserPhoneReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UnbindUserPhoneReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type UnbindUserEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *UnbindUserEmailReq) Reset() {
	*x = UnbindUserEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindUserEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindUserEmailReq) ProtoMessage() {}

func (x *UnbindUserEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindUserEmailReq.ProtoReflect.Descriptor instead.
func (*UnbindUserEmailReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{43}
}

func (x *UnbindUserEmailReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UnbindUserEmailReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetLeaderBoardReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board []*GetLeaderBoardReply_Board `protobuf:"bytes,1,rep,name=board,proto3" json:"board,omitempty"`
}

func (x *GetLeaderBoardReply) Reset() {
	*x = GetLeaderBoardReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaderBoardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderBoardReply) ProtoMessage() {}

func (x *GetLeaderBoardReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderBoardReply.ProtoReflect.Descriptor instead.
func (*GetLeaderBoardReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{44}
}

func (x *GetLeaderBoardReply) GetBoard() []*GetLeaderBoardReply_Board {
	if x != nil {
		return x.Board
	}
	return nil
}

type GetCollectArticleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetCollectArticleListReq) Reset() {
	*x = GetCollectArticleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectArticleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectArticleListReq) ProtoMessage() {}

func (x *GetCollectArticleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectArticleListReq.ProtoReflect.Descriptor instead.
func (*GetCollectArticleListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{45}
}

func (x *GetCollectArticleListReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCollectArticleListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetCollectArticleCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCollectArticleCountReq) Reset() {
	*x = GetCollectArticleCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectArticleCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectArticleCountReq) ProtoMessage() {}

func (x *GetCollectArticleCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectArticleCountReq.ProtoReflect.Descriptor instead.
func (*GetCollectArticleCountReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{46}
}

func (x *GetCollectArticleCountReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCollectArticleCountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetCollectArticleCountReply) Reset() {
	*x = GetCollectArticleCountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectArticleCountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectArticleCountReply) ProtoMessage() {}

func (x *GetCollectArticleCountReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectArticleCountReply.ProtoReflect.Descriptor instead.
func (*GetCollectArticleCountReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{47}
}

func (x *GetCollectArticleCountReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetCollectTalkListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetCollectTalkListReq) Reset() {
	*x = GetCollectTalkListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectTalkListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectTalkListReq) ProtoMessage() {}

func (x *GetCollectTalkListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectTalkListReq.ProtoReflect.Descriptor instead.
func (*GetCollectTalkListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{48}
}

func (x *GetCollectTalkListReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCollectTalkListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetCollectTalkCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCollectTalkCountReq) Reset() {
	*x = GetCollectTalkCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectTalkCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectTalkCountReq) ProtoMessage() {}

func (x *GetCollectTalkCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectTalkCountReq.ProtoReflect.Descriptor instead.
func (*GetCollectTalkCountReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{49}
}

func (x *GetCollectTalkCountReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCollectTalkCountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetCollectTalkCountReply) Reset() {
	*x = GetCollectTalkCountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectTalkCountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectTalkCountReply) ProtoMessage() {}

func (x *GetCollectTalkCountReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectTalkCountReply.ProtoReflect.Descriptor instead.
func (*GetCollectTalkCountReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{50}
}

func (x *GetCollectTalkCountReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetCollectColumnListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetCollectColumnListReq) Reset() {
	*x = GetCollectColumnListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectColumnListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectColumnListReq) ProtoMessage() {}

func (x *GetCollectColumnListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectColumnListReq.ProtoReflect.Descriptor instead.
func (*GetCollectColumnListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{51}
}

func (x *GetCollectColumnListReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCollectColumnListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetCollectColumnCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCollectColumnCountReq) Reset() {
	*x = GetCollectColumnCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectColumnCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectColumnCountReq) ProtoMessage() {}

func (x *GetCollectColumnCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectColumnCountReq.ProtoReflect.Descriptor instead.
func (*GetCollectColumnCountReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{52}
}

func (x *GetCollectColumnCountReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCollectColumnCountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetCollectColumnCountReply) Reset() {
	*x = GetCollectColumnCountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectColumnCountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectColumnCountReply) ProtoMessage() {}

func (x *GetCollectColumnCountReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectColumnCountReply.ProtoReflect.Descriptor instead.
func (*GetCollectColumnCountReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{53}
}

func (x *GetCollectColumnCountReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetCollectionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetCollectionsReq) Reset() {
	*x = GetCollectionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionsReq) ProtoMessage() {}

func (x *GetCollectionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionsReq.ProtoReflect.Descriptor instead.
func (*GetCollectionsReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{54}
}

func (x *GetCollectionsReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCollectionsReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetCollectionsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid    string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Auth    int32  `protobuf:"varint,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Article int32  `protobuf:"varint,3,opt,name=article,proto3" json:"article,omitempty"`
	Column  int32  `protobuf:"varint,4,opt,name=column,proto3" json:"column,omitempty"`
	Talk    int32  `protobuf:"varint,5,opt,name=talk,proto3" json:"talk,omitempty"`
}

func (x *GetCollectionsReply) Reset() {
	*x = GetCollectionsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectionsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionsReply) ProtoMessage() {}

func (x *GetCollectionsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionsReply.ProtoReflect.Descriptor instead.
func (*GetCollectionsReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{55}
}

func (x *GetCollectionsReply) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetCollectionsReply) GetAuth() int32 {
	if x != nil {
		return x.Auth
	}
	return 0
}

func (x *GetCollectionsReply) GetArticle() int32 {
	if x != nil {
		return x.Article
	}
	return 0
}

func (x *GetCollectionsReply) GetColumn() int32 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *GetCollectionsReply) GetTalk() int32 {
	if x != nil {
		return x.Talk
	}
	return 0
}

type GetArticleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetArticleListReq) Reset() {
	*x = GetArticleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListReq) ProtoMessage() {}

func (x *GetArticleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListReq.ProtoReflect.Descriptor instead.
func (*GetArticleListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{56}
}

func (x *GetArticleListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetArticleListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Article []*GetArticleListReply_Article `protobuf:"bytes,1,rep,name=article,proto3" json:"article,omitempty"`
}

func (x *GetArticleListReply) Reset() {
	*x = GetArticleListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListReply) ProtoMessage() {}

func (x *GetArticleListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListReply.ProtoReflect.Descriptor instead.
func (*GetArticleListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{57}
}

func (x *GetArticleListReply) GetArticle() []*GetArticleListReply_Article {
	if x != nil {
		return x.Article
	}
	return nil
}

type GetArticleCountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetArticleCountReply) Reset() {
	*x = GetArticleCountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleCountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleCountReply) ProtoMessage() {}

func (x *GetArticleCountReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleCountReply.ProtoReflect.Descriptor instead.
func (*GetArticleCountReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{58}
}

func (x *GetArticleCountReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetArticleCountVisitorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetArticleCountVisitorReq) Reset() {
	*x = GetArticleCountVisitorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleCountVisitorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleCountVisitorReq) ProtoMessage() {}

func (x *GetArticleCountVisitorReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleCountVisitorReq.ProtoReflect.Descriptor instead.
func (*GetArticleCountVisitorReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{59}
}

func (x *GetArticleCountVisitorReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetArticleListHotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetArticleListHotReq) Reset() {
	*x = GetArticleListHotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListHotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListHotReq) ProtoMessage() {}

func (x *GetArticleListHotReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListHotReq.ProtoReflect.Descriptor instead.
func (*GetArticleListHotReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{60}
}

func (x *GetArticleListHotReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetArticleListHotReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Article []*GetArticleListHotReply_Article `protobuf:"bytes,1,rep,name=article,proto3" json:"article,omitempty"`
}

func (x *GetArticleListHotReply) Reset() {
	*x = GetArticleListHotReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListHotReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListHotReply) ProtoMessage() {}

func (x *GetArticleListHotReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListHotReply.ProtoReflect.Descriptor instead.
func (*GetArticleListHotReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{61}
}

func (x *GetArticleListHotReply) GetArticle() []*GetArticleListHotReply_Article {
	if x != nil {
		return x.Article
	}
	return nil
}

type GetUserArticleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUserArticleListReq) Reset() {
	*x = GetUserArticleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserArticleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserArticleListReq) ProtoMessage() {}

func (x *GetUserArticleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserArticleListReq.ProtoReflect.Descriptor instead.
func (*GetUserArticleListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{62}
}

func (x *GetUserArticleListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUserArticleListSimpleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUserArticleListSimpleReq) Reset() {
	*x = GetUserArticleListSimpleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserArticleListSimpleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserArticleListSimpleReq) ProtoMessage() {}

func (x *GetUserArticleListSimpleReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserArticleListSimpleReq.ProtoReflect.Descriptor instead.
func (*GetUserArticleListSimpleReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{63}
}

func (x *GetUserArticleListSimpleReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUserArticleListVisitorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetUserArticleListVisitorReq) Reset() {
	*x = GetUserArticleListVisitorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserArticleListVisitorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserArticleListVisitorReq) ProtoMessage() {}

func (x *GetUserArticleListVisitorReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserArticleListVisitorReq.ProtoReflect.Descriptor instead.
func (*GetUserArticleListVisitorReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{64}
}

func (x *GetUserArticleListVisitorReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserArticleListVisitorReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetArticleStatisticReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetArticleStatisticReq) Reset() {
	*x = GetArticleStatisticReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleStatisticReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleStatisticReq) ProtoMessage() {}

func (x *GetArticleStatisticReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleStatisticReq.ProtoReflect.Descriptor instead.
func (*GetArticleStatisticReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{65}
}

func (x *GetArticleStatisticReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetArticleStatisticReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetArticleStatisticReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid    string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Agree   int32  `protobuf:"varint,2,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect int32  `protobuf:"varint,3,opt,name=collect,proto3" json:"collect,omitempty"`
	View    int32  `protobuf:"varint,4,opt,name=view,proto3" json:"view,omitempty"`
	Comment int32  `protobuf:"varint,5,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *GetArticleStatisticReply) Reset() {
	*x = GetArticleStatisticReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleStatisticReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleStatisticReply) ProtoMessage() {}

func (x *GetArticleStatisticReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleStatisticReply.ProtoReflect.Descriptor instead.
func (*GetArticleStatisticReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{66}
}

func (x *GetArticleStatisticReply) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetArticleStatisticReply) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetArticleStatisticReply) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetArticleStatisticReply) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetArticleStatisticReply) GetComment() int32 {
	if x != nil {
		return x.Comment
	}
	return 0
}

type GetUserArticleAgreeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agree map[int32]bool `protobuf:"bytes,1,rep,name=agree,proto3" json:"agree,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetUserArticleAgreeReply) Reset() {
	*x = GetUserArticleAgreeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserArticleAgreeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserArticleAgreeReply) ProtoMessage() {}

func (x *GetUserArticleAgreeReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserArticleAgreeReply.ProtoReflect.Descriptor instead.
func (*GetUserArticleAgreeReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{67}
}

func (x *GetUserArticleAgreeReply) GetAgree() map[int32]bool {
	if x != nil {
		return x.Agree
	}
	return nil
}

type GetUserArticleCollectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collect map[int32]bool `protobuf:"bytes,1,rep,name=collect,proto3" json:"collect,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetUserArticleCollectReply) Reset() {
	*x = GetUserArticleCollectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserArticleCollectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserArticleCollectReply) ProtoMessage() {}

func (x *GetUserArticleCollectReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserArticleCollectReply.ProtoReflect.Descriptor instead.
func (*GetUserArticleCollectReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{68}
}

func (x *GetUserArticleCollectReply) GetCollect() map[int32]bool {
	if x != nil {
		return x.Collect
	}
	return nil
}

type GetArticleListStatisticReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetArticleListStatisticReq) Reset() {
	*x = GetArticleListStatisticReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListStatisticReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListStatisticReq) ProtoMessage() {}

func (x *GetArticleListStatisticReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListStatisticReq.ProtoReflect.Descriptor instead.
func (*GetArticleListStatisticReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{69}
}

func (x *GetArticleListStatisticReq) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetArticleListStatisticReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count []*GetArticleListStatisticReply_Count `protobuf:"bytes,1,rep,name=count,proto3" json:"count,omitempty"`
}

func (x *GetArticleListStatisticReply) Reset() {
	*x = GetArticleListStatisticReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListStatisticReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListStatisticReply) ProtoMessage() {}

func (x *GetArticleListStatisticReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListStatisticReply.ProtoReflect.Descriptor instead.
func (*GetArticleListStatisticReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{70}
}

func (x *GetArticleListStatisticReply) GetCount() []*GetArticleListStatisticReply_Count {
	if x != nil {
		return x.Count
	}
	return nil
}

type GetLastArticleDraftReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetLastArticleDraftReply) Reset() {
	*x = GetLastArticleDraftReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastArticleDraftReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastArticleDraftReply) ProtoMessage() {}

func (x *GetLastArticleDraftReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastArticleDraftReply.ProtoReflect.Descriptor instead.
func (*GetLastArticleDraftReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{71}
}

func (x *GetLastArticleDraftReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetLastArticleDraftReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetArticleSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Search string `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	Time   string `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *GetArticleSearchReq) Reset() {
	*x = GetArticleSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleSearchReq) ProtoMessage() {}

func (x *GetArticleSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleSearchReq.ProtoReflect.Descriptor instead.
func (*GetArticleSearchReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{72}
}

func (x *GetArticleSearchReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetArticleSearchReq) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetArticleSearchReq) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type GetArticleSearchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*GetArticleSearchReply_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int32                         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetArticleSearchReply) Reset() {
	*x = GetArticleSearchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleSearchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleSearchReply) ProtoMessage() {}

func (x *GetArticleSearchReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleSearchReply.ProtoReflect.Descriptor instead.
func (*GetArticleSearchReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{73}
}

func (x *GetArticleSearchReply) GetList() []*GetArticleSearchReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetArticleSearchReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateArticleDraftReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateArticleDraftReply) Reset() {
	*x = CreateArticleDraftReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArticleDraftReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticleDraftReply) ProtoMessage() {}

func (x *CreateArticleDraftReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticleDraftReply.ProtoReflect.Descriptor instead.
func (*CreateArticleDraftReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{74}
}

func (x *CreateArticleDraftReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCollectionsListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetCollectionsListReq) Reset() {
	*x = GetCollectionsListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectionsListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionsListReq) ProtoMessage() {}

func (x *GetCollectionsListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionsListReq.ProtoReflect.Descriptor instead.
func (*GetCollectionsListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{75}
}

func (x *GetCollectionsListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetCollectionsListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collections []*GetCollectionsListReply_Collections `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *GetCollectionsListReply) Reset() {
	*x = GetCollectionsListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectionsListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionsListReply) ProtoMessage() {}

func (x *GetCollectionsListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionsListReply.ProtoReflect.Descriptor instead.
func (*GetCollectionsListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{76}
}

func (x *GetCollectionsListReply) GetCollections() []*GetCollectionsListReply_Collections {
	if x != nil {
		return x.Collections
	}
	return nil
}

type GetCollectionsVisitorCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetCollectionsVisitorCountReq) Reset() {
	*x = GetCollectionsVisitorCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectionsVisitorCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionsVisitorCountReq) ProtoMessage() {}

func (x *GetCollectionsVisitorCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionsVisitorCountReq.ProtoReflect.Descriptor instead.
func (*GetCollectionsVisitorCountReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{77}
}

func (x *GetCollectionsVisitorCountReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetCollectionsCountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetCollectionsCountReply) Reset() {
	*x = GetCollectionsCountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectionsCountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionsCountReply) ProtoMessage() {}

func (x *GetCollectionsCountReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionsCountReply.ProtoReflect.Descriptor instead.
func (*GetCollectionsCountReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{78}
}

func (x *GetCollectionsCountReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetLastCollectionsDraftReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetLastCollectionsDraftReply) Reset() {
	*x = GetLastCollectionsDraftReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastCollectionsDraftReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastCollectionsDraftReply) ProtoMessage() {}

func (x *GetLastCollectionsDraftReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastCollectionsDraftReply.ProtoReflect.Descriptor instead.
func (*GetLastCollectionsDraftReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{79}
}

func (x *GetLastCollectionsDraftReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetLastCollectionsDraftReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetCollectionsListByVisitorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Page int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetCollectionsListByVisitorReq) Reset() {
	*x = GetCollectionsListByVisitorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectionsListByVisitorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionsListByVisitorReq) ProtoMessage() {}

func (x *GetCollectionsListByVisitorReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionsListByVisitorReq.ProtoReflect.Descriptor instead.
func (*GetCollectionsListByVisitorReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{80}
}

func (x *GetCollectionsListByVisitorReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetCollectionsListByVisitorReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type SendCollectionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendCollectionsReq) Reset() {
	*x = SendCollectionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCollectionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCollectionsReq) ProtoMessage() {}

func (x *SendCollectionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCollectionsReq.ProtoReflect.Descriptor instead.
func (*SendCollectionsReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{81}
}

func (x *SendCollectionsReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SendCollectionsEditReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendCollectionsEditReq) Reset() {
	*x = SendCollectionsEditReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCollectionsEditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCollectionsEditReq) ProtoMessage() {}

func (x *SendCollectionsEditReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCollectionsEditReq.ProtoReflect.Descriptor instead.
func (*SendCollectionsEditReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{82}
}

func (x *SendCollectionsEditReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateCollectionsDraftReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateCollectionsDraftReply) Reset() {
	*x = CreateCollectionsDraftReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCollectionsDraftReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionsDraftReply) ProtoMessage() {}

func (x *CreateCollectionsDraftReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionsDraftReply.ProtoReflect.Descriptor instead.
func (*CreateCollectionsDraftReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{83}
}

func (x *CreateCollectionsDraftReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCollectionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCollectionsReq) Reset() {
	*x = DeleteCollectionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCollectionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollectionsReq) ProtoMessage() {}

func (x *DeleteCollectionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCollectionsReq.ProtoReflect.Descriptor instead.
func (*DeleteCollectionsReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{84}
}

func (x *DeleteCollectionsReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ArticleDraftMarkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ArticleDraftMarkReq) Reset() {
	*x = ArticleDraftMarkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleDraftMarkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleDraftMarkReq) ProtoMessage() {}

func (x *ArticleDraftMarkReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleDraftMarkReq.ProtoReflect.Descriptor instead.
func (*ArticleDraftMarkReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{85}
}

func (x *ArticleDraftMarkReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetArticleDraftListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Draft []*GetArticleDraftListReply_Draft `protobuf:"bytes,1,rep,name=draft,proto3" json:"draft,omitempty"`
}

func (x *GetArticleDraftListReply) Reset() {
	*x = GetArticleDraftListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleDraftListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleDraftListReply) ProtoMessage() {}

func (x *GetArticleDraftListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleDraftListReply.ProtoReflect.Descriptor instead.
func (*GetArticleDraftListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{86}
}

func (x *GetArticleDraftListReply) GetDraft() []*GetArticleDraftListReply_Draft {
	if x != nil {
		return x.Draft
	}
	return nil
}

type SendArticleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendArticleReq) Reset() {
	*x = SendArticleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendArticleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendArticleReq) ProtoMessage() {}

func (x *SendArticleReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendArticleReq.ProtoReflect.Descriptor instead.
func (*SendArticleReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{87}
}

func (x *SendArticleReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SendArticleEditReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendArticleEditReq) Reset() {
	*x = SendArticleEditReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendArticleEditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendArticleEditReq) ProtoMessage() {}

func (x *SendArticleEditReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendArticleEditReq.ProtoReflect.Descriptor instead.
func (*SendArticleEditReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{88}
}

func (x *SendArticleEditReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteArticleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteArticleReq) Reset() {
	*x = DeleteArticleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteArticleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArticleReq) ProtoMessage() {}

func (x *DeleteArticleReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArticleReq.ProtoReflect.Descriptor instead.
func (*DeleteArticleReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{89}
}

func (x *DeleteArticleReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SetArticleAgreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SetArticleAgreeReq) Reset() {
	*x = SetArticleAgreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetArticleAgreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetArticleAgreeReq) ProtoMessage() {}

func (x *SetArticleAgreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetArticleAgreeReq.ProtoReflect.Descriptor instead.
func (*SetArticleAgreeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{90}
}

func (x *SetArticleAgreeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetArticleAgreeReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type SetArticleViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SetArticleViewReq) Reset() {
	*x = SetArticleViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetArticleViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetArticleViewReq) ProtoMessage() {}

func (x *SetArticleViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetArticleViewReq.ProtoReflect.Descriptor instead.
func (*SetArticleViewReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{91}
}

func (x *SetArticleViewReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetArticleViewReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type SetArticleCollectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CollectionsId int32  `protobuf:"varint,2,opt,name=collections_id,json=collectionsId,proto3" json:"collections_id,omitempty"`
	Uuid          string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SetArticleCollectReq) Reset() {
	*x = SetArticleCollectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetArticleCollectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetArticleCollectReq) ProtoMessage() {}

func (x *SetArticleCollectReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetArticleCollectReq.ProtoReflect.Descriptor instead.
func (*SetArticleCollectReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{92}
}

func (x *SetArticleCollectReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetArticleCollectReq) GetCollectionsId() int32 {
	if x != nil {
		return x.CollectionsId
	}
	return 0
}

func (x *SetArticleCollectReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type CancelArticleAgreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *CancelArticleAgreeReq) Reset() {
	*x = CancelArticleAgreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelArticleAgreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelArticleAgreeReq) ProtoMessage() {}

func (x *CancelArticleAgreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelArticleAgreeReq.ProtoReflect.Descriptor instead.
func (*CancelArticleAgreeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{93}
}

func (x *CancelArticleAgreeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CancelArticleAgreeReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type CancelArticleCollectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *CancelArticleCollectReq) Reset() {
	*x = CancelArticleCollectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelArticleCollectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelArticleCollectReq) ProtoMessage() {}

func (x *CancelArticleCollectReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelArticleCollectReq.ProtoReflect.Descriptor instead.
func (*CancelArticleCollectReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{94}
}

func (x *CancelArticleCollectReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CancelArticleCollectReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ArticleStatisticJudgeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ArticleStatisticJudgeReq) Reset() {
	*x = ArticleStatisticJudgeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleStatisticJudgeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleStatisticJudgeReq) ProtoMessage() {}

func (x *ArticleStatisticJudgeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleStatisticJudgeReq.ProtoReflect.Descriptor instead.
func (*ArticleStatisticJudgeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{95}
}

func (x *ArticleStatisticJudgeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ArticleStatisticJudgeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agree   bool `protobuf:"varint,1,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect bool `protobuf:"varint,2,opt,name=collect,proto3" json:"collect,omitempty"`
}

func (x *ArticleStatisticJudgeReply) Reset() {
	*x = ArticleStatisticJudgeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleStatisticJudgeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleStatisticJudgeReply) ProtoMessage() {}

func (x *ArticleStatisticJudgeReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleStatisticJudgeReply.ProtoReflect.Descriptor instead.
func (*ArticleStatisticJudgeReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{96}
}

func (x *ArticleStatisticJudgeReply) GetAgree() bool {
	if x != nil {
		return x.Agree
	}
	return false
}

func (x *ArticleStatisticJudgeReply) GetCollect() bool {
	if x != nil {
		return x.Collect
	}
	return false
}

type GetTalkListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetTalkListReq) Reset() {
	*x = GetTalkListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTalkListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTalkListReq) ProtoMessage() {}

func (x *GetTalkListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTalkListReq.ProtoReflect.Descriptor instead.
func (*GetTalkListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{97}
}

func (x *GetTalkListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetTalkListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Talk []*GetTalkListReply_Talk `protobuf:"bytes,1,rep,name=talk,proto3" json:"talk,omitempty"`
}

func (x *GetTalkListReply) Reset() {
	*x = GetTalkListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTalkListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTalkListReply) ProtoMessage() {}

func (x *GetTalkListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTalkListReply.ProtoReflect.Descriptor instead.
func (*GetTalkListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{98}
}

func (x *GetTalkListReply) GetTalk() []*GetTalkListReply_Talk {
	if x != nil {
		return x.Talk
	}
	return nil
}

type GetTalkCountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetTalkCountReply) Reset() {
	*x = GetTalkCountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTalkCountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTalkCountReply) ProtoMessage() {}

func (x *GetTalkCountReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTalkCountReply.ProtoReflect.Descriptor instead.
func (*GetTalkCountReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{99}
}

func (x *GetTalkCountReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetTalkCountVisitorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetTalkCountVisitorReq) Reset() {
	*x = GetTalkCountVisitorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTalkCountVisitorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTalkCountVisitorReq) ProtoMessage() {}

func (x *GetTalkCountVisitorReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTalkCountVisitorReq.ProtoReflect.Descriptor instead.
func (*GetTalkCountVisitorReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{100}
}

func (x *GetTalkCountVisitorReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetTalkListHotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetTalkListHotReq) Reset() {
	*x = GetTalkListHotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTalkListHotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTalkListHotReq) ProtoMessage() {}

func (x *GetTalkListHotReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTalkListHotReq.ProtoReflect.Descriptor instead.
func (*GetTalkListHotReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{101}
}

func (x *GetTalkListHotReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetTalkListHotReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Talk []*GetTalkListHotReply_Talk `protobuf:"bytes,1,rep,name=talk,proto3" json:"talk,omitempty"`
}

func (x *GetTalkListHotReply) Reset() {
	*x = GetTalkListHotReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTalkListHotReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTalkListHotReply) ProtoMessage() {}

func (x *GetTalkListHotReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTalkListHotReply.ProtoReflect.Descriptor instead.
func (*GetTalkListHotReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{102}
}

func (x *GetTalkListHotReply) GetTalk() []*GetTalkListHotReply_Talk {
	if x != nil {
		return x.Talk
	}
	return nil
}

type GetTalkListStatisticReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetTalkListStatisticReq) Reset() {
	*x = GetTalkListStatisticReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTalkListStatisticReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTalkListStatisticReq) ProtoMessage() {}

func (x *GetTalkListStatisticReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTalkListStatisticReq.ProtoReflect.Descriptor instead.
func (*GetTalkListStatisticReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{103}
}

func (x *GetTalkListStatisticReq) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetTalkListStatisticReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count []*GetTalkListStatisticReply_Count `protobuf:"bytes,1,rep,name=count,proto3" json:"count,omitempty"`
}

func (x *GetTalkListStatisticReply) Reset() {
	*x = GetTalkListStatisticReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTalkListStatisticReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTalkListStatisticReply) ProtoMessage() {}

func (x *GetTalkListStatisticReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTalkListStatisticReply.ProtoReflect.Descriptor instead.
func (*GetTalkListStatisticReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{104}
}

func (x *GetTalkListStatisticReply) GetCount() []*GetTalkListStatisticReply_Count {
	if x != nil {
		return x.Count
	}
	return nil
}

type GetUserTalkListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUserTalkListReq) Reset() {
	*x = GetUserTalkListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTalkListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTalkListReq) ProtoMessage() {}

func (x *GetUserTalkListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTalkListReq.ProtoReflect.Descriptor instead.
func (*GetUserTalkListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{105}
}

func (x *GetUserTalkListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUserTalkListSimpleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUserTalkListSimpleReq) Reset() {
	*x = GetUserTalkListSimpleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTalkListSimpleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTalkListSimpleReq) ProtoMessage() {}

func (x *GetUserTalkListSimpleReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTalkListSimpleReq.ProtoReflect.Descriptor instead.
func (*GetUserTalkListSimpleReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{106}
}

func (x *GetUserTalkListSimpleReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUserTalkListVisitorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetUserTalkListVisitorReq) Reset() {
	*x = GetUserTalkListVisitorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTalkListVisitorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTalkListVisitorReq) ProtoMessage() {}

func (x *GetUserTalkListVisitorReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTalkListVisitorReq.ProtoReflect.Descriptor instead.
func (*GetUserTalkListVisitorReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{107}
}

func (x *GetUserTalkListVisitorReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserTalkListVisitorReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetTalkStatisticReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetTalkStatisticReq) Reset() {
	*x = GetTalkStatisticReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTalkStatisticReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTalkStatisticReq) ProtoMessage() {}

func (x *GetTalkStatisticReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTalkStatisticReq.ProtoReflect.Descriptor instead.
func (*GetTalkStatisticReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{108}
}

func (x *GetTalkStatisticReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetTalkStatisticReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetTalkStatisticReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid    string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Agree   int32  `protobuf:"varint,2,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect int32  `protobuf:"varint,3,opt,name=collect,proto3" json:"collect,omitempty"`
	View    int32  `protobuf:"varint,4,opt,name=view,proto3" json:"view,omitempty"`
	Comment int32  `protobuf:"varint,5,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *GetTalkStatisticReply) Reset() {
	*x = GetTalkStatisticReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTalkStatisticReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTalkStatisticReply) ProtoMessage() {}

func (x *GetTalkStatisticReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTalkStatisticReply.ProtoReflect.Descriptor instead.
func (*GetTalkStatisticReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{109}
}

func (x *GetTalkStatisticReply) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetTalkStatisticReply) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetTalkStatisticReply) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetTalkStatisticReply) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetTalkStatisticReply) GetComment() int32 {
	if x != nil {
		return x.Comment
	}
	return 0
}

type GetLastTalkDraftReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetLastTalkDraftReply) Reset() {
	*x = GetLastTalkDraftReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastTalkDraftReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastTalkDraftReply) ProtoMessage() {}

func (x *GetLastTalkDraftReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastTalkDraftReply.ProtoReflect.Descriptor instead.
func (*GetLastTalkDraftReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{110}
}

func (x *GetLastTalkDraftReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetLastTalkDraftReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetTalkSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Search string `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	Time   string `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *GetTalkSearchReq) Reset() {
	*x = GetTalkSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTalkSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTalkSearchReq) ProtoMessage() {}

func (x *GetTalkSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTalkSearchReq.ProtoReflect.Descriptor instead.
func (*GetTalkSearchReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{111}
}

func (x *GetTalkSearchReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTalkSearchReq) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetTalkSearchReq) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type GetTalkSearchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*GetTalkSearchReply_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int32                      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetTalkSearchReply) Reset() {
	*x = GetTalkSearchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTalkSearchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTalkSearchReply) ProtoMessage() {}

func (x *GetTalkSearchReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTalkSearchReply.ProtoReflect.Descriptor instead.
func (*GetTalkSearchReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{112}
}

func (x *GetTalkSearchReply) GetList() []*GetTalkSearchReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetTalkSearchReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetUserTalkAgreeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agree map[int32]bool `protobuf:"bytes,1,rep,name=agree,proto3" json:"agree,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetUserTalkAgreeReply) Reset() {
	*x = GetUserTalkAgreeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTalkAgreeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTalkAgreeReply) ProtoMessage() {}

func (x *GetUserTalkAgreeReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTalkAgreeReply.ProtoReflect.Descriptor instead.
func (*GetUserTalkAgreeReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{113}
}

func (x *GetUserTalkAgreeReply) GetAgree() map[int32]bool {
	if x != nil {
		return x.Agree
	}
	return nil
}

type GetUserTalkCollectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collect map[int32]bool `protobuf:"bytes,1,rep,name=collect,proto3" json:"collect,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetUserTalkCollectReply) Reset() {
	*x = GetUserTalkCollectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTalkCollectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTalkCollectReply) ProtoMessage() {}

func (x *GetUserTalkCollectReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTalkCollectReply.ProtoReflect.Descriptor instead.
func (*GetUserTalkCollectReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{114}
}

func (x *GetUserTalkCollectReply) GetCollect() map[int32]bool {
	if x != nil {
		return x.Collect
	}
	return nil
}

type CreateTalkDraftReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateTalkDraftReply) Reset() {
	*x = CreateTalkDraftReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTalkDraftReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTalkDraftReply) ProtoMessage() {}

func (x *CreateTalkDraftReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTalkDraftReply.ProtoReflect.Descriptor instead.
func (*CreateTalkDraftReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{115}
}

func (x *CreateTalkDraftReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SendTalkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendTalkReq) Reset() {
	*x = SendTalkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTalkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTalkReq) ProtoMessage() {}

func (x *SendTalkReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTalkReq.ProtoReflect.Descriptor instead.
func (*SendTalkReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{116}
}

func (x *SendTalkReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SendTalkEditReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendTalkEditReq) Reset() {
	*x = SendTalkEditReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTalkEditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTalkEditReq) ProtoMessage() {}

func (x *SendTalkEditReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTalkEditReq.ProtoReflect.Descriptor instead.
func (*SendTalkEditReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{117}
}

func (x *SendTalkEditReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTalkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTalkReq) Reset() {
	*x = DeleteTalkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTalkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTalkReq) ProtoMessage() {}

func (x *DeleteTalkReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTalkReq.ProtoReflect.Descriptor instead.
func (*DeleteTalkReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{118}
}

func (x *DeleteTalkReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SetTalkViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SetTalkViewReq) Reset() {
	*x = SetTalkViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTalkViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTalkViewReq) ProtoMessage() {}

func (x *SetTalkViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTalkViewReq.ProtoReflect.Descriptor instead.
func (*SetTalkViewReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{119}
}

func (x *SetTalkViewReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetTalkViewReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type TalkStatisticJudgeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TalkStatisticJudgeReq) Reset() {
	*x = TalkStatisticJudgeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalkStatisticJudgeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkStatisticJudgeReq) ProtoMessage() {}

func (x *TalkStatisticJudgeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkStatisticJudgeReq.ProtoReflect.Descriptor instead.
func (*TalkStatisticJudgeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{120}
}

func (x *TalkStatisticJudgeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TalkStatisticJudgeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agree   bool `protobuf:"varint,1,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect bool `protobuf:"varint,2,opt,name=collect,proto3" json:"collect,omitempty"`
}

func (x *TalkStatisticJudgeReply) Reset() {
	*x = TalkStatisticJudgeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalkStatisticJudgeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkStatisticJudgeReply) ProtoMessage() {}

func (x *TalkStatisticJudgeReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkStatisticJudgeReply.ProtoReflect.Descriptor instead.
func (*TalkStatisticJudgeReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{121}
}

func (x *TalkStatisticJudgeReply) GetAgree() bool {
	if x != nil {
		return x.Agree
	}
	return false
}

func (x *TalkStatisticJudgeReply) GetCollect() bool {
	if x != nil {
		return x.Collect
	}
	return false
}

type SetTalkAgreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SetTalkAgreeReq) Reset() {
	*x = SetTalkAgreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTalkAgreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTalkAgreeReq) ProtoMessage() {}

func (x *SetTalkAgreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTalkAgreeReq.ProtoReflect.Descriptor instead.
func (*SetTalkAgreeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{122}
}

func (x *SetTalkAgreeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetTalkAgreeReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type SetTalkCollectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CollectionsId int32  `protobuf:"varint,2,opt,name=collections_id,json=collectionsId,proto3" json:"collections_id,omitempty"`
	Uuid          string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SetTalkCollectReq) Reset() {
	*x = SetTalkCollectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTalkCollectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTalkCollectReq) ProtoMessage() {}

func (x *SetTalkCollectReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTalkCollectReq.ProtoReflect.Descriptor instead.
func (*SetTalkCollectReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{123}
}

func (x *SetTalkCollectReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetTalkCollectReq) GetCollectionsId() int32 {
	if x != nil {
		return x.CollectionsId
	}
	return 0
}

func (x *SetTalkCollectReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type CancelTalkAgreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *CancelTalkAgreeReq) Reset() {
	*x = CancelTalkAgreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelTalkAgreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTalkAgreeReq) ProtoMessage() {}

func (x *CancelTalkAgreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTalkAgreeReq.ProtoReflect.Descriptor instead.
func (*CancelTalkAgreeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{124}
}

func (x *CancelTalkAgreeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CancelTalkAgreeReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type CancelTalkCollectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *CancelTalkCollectReq) Reset() {
	*x = CancelTalkCollectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelTalkCollectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTalkCollectReq) ProtoMessage() {}

func (x *CancelTalkCollectReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTalkCollectReq.ProtoReflect.Descriptor instead.
func (*CancelTalkCollectReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{125}
}

func (x *CancelTalkCollectReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CancelTalkCollectReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetLastColumnDraftReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetLastColumnDraftReply) Reset() {
	*x = GetLastColumnDraftReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastColumnDraftReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastColumnDraftReply) ProtoMessage() {}

func (x *GetLastColumnDraftReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastColumnDraftReply.ProtoReflect.Descriptor instead.
func (*GetLastColumnDraftReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{126}
}

func (x *GetLastColumnDraftReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetLastColumnDraftReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type CreateColumnDraftReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateColumnDraftReply) Reset() {
	*x = CreateColumnDraftReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateColumnDraftReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateColumnDraftReply) ProtoMessage() {}

func (x *CreateColumnDraftReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateColumnDraftReply.ProtoReflect.Descriptor instead.
func (*CreateColumnDraftReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{127}
}

func (x *CreateColumnDraftReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SubscribeColumnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SubscribeColumnReq) Reset() {
	*x = SubscribeColumnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeColumnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeColumnReq) ProtoMessage() {}

func (x *SubscribeColumnReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeColumnReq.ProtoReflect.Descriptor instead.
func (*SubscribeColumnReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{128}
}

func (x *SubscribeColumnReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CancelSubscribeColumnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CancelSubscribeColumnReq) Reset() {
	*x = CancelSubscribeColumnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelSubscribeColumnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSubscribeColumnReq) ProtoMessage() {}

func (x *CancelSubscribeColumnReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSubscribeColumnReq.ProtoReflect.Descriptor instead.
func (*CancelSubscribeColumnReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{129}
}

func (x *CancelSubscribeColumnReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SubscribeJudgeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SubscribeJudgeReq) Reset() {
	*x = SubscribeJudgeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeJudgeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeJudgeReq) ProtoMessage() {}

func (x *SubscribeJudgeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeJudgeReq.ProtoReflect.Descriptor instead.
func (*SubscribeJudgeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{130}
}

func (x *SubscribeJudgeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SubscribeJudgeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscribe bool `protobuf:"varint,1,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
}

func (x *SubscribeJudgeReply) Reset() {
	*x = SubscribeJudgeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeJudgeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeJudgeReply) ProtoMessage() {}

func (x *SubscribeJudgeReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeJudgeReply.ProtoReflect.Descriptor instead.
func (*SubscribeJudgeReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{131}
}

func (x *SubscribeJudgeReply) GetSubscribe() bool {
	if x != nil {
		return x.Subscribe
	}
	return false
}

type SendColumnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendColumnReq) Reset() {
	*x = SendColumnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendColumnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendColumnReq) ProtoMessage() {}

func (x *SendColumnReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendColumnReq.ProtoReflect.Descriptor instead.
func (*SendColumnReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{132}
}

func (x *SendColumnReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSubscribeListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetSubscribeListReq) Reset() {
	*x = GetSubscribeListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscribeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscribeListReq) ProtoMessage() {}

func (x *GetSubscribeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscribeListReq.ProtoReflect.Descriptor instead.
func (*GetSubscribeListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{133}
}

func (x *GetSubscribeListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetSubscribeListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscribe []*GetSubscribeListReply_Subscribe `protobuf:"bytes,1,rep,name=subscribe,proto3" json:"subscribe,omitempty"`
}

func (x *GetSubscribeListReply) Reset() {
	*x = GetSubscribeListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscribeListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscribeListReply) ProtoMessage() {}

func (x *GetSubscribeListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscribeListReply.ProtoReflect.Descriptor instead.
func (*GetSubscribeListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{134}
}

func (x *GetSubscribeListReply) GetSubscribe() []*GetSubscribeListReply_Subscribe {
	if x != nil {
		return x.Subscribe
	}
	return nil
}

type GetSubscribeListCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetSubscribeListCountReq) Reset() {
	*x = GetSubscribeListCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscribeListCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscribeListCountReq) ProtoMessage() {}

func (x *GetSubscribeListCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscribeListCountReq.ProtoReflect.Descriptor instead.
func (*GetSubscribeListCountReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{135}
}

func (x *GetSubscribeListCountReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetSubscribeListCountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetSubscribeListCountReply) Reset() {
	*x = GetSubscribeListCountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscribeListCountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscribeListCountReply) ProtoMessage() {}

func (x *GetSubscribeListCountReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscribeListCountReply.ProtoReflect.Descriptor instead.
func (*GetSubscribeListCountReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{136}
}

func (x *GetSubscribeListCountReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetUserFollowsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Follows map[string]bool `protobuf:"bytes,1,rep,name=follows,proto3" json:"follows,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetUserFollowsReply) Reset() {
	*x = GetUserFollowsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserFollowsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFollowsReply) ProtoMessage() {}

func (x *GetUserFollowsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFollowsReply.ProtoReflect.Descriptor instead.
func (*GetUserFollowsReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{137}
}

func (x *GetUserFollowsReply) GetFollows() map[string]bool {
	if x != nil {
		return x.Follows
	}
	return nil
}

type GetColumnListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetColumnListReq) Reset() {
	*x = GetColumnListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnListReq) ProtoMessage() {}

func (x *GetColumnListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnListReq.ProtoReflect.Descriptor instead.
func (*GetColumnListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{138}
}

func (x *GetColumnListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetColumnListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column []*GetColumnListReply_Column `protobuf:"bytes,1,rep,name=column,proto3" json:"column,omitempty"`
}

func (x *GetColumnListReply) Reset() {
	*x = GetColumnListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnListReply) ProtoMessage() {}

func (x *GetColumnListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnListReply.ProtoReflect.Descriptor instead.
func (*GetColumnListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{139}
}

func (x *GetColumnListReply) GetColumn() []*GetColumnListReply_Column {
	if x != nil {
		return x.Column
	}
	return nil
}

type GetColumnListHotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetColumnListHotReq) Reset() {
	*x = GetColumnListHotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnListHotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnListHotReq) ProtoMessage() {}

func (x *GetColumnListHotReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnListHotReq.ProtoReflect.Descriptor instead.
func (*GetColumnListHotReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{140}
}

func (x *GetColumnListHotReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetColumnListHotReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column []*GetColumnListHotReply_Column `protobuf:"bytes,1,rep,name=column,proto3" json:"column,omitempty"`
}

func (x *GetColumnListHotReply) Reset() {
	*x = GetColumnListHotReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnListHotReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnListHotReply) ProtoMessage() {}

func (x *GetColumnListHotReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnListHotReply.ProtoReflect.Descriptor instead.
func (*GetColumnListHotReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{141}
}

func (x *GetColumnListHotReply) GetColumn() []*GetColumnListHotReply_Column {
	if x != nil {
		return x.Column
	}
	return nil
}

type GetColumnListStatisticReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetColumnListStatisticReq) Reset() {
	*x = GetColumnListStatisticReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnListStatisticReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnListStatisticReq) ProtoMessage() {}

func (x *GetColumnListStatisticReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnListStatisticReq.ProtoReflect.Descriptor instead.
func (*GetColumnListStatisticReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{142}
}

func (x *GetColumnListStatisticReq) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetColumnListStatisticReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count []*GetColumnListStatisticReply_Count `protobuf:"bytes,1,rep,name=count,proto3" json:"count,omitempty"`
}

func (x *GetColumnListStatisticReply) Reset() {
	*x = GetColumnListStatisticReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnListStatisticReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnListStatisticReply) ProtoMessage() {}

func (x *GetColumnListStatisticReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnListStatisticReply.ProtoReflect.Descriptor instead.
func (*GetColumnListStatisticReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{143}
}

func (x *GetColumnListStatisticReply) GetCount() []*GetColumnListStatisticReply_Count {
	if x != nil {
		return x.Count
	}
	return nil
}

type GetUserColumnListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUserColumnListReq) Reset() {
	*x = GetUserColumnListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserColumnListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserColumnListReq) ProtoMessage() {}

func (x *GetUserColumnListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserColumnListReq.ProtoReflect.Descriptor instead.
func (*GetUserColumnListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{144}
}

func (x *GetUserColumnListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUserColumnListSimpleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUserColumnListSimpleReq) Reset() {
	*x = GetUserColumnListSimpleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserColumnListSimpleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserColumnListSimpleReq) ProtoMessage() {}

func (x *GetUserColumnListSimpleReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserColumnListSimpleReq.ProtoReflect.Descriptor instead.
func (*GetUserColumnListSimpleReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{145}
}

func (x *GetUserColumnListSimpleReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUserColumnListVisitorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetUserColumnListVisitorReq) Reset() {
	*x = GetUserColumnListVisitorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserColumnListVisitorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserColumnListVisitorReq) ProtoMessage() {}

func (x *GetUserColumnListVisitorReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserColumnListVisitorReq.ProtoReflect.Descriptor instead.
func (*GetUserColumnListVisitorReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{146}
}

func (x *GetUserColumnListVisitorReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserColumnListVisitorReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetColumnArticleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetColumnArticleListReq) Reset() {
	*x = GetColumnArticleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnArticleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnArticleListReq) ProtoMessage() {}

func (x *GetColumnArticleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnArticleListReq.ProtoReflect.Descriptor instead.
func (*GetColumnArticleListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{147}
}

func (x *GetColumnArticleListReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetColumnCountVisitorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetColumnCountVisitorReq) Reset() {
	*x = GetColumnCountVisitorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnCountVisitorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnCountVisitorReq) ProtoMessage() {}

func (x *GetColumnCountVisitorReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnCountVisitorReq.ProtoReflect.Descriptor instead.
func (*GetColumnCountVisitorReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{148}
}

func (x *GetColumnCountVisitorReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetColumnCountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetColumnCountReply) Reset() {
	*x = GetColumnCountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnCountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnCountReply) ProtoMessage() {}

func (x *GetColumnCountReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnCountReply.ProtoReflect.Descriptor instead.
func (*GetColumnCountReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{149}
}

func (x *GetColumnCountReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetColumnSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Search string `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	Time   string `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *GetColumnSearchReq) Reset() {
	*x = GetColumnSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnSearchReq) ProtoMessage() {}

func (x *GetColumnSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnSearchReq.ProtoReflect.Descriptor instead.
func (*GetColumnSearchReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{150}
}

func (x *GetColumnSearchReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetColumnSearchReq) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetColumnSearchReq) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type GetColumnSearchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*GetColumnSearchReply_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int32                        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetColumnSearchReply) Reset() {
	*x = GetColumnSearchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnSearchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnSearchReply) ProtoMessage() {}

func (x *GetColumnSearchReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnSearchReply.ProtoReflect.Descriptor instead.
func (*GetColumnSearchReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{151}
}

func (x *GetColumnSearchReply) GetList() []*GetColumnSearchReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetColumnSearchReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SendColumnEditReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendColumnEditReq) Reset() {
	*x = SendColumnEditReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendColumnEditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendColumnEditReq) ProtoMessage() {}

func (x *SendColumnEditReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendColumnEditReq.ProtoReflect.Descriptor instead.
func (*SendColumnEditReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{152}
}

func (x *SendColumnEditReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteColumnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteColumnReq) Reset() {
	*x = DeleteColumnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteColumnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteColumnReq) ProtoMessage() {}

func (x *DeleteColumnReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteColumnReq.ProtoReflect.Descriptor instead.
func (*DeleteColumnReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{153}
}

func (x *DeleteColumnReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetColumnStatisticReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetColumnStatisticReq) Reset() {
	*x = GetColumnStatisticReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnStatisticReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnStatisticReq) ProtoMessage() {}

func (x *GetColumnStatisticReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnStatisticReq.ProtoReflect.Descriptor instead.
func (*GetColumnStatisticReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{154}
}

func (x *GetColumnStatisticReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetColumnStatisticReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetColumnStatisticReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid    string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Agree   int32  `protobuf:"varint,2,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect int32  `protobuf:"varint,3,opt,name=collect,proto3" json:"collect,omitempty"`
	View    int32  `protobuf:"varint,4,opt,name=view,proto3" json:"view,omitempty"`
}

func (x *GetColumnStatisticReply) Reset() {
	*x = GetColumnStatisticReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnStatisticReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnStatisticReply) ProtoMessage() {}

func (x *GetColumnStatisticReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnStatisticReply.ProtoReflect.Descriptor instead.
func (*GetColumnStatisticReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{155}
}

func (x *GetColumnStatisticReply) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetColumnStatisticReply) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetColumnStatisticReply) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetColumnStatisticReply) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

type GetUserColumnAgreeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agree map[int32]bool `protobuf:"bytes,1,rep,name=agree,proto3" json:"agree,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetUserColumnAgreeReply) Reset() {
	*x = GetUserColumnAgreeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserColumnAgreeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserColumnAgreeReply) ProtoMessage() {}

func (x *GetUserColumnAgreeReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserColumnAgreeReply.ProtoReflect.Descriptor instead.
func (*GetUserColumnAgreeReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{156}
}

func (x *GetUserColumnAgreeReply) GetAgree() map[int32]bool {
	if x != nil {
		return x.Agree
	}
	return nil
}

type GetUserColumnCollectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collect map[int32]bool `protobuf:"bytes,1,rep,name=collect,proto3" json:"collect,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetUserColumnCollectReply) Reset() {
	*x = GetUserColumnCollectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserColumnCollectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserColumnCollectReply) ProtoMessage() {}

func (x *GetUserColumnCollectReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserColumnCollectReply.ProtoReflect.Descriptor instead.
func (*GetUserColumnCollectReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{157}
}

func (x *GetUserColumnCollectReply) GetCollect() map[int32]bool {
	if x != nil {
		return x.Collect
	}
	return nil
}

type GetUserSubscribeColumnReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscribe map[int32]bool `protobuf:"bytes,1,rep,name=subscribe,proto3" json:"subscribe,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetUserSubscribeColumnReply) Reset() {
	*x = GetUserSubscribeColumnReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSubscribeColumnReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSubscribeColumnReply) ProtoMessage() {}

func (x *GetUserSubscribeColumnReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSubscribeColumnReply.ProtoReflect.Descriptor instead.
func (*GetUserSubscribeColumnReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{158}
}

func (x *GetUserSubscribeColumnReply) GetSubscribe() map[int32]bool {
	if x != nil {
		return x.Subscribe
	}
	return nil
}

type ColumnStatisticJudgeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ColumnStatisticJudgeReq) Reset() {
	*x = ColumnStatisticJudgeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnStatisticJudgeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnStatisticJudgeReq) ProtoMessage() {}

func (x *ColumnStatisticJudgeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnStatisticJudgeReq.ProtoReflect.Descriptor instead.
func (*ColumnStatisticJudgeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{159}
}

func (x *ColumnStatisticJudgeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ColumnStatisticJudgeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agree   bool `protobuf:"varint,1,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect bool `protobuf:"varint,2,opt,name=collect,proto3" json:"collect,omitempty"`
}

func (x *ColumnStatisticJudgeReply) Reset() {
	*x = ColumnStatisticJudgeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnStatisticJudgeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnStatisticJudgeReply) ProtoMessage() {}

func (x *ColumnStatisticJudgeReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnStatisticJudgeReply.ProtoReflect.Descriptor instead.
func (*ColumnStatisticJudgeReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{160}
}

func (x *ColumnStatisticJudgeReply) GetAgree() bool {
	if x != nil {
		return x.Agree
	}
	return false
}

func (x *ColumnStatisticJudgeReply) GetCollect() bool {
	if x != nil {
		return x.Collect
	}
	return false
}

type SetColumnAgreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SetColumnAgreeReq) Reset() {
	*x = SetColumnAgreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetColumnAgreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetColumnAgreeReq) ProtoMessage() {}

func (x *SetColumnAgreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetColumnAgreeReq.ProtoReflect.Descriptor instead.
func (*SetColumnAgreeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{161}
}

func (x *SetColumnAgreeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetColumnAgreeReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type CancelColumnAgreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *CancelColumnAgreeReq) Reset() {
	*x = CancelColumnAgreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelColumnAgreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelColumnAgreeReq) ProtoMessage() {}

func (x *CancelColumnAgreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelColumnAgreeReq.ProtoReflect.Descriptor instead.
func (*CancelColumnAgreeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{162}
}

func (x *CancelColumnAgreeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CancelColumnAgreeReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type SetColumnCollectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CollectionsId int32  `protobuf:"varint,2,opt,name=collections_id,json=collectionsId,proto3" json:"collections_id,omitempty"`
	Uuid          string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SetColumnCollectReq) Reset() {
	*x = SetColumnCollectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetColumnCollectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetColumnCollectReq) ProtoMessage() {}

func (x *SetColumnCollectReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetColumnCollectReq.ProtoReflect.Descriptor instead.
func (*SetColumnCollectReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{163}
}

func (x *SetColumnCollectReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetColumnCollectReq) GetCollectionsId() int32 {
	if x != nil {
		return x.CollectionsId
	}
	return 0
}

func (x *SetColumnCollectReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type CancelColumnCollectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *CancelColumnCollectReq) Reset() {
	*x = CancelColumnCollectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelColumnCollectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelColumnCollectReq) ProtoMessage() {}

func (x *CancelColumnCollectReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelColumnCollectReq.ProtoReflect.Descriptor instead.
func (*CancelColumnCollectReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{164}
}

func (x *CancelColumnCollectReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CancelColumnCollectReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type SetColumnViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SetColumnViewReq) Reset() {
	*x = SetColumnViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetColumnViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetColumnViewReq) ProtoMessage() {}

func (x *SetColumnViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetColumnViewReq.ProtoReflect.Descriptor instead.
func (*SetColumnViewReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{165}
}

func (x *SetColumnViewReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetColumnViewReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type AddColumnIncludesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ArticleId int32 `protobuf:"varint,2,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
}

func (x *AddColumnIncludesReq) Reset() {
	*x = AddColumnIncludesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddColumnIncludesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddColumnIncludesReq) ProtoMessage() {}

func (x *AddColumnIncludesReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddColumnIncludesReq.ProtoReflect.Descriptor instead.
func (*AddColumnIncludesReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{166}
}

func (x *AddColumnIncludesReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddColumnIncludesReq) GetArticleId() int32 {
	if x != nil {
		return x.ArticleId
	}
	return 0
}

type DeleteColumnIncludesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ArticleId int32 `protobuf:"varint,2,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
}

func (x *DeleteColumnIncludesReq) Reset() {
	*x = DeleteColumnIncludesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteColumnIncludesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteColumnIncludesReq) ProtoMessage() {}

func (x *DeleteColumnIncludesReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteColumnIncludesReq.ProtoReflect.Descriptor instead.
func (*DeleteColumnIncludesReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{167}
}

func (x *DeleteColumnIncludesReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteColumnIncludesReq) GetArticleId() int32 {
	if x != nil {
		return x.ArticleId
	}
	return 0
}

type GetNewsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetNewsReq) Reset() {
	*x = GetNewsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsReq) ProtoMessage() {}

func (x *GetNewsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsReq.ProtoReflect.Descriptor instead.
func (*GetNewsReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{168}
}

func (x *GetNewsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetNewsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	News []*GetNewsReply_News `protobuf:"bytes,1,rep,name=news,proto3" json:"news,omitempty"`
}

func (x *GetNewsReply) Reset() {
	*x = GetNewsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsReply) ProtoMessage() {}

func (x *GetNewsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsReply.ProtoReflect.Descriptor instead.
func (*GetNewsReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{169}
}

func (x *GetNewsReply) GetNews() []*GetNewsReply_News {
	if x != nil {
		return x.News
	}
	return nil
}

type GetAchievementListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuids []string `protobuf:"bytes,1,rep,name=uuids,proto3" json:"uuids,omitempty"`
}

func (x *GetAchievementListReq) Reset() {
	*x = GetAchievementListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAchievementListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAchievementListReq) ProtoMessage() {}

func (x *GetAchievementListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAchievementListReq.ProtoReflect.Descriptor instead.
func (*GetAchievementListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{170}
}

func (x *GetAchievementListReq) GetUuids() []string {
	if x != nil {
		return x.Uuids
	}
	return nil
}

type GetAchievementListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Achievement []*GetAchievementListReply_Achievement `protobuf:"bytes,1,rep,name=achievement,proto3" json:"achievement,omitempty"`
}

func (x *GetAchievementListReply) Reset() {
	*x = GetAchievementListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAchievementListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAchievementListReply) ProtoMessage() {}

func (x *GetAchievementListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAchievementListReply.ProtoReflect.Descriptor instead.
func (*GetAchievementListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{171}
}

func (x *GetAchievementListReply) GetAchievement() []*GetAchievementListReply_Achievement {
	if x != nil {
		return x.Achievement
	}
	return nil
}

type GetUserAchievementReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetUserAchievementReq) Reset() {
	*x = GetUserAchievementReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAchievementReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAchievementReq) ProtoMessage() {}

func (x *GetUserAchievementReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAchievementReq.ProtoReflect.Descriptor instead.
func (*GetUserAchievementReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{172}
}

func (x *GetUserAchievementReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetUserAchievementReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agree    int32 `protobuf:"varint,1,opt,name=agree,proto3" json:"agree,omitempty"`
	View     int32 `protobuf:"varint,2,opt,name=view,proto3" json:"view,omitempty"`
	Collect  int32 `protobuf:"varint,3,opt,name=collect,proto3" json:"collect,omitempty"`
	Follow   int32 `protobuf:"varint,4,opt,name=follow,proto3" json:"follow,omitempty"`
	Followed int32 `protobuf:"varint,5,opt,name=followed,proto3" json:"followed,omitempty"`
}

func (x *GetUserAchievementReply) Reset() {
	*x = GetUserAchievementReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAchievementReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAchievementReply) ProtoMessage() {}

func (x *GetUserAchievementReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAchievementReply.ProtoReflect.Descriptor instead.
func (*GetUserAchievementReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{173}
}

func (x *GetUserAchievementReply) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetUserAchievementReply) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetUserAchievementReply) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetUserAchievementReply) GetFollow() int32 {
	if x != nil {
		return x.Follow
	}
	return 0
}

func (x *GetUserAchievementReply) GetFollowed() int32 {
	if x != nil {
		return x.Followed
	}
	return 0
}

type GetUserMedalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetUserMedalReq) Reset() {
	*x = GetUserMedalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserMedalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserMedalReq) ProtoMessage() {}

func (x *GetUserMedalReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserMedalReq.ProtoReflect.Descriptor instead.
func (*GetUserMedalReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{174}
}

func (x *GetUserMedalReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetUserMedalReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creation1 int32 `protobuf:"varint,1,opt,name=creation1,proto3" json:"creation1,omitempty"`
	Creation2 int32 `protobuf:"varint,2,opt,name=creation2,proto3" json:"creation2,omitempty"`
	Creation3 int32 `protobuf:"varint,3,opt,name=creation3,proto3" json:"creation3,omitempty"`
	Creation4 int32 `protobuf:"varint,4,opt,name=creation4,proto3" json:"creation4,omitempty"`
	Creation5 int32 `protobuf:"varint,5,opt,name=creation5,proto3" json:"creation5,omitempty"`
	Creation6 int32 `protobuf:"varint,6,opt,name=creation6,proto3" json:"creation6,omitempty"`
	Creation7 int32 `protobuf:"varint,7,opt,name=creation7,proto3" json:"creation7,omitempty"`
	Agree1    int32 `protobuf:"varint,8,opt,name=agree1,proto3" json:"agree1,omitempty"`
	Agree2    int32 `protobuf:"varint,9,opt,name=agree2,proto3" json:"agree2,omitempty"`
	Agree3    int32 `protobuf:"varint,10,opt,name=agree3,proto3" json:"agree3,omitempty"`
	Agree4    int32 `protobuf:"varint,11,opt,name=agree4,proto3" json:"agree4,omitempty"`
	Agree5    int32 `protobuf:"varint,12,opt,name=agree5,proto3" json:"agree5,omitempty"`
	Agree6    int32 `protobuf:"varint,13,opt,name=agree6,proto3" json:"agree6,omitempty"`
	View1     int32 `protobuf:"varint,14,opt,name=view1,proto3" json:"view1,omitempty"`
	View2     int32 `protobuf:"varint,15,opt,name=view2,proto3" json:"view2,omitempty"`
	View3     int32 `protobuf:"varint,16,opt,name=view3,proto3" json:"view3,omitempty"`
	Comment1  int32 `protobuf:"varint,17,opt,name=comment1,proto3" json:"comment1,omitempty"`
	Comment2  int32 `protobuf:"varint,18,opt,name=comment2,proto3" json:"comment2,omitempty"`
	Comment3  int32 `protobuf:"varint,19,opt,name=comment3,proto3" json:"comment3,omitempty"`
	Collect1  int32 `protobuf:"varint,20,opt,name=collect1,proto3" json:"collect1,omitempty"`
	Collect2  int32 `protobuf:"varint,21,opt,name=collect2,proto3" json:"collect2,omitempty"`
	Collect3  int32 `protobuf:"varint,22,opt,name=collect3,proto3" json:"collect3,omitempty"`
}

func (x *GetUserMedalReply) Reset() {
	*x = GetUserMedalReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserMedalReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserMedalReply) ProtoMessage() {}

func (x *GetUserMedalReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserMedalReply.ProtoReflect.Descriptor instead.
func (*GetUserMedalReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{175}
}

func (x *GetUserMedalReply) GetCreation1() int32 {
	if x != nil {
		return x.Creation1
	}
	return 0
}

func (x *GetUserMedalReply) GetCreation2() int32 {
	if x != nil {
		return x.Creation2
	}
	return 0
}

func (x *GetUserMedalReply) GetCreation3() int32 {
	if x != nil {
		return x.Creation3
	}
	return 0
}

func (x *GetUserMedalReply) GetCreation4() int32 {
	if x != nil {
		return x.Creation4
	}
	return 0
}

func (x *GetUserMedalReply) GetCreation5() int32 {
	if x != nil {
		return x.Creation5
	}
	return 0
}

func (x *GetUserMedalReply) GetCreation6() int32 {
	if x != nil {
		return x.Creation6
	}
	return 0
}

func (x *GetUserMedalReply) GetCreation7() int32 {
	if x != nil {
		return x.Creation7
	}
	return 0
}

func (x *GetUserMedalReply) GetAgree1() int32 {
	if x != nil {
		return x.Agree1
	}
	return 0
}

func (x *GetUserMedalReply) GetAgree2() int32 {
	if x != nil {
		return x.Agree2
	}
	return 0
}

func (x *GetUserMedalReply) GetAgree3() int32 {
	if x != nil {
		return x.Agree3
	}
	return 0
}

func (x *GetUserMedalReply) GetAgree4() int32 {
	if x != nil {
		return x.Agree4
	}
	return 0
}

func (x *GetUserMedalReply) GetAgree5() int32 {
	if x != nil {
		return x.Agree5
	}
	return 0
}

func (x *GetUserMedalReply) GetAgree6() int32 {
	if x != nil {
		return x.Agree6
	}
	return 0
}

func (x *GetUserMedalReply) GetView1() int32 {
	if x != nil {
		return x.View1
	}
	return 0
}

func (x *GetUserMedalReply) GetView2() int32 {
	if x != nil {
		return x.View2
	}
	return 0
}

func (x *GetUserMedalReply) GetView3() int32 {
	if x != nil {
		return x.View3
	}
	return 0
}

func (x *GetUserMedalReply) GetComment1() int32 {
	if x != nil {
		return x.Comment1
	}
	return 0
}

func (x *GetUserMedalReply) GetComment2() int32 {
	if x != nil {
		return x.Comment2
	}
	return 0
}

func (x *GetUserMedalReply) GetComment3() int32 {
	if x != nil {
		return x.Comment3
	}
	return 0
}

func (x *GetUserMedalReply) GetCollect1() int32 {
	if x != nil {
		return x.Collect1
	}
	return 0
}

func (x *GetUserMedalReply) GetCollect2() int32 {
	if x != nil {
		return x.Collect2
	}
	return 0
}

func (x *GetUserMedalReply) GetCollect3() int32 {
	if x != nil {
		return x.Collect3
	}
	return 0
}

type AccessUserMedalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Medal string `protobuf:"bytes,1,opt,name=medal,proto3" json:"medal,omitempty"`
}

func (x *AccessUserMedalReq) Reset() {
	*x = AccessUserMedalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessUserMedalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessUserMedalReq) ProtoMessage() {}

func (x *AccessUserMedalReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessUserMedalReq.ProtoReflect.Descriptor instead.
func (*AccessUserMedalReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{176}
}

func (x *AccessUserMedalReq) GetMedal() string {
	if x != nil {
		return x.Medal
	}
	return ""
}

type GetUserMedalProgressReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creation    int32 `protobuf:"varint,1,opt,name=creation,proto3" json:"creation,omitempty"`
	Agree       int32 `protobuf:"varint,2,opt,name=agree,proto3" json:"agree,omitempty"`
	ActiveAgree int32 `protobuf:"varint,3,opt,name=active_agree,json=activeAgree,proto3" json:"active_agree,omitempty"`
	View        int32 `protobuf:"varint,4,opt,name=view,proto3" json:"view,omitempty"`
	Comment     int32 `protobuf:"varint,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Collect     int32 `protobuf:"varint,6,opt,name=collect,proto3" json:"collect,omitempty"`
}

func (x *GetUserMedalProgressReply) Reset() {
	*x = GetUserMedalProgressReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserMedalProgressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserMedalProgressReply) ProtoMessage() {}

func (x *GetUserMedalProgressReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserMedalProgressReply.ProtoReflect.Descriptor instead.
func (*GetUserMedalProgressReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{177}
}

func (x *GetUserMedalProgressReply) GetCreation() int32 {
	if x != nil {
		return x.Creation
	}
	return 0
}

func (x *GetUserMedalProgressReply) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetUserMedalProgressReply) GetActiveAgree() int32 {
	if x != nil {
		return x.ActiveAgree
	}
	return 0
}

func (x *GetUserMedalProgressReply) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetUserMedalProgressReply) GetComment() int32 {
	if x != nil {
		return x.Comment
	}
	return 0
}

func (x *GetUserMedalProgressReply) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

type SetUserMedalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Medal string `protobuf:"bytes,1,opt,name=medal,proto3" json:"medal,omitempty"`
}

func (x *SetUserMedalReq) Reset() {
	*x = SetUserMedalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserMedalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserMedalReq) ProtoMessage() {}

func (x *SetUserMedalReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserMedalReq.ProtoReflect.Descriptor instead.
func (*SetUserMedalReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{178}
}

func (x *SetUserMedalReq) GetMedal() string {
	if x != nil {
		return x.Medal
	}
	return ""
}

type CancelUserMedalSetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Medal string `protobuf:"bytes,1,opt,name=medal,proto3" json:"medal,omitempty"`
}

func (x *CancelUserMedalSetReq) Reset() {
	*x = CancelUserMedalSetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelUserMedalSetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelUserMedalSetReq) ProtoMessage() {}

func (x *CancelUserMedalSetReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelUserMedalSetReq.ProtoReflect.Descriptor instead.
func (*CancelUserMedalSetReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{179}
}

func (x *CancelUserMedalSetReq) GetMedal() string {
	if x != nil {
		return x.Medal
	}
	return ""
}

type CreateCommentDraftReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateCommentDraftReply) Reset() {
	*x = CreateCommentDraftReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommentDraftReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentDraftReply) ProtoMessage() {}

func (x *CreateCommentDraftReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentDraftReply.ProtoReflect.Descriptor instead.
func (*CreateCommentDraftReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{180}
}

func (x *CreateCommentDraftReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetLastCommentDraftReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetLastCommentDraftReply) Reset() {
	*x = GetLastCommentDraftReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastCommentDraftReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastCommentDraftReply) ProtoMessage() {}

func (x *GetLastCommentDraftReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastCommentDraftReply.ProtoReflect.Descriptor instead.
func (*GetLastCommentDraftReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{181}
}

func (x *GetLastCommentDraftReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetLastCommentDraftReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetUserCommentAgreeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agree map[int32]bool `protobuf:"bytes,1,rep,name=agree,proto3" json:"agree,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetUserCommentAgreeReply) Reset() {
	*x = GetUserCommentAgreeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCommentAgreeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCommentAgreeReply) ProtoMessage() {}

func (x *GetUserCommentAgreeReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCommentAgreeReply.ProtoReflect.Descriptor instead.
func (*GetUserCommentAgreeReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{182}
}

func (x *GetUserCommentAgreeReply) GetAgree() map[int32]bool {
	if x != nil {
		return x.Agree
	}
	return nil
}

type GetCommentUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment           int32 `protobuf:"varint,1,opt,name=comment,proto3" json:"comment,omitempty"`
	ArticleReply      int32 `protobuf:"varint,2,opt,name=article_reply,json=articleReply,proto3" json:"article_reply,omitempty"`
	ArticleReplySub   int32 `protobuf:"varint,3,opt,name=article_reply_sub,json=articleReplySub,proto3" json:"article_reply_sub,omitempty"`
	TalkReply         int32 `protobuf:"varint,4,opt,name=talk_reply,json=talkReply,proto3" json:"talk_reply,omitempty"`
	TalkReplySub      int32 `protobuf:"varint,5,opt,name=talk_reply_sub,json=talkReplySub,proto3" json:"talk_reply_sub,omitempty"`
	ArticleReplied    int32 `protobuf:"varint,6,opt,name=article_replied,json=articleReplied,proto3" json:"article_replied,omitempty"`
	ArticleRepliedSub int32 `protobuf:"varint,7,opt,name=article_replied_sub,json=articleRepliedSub,proto3" json:"article_replied_sub,omitempty"`
	TalkReplied       int32 `protobuf:"varint,8,opt,name=talk_replied,json=talkReplied,proto3" json:"talk_replied,omitempty"`
	TalkRepliedSub    int32 `protobuf:"varint,9,opt,name=talk_replied_sub,json=talkRepliedSub,proto3" json:"talk_replied_sub,omitempty"`
}

func (x *GetCommentUserReply) Reset() {
	*x = GetCommentUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentUserReply) ProtoMessage() {}

func (x *GetCommentUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentUserReply.ProtoReflect.Descriptor instead.
func (*GetCommentUserReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{183}
}

func (x *GetCommentUserReply) GetComment() int32 {
	if x != nil {
		return x.Comment
	}
	return 0
}

func (x *GetCommentUserReply) GetArticleReply() int32 {
	if x != nil {
		return x.ArticleReply
	}
	return 0
}

func (x *GetCommentUserReply) GetArticleReplySub() int32 {
	if x != nil {
		return x.ArticleReplySub
	}
	return 0
}

func (x *GetCommentUserReply) GetTalkReply() int32 {
	if x != nil {
		return x.TalkReply
	}
	return 0
}

func (x *GetCommentUserReply) GetTalkReplySub() int32 {
	if x != nil {
		return x.TalkReplySub
	}
	return 0
}

func (x *GetCommentUserReply) GetArticleReplied() int32 {
	if x != nil {
		return x.ArticleReplied
	}
	return 0
}

func (x *GetCommentUserReply) GetArticleRepliedSub() int32 {
	if x != nil {
		return x.ArticleRepliedSub
	}
	return 0
}

func (x *GetCommentUserReply) GetTalkReplied() int32 {
	if x != nil {
		return x.TalkReplied
	}
	return 0
}

func (x *GetCommentUserReply) GetTalkRepliedSub() int32 {
	if x != nil {
		return x.TalkRepliedSub
	}
	return 0
}

type SendCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendCommentReq) Reset() {
	*x = SendCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommentReq) ProtoMessage() {}

func (x *SendCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommentReq.ProtoReflect.Descriptor instead.
func (*SendCommentReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{184}
}

func (x *SendCommentReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SendSubCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendSubCommentReq) Reset() {
	*x = SendSubCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSubCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSubCommentReq) ProtoMessage() {}

func (x *SendSubCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSubCommentReq.ProtoReflect.Descriptor instead.
func (*SendSubCommentReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{185}
}

func (x *SendSubCommentReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RemoveCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveCommentReq) Reset() {
	*x = RemoveCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCommentReq) ProtoMessage() {}

func (x *RemoveCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCommentReq.ProtoReflect.Descriptor instead.
func (*RemoveCommentReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{186}
}

func (x *RemoveCommentReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RemoveSubCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveSubCommentReq) Reset() {
	*x = RemoveSubCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSubCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSubCommentReq) ProtoMessage() {}

func (x *RemoveSubCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSubCommentReq.ProtoReflect.Descriptor instead.
func (*RemoveSubCommentReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{187}
}

func (x *RemoveSubCommentReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCommentListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	CreationId   int32 `protobuf:"varint,2,opt,name=creationId,proto3" json:"creationId,omitempty"`
	CreationType int32 `protobuf:"varint,3,opt,name=creationType,proto3" json:"creationType,omitempty"`
}

func (x *GetCommentListReq) Reset() {
	*x = GetCommentListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentListReq) ProtoMessage() {}

func (x *GetCommentListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentListReq.ProtoReflect.Descriptor instead.
func (*GetCommentListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{188}
}

func (x *GetCommentListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCommentListReq) GetCreationId() int32 {
	if x != nil {
		return x.CreationId
	}
	return 0
}

func (x *GetCommentListReq) GetCreationType() int32 {
	if x != nil {
		return x.CreationType
	}
	return 0
}

type GetCommentListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment []*GetCommentListReply_Comment `protobuf:"bytes,1,rep,name=comment,proto3" json:"comment,omitempty"`
}

func (x *GetCommentListReply) Reset() {
	*x = GetCommentListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentListReply) ProtoMessage() {}

func (x *GetCommentListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentListReply.ProtoReflect.Descriptor instead.
func (*GetCommentListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{189}
}

func (x *GetCommentListReply) GetComment() []*GetCommentListReply_Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type GetUserCommentArticleReplyListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUserCommentArticleReplyListReq) Reset() {
	*x = GetUserCommentArticleReplyListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCommentArticleReplyListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCommentArticleReplyListReq) ProtoMessage() {}

func (x *GetUserCommentArticleReplyListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCommentArticleReplyListReq.ProtoReflect.Descriptor instead.
func (*GetUserCommentArticleReplyListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{190}
}

func (x *GetUserCommentArticleReplyListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUserCommentArticleReplyListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetUserCommentArticleReplyListReply_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetUserCommentArticleReplyListReply) Reset() {
	*x = GetUserCommentArticleReplyListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCommentArticleReplyListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCommentArticleReplyListReply) ProtoMessage() {}

func (x *GetUserCommentArticleReplyListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCommentArticleReplyListReply.ProtoReflect.Descriptor instead.
func (*GetUserCommentArticleReplyListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{191}
}

func (x *GetUserCommentArticleReplyListReply) GetList() []*GetUserCommentArticleReplyListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type GetUserSubCommentArticleReplyListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUserSubCommentArticleReplyListReq) Reset() {
	*x = GetUserSubCommentArticleReplyListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSubCommentArticleReplyListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSubCommentArticleReplyListReq) ProtoMessage() {}

func (x *GetUserSubCommentArticleReplyListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSubCommentArticleReplyListReq.ProtoReflect.Descriptor instead.
func (*GetUserSubCommentArticleReplyListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{192}
}

func (x *GetUserSubCommentArticleReplyListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUserSubCommentArticleReplyListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetUserSubCommentArticleReplyListReply_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetUserSubCommentArticleReplyListReply) Reset() {
	*x = GetUserSubCommentArticleReplyListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSubCommentArticleReplyListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSubCommentArticleReplyListReply) ProtoMessage() {}

func (x *GetUserSubCommentArticleReplyListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSubCommentArticleReplyListReply.ProtoReflect.Descriptor instead.
func (*GetUserSubCommentArticleReplyListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{193}
}

func (x *GetUserSubCommentArticleReplyListReply) GetList() []*GetUserSubCommentArticleReplyListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type GetUserCommentTalkReplyListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUserCommentTalkReplyListReq) Reset() {
	*x = GetUserCommentTalkReplyListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCommentTalkReplyListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCommentTalkReplyListReq) ProtoMessage() {}

func (x *GetUserCommentTalkReplyListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCommentTalkReplyListReq.ProtoReflect.Descriptor instead.
func (*GetUserCommentTalkReplyListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{194}
}

func (x *GetUserCommentTalkReplyListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUserCommentTalkReplyListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetUserCommentTalkReplyListReply_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetUserCommentTalkReplyListReply) Reset() {
	*x = GetUserCommentTalkReplyListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCommentTalkReplyListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCommentTalkReplyListReply) ProtoMessage() {}

func (x *GetUserCommentTalkReplyListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCommentTalkReplyListReply.ProtoReflect.Descriptor instead.
func (*GetUserCommentTalkReplyListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{195}
}

func (x *GetUserCommentTalkReplyListReply) GetList() []*GetUserCommentTalkReplyListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type GetUserSubCommentTalkReplyListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUserSubCommentTalkReplyListReq) Reset() {
	*x = GetUserSubCommentTalkReplyListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSubCommentTalkReplyListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSubCommentTalkReplyListReq) ProtoMessage() {}

func (x *GetUserSubCommentTalkReplyListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSubCommentTalkReplyListReq.ProtoReflect.Descriptor instead.
func (*GetUserSubCommentTalkReplyListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{196}
}

func (x *GetUserSubCommentTalkReplyListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUserSubCommentTalkReplyListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetUserSubCommentTalkReplyListReply_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetUserSubCommentTalkReplyListReply) Reset() {
	*x = GetUserSubCommentTalkReplyListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSubCommentTalkReplyListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSubCommentTalkReplyListReply) ProtoMessage() {}

func (x *GetUserSubCommentTalkReplyListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSubCommentTalkReplyListReply.ProtoReflect.Descriptor instead.
func (*GetUserSubCommentTalkReplyListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{197}
}

func (x *GetUserSubCommentTalkReplyListReply) GetList() []*GetUserSubCommentTalkReplyListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type GetUserCommentArticleRepliedListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUserCommentArticleRepliedListReq) Reset() {
	*x = GetUserCommentArticleRepliedListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCommentArticleRepliedListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCommentArticleRepliedListReq) ProtoMessage() {}

func (x *GetUserCommentArticleRepliedListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCommentArticleRepliedListReq.ProtoReflect.Descriptor instead.
func (*GetUserCommentArticleRepliedListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{198}
}

func (x *GetUserCommentArticleRepliedListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUserCommentArticleRepliedListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetUserCommentArticleRepliedListReply_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetUserCommentArticleRepliedListReply) Reset() {
	*x = GetUserCommentArticleRepliedListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCommentArticleRepliedListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCommentArticleRepliedListReply) ProtoMessage() {}

func (x *GetUserCommentArticleRepliedListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCommentArticleRepliedListReply.ProtoReflect.Descriptor instead.
func (*GetUserCommentArticleRepliedListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{199}
}

func (x *GetUserCommentArticleRepliedListReply) GetList() []*GetUserCommentArticleRepliedListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type GetUserSubCommentArticleRepliedListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUserSubCommentArticleRepliedListReq) Reset() {
	*x = GetUserSubCommentArticleRepliedListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSubCommentArticleRepliedListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSubCommentArticleRepliedListReq) ProtoMessage() {}

func (x *GetUserSubCommentArticleRepliedListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSubCommentArticleRepliedListReq.ProtoReflect.Descriptor instead.
func (*GetUserSubCommentArticleRepliedListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{200}
}

func (x *GetUserSubCommentArticleRepliedListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUserSubCommentArticleRepliedListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetUserSubCommentArticleRepliedListReply_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetUserSubCommentArticleRepliedListReply) Reset() {
	*x = GetUserSubCommentArticleRepliedListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSubCommentArticleRepliedListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSubCommentArticleRepliedListReply) ProtoMessage() {}

func (x *GetUserSubCommentArticleRepliedListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSubCommentArticleRepliedListReply.ProtoReflect.Descriptor instead.
func (*GetUserSubCommentArticleRepliedListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{201}
}

func (x *GetUserSubCommentArticleRepliedListReply) GetList() []*GetUserSubCommentArticleRepliedListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type GetUserCommentTalkRepliedListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUserCommentTalkRepliedListReq) Reset() {
	*x = GetUserCommentTalkRepliedListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCommentTalkRepliedListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCommentTalkRepliedListReq) ProtoMessage() {}

func (x *GetUserCommentTalkRepliedListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCommentTalkRepliedListReq.ProtoReflect.Descriptor instead.
func (*GetUserCommentTalkRepliedListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{202}
}

func (x *GetUserCommentTalkRepliedListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUserCommentTalkRepliedListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetUserCommentTalkRepliedListReply_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetUserCommentTalkRepliedListReply) Reset() {
	*x = GetUserCommentTalkRepliedListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCommentTalkRepliedListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCommentTalkRepliedListReply) ProtoMessage() {}

func (x *GetUserCommentTalkRepliedListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCommentTalkRepliedListReply.ProtoReflect.Descriptor instead.
func (*GetUserCommentTalkRepliedListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{203}
}

func (x *GetUserCommentTalkRepliedListReply) GetList() []*GetUserCommentTalkRepliedListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type GetUserSubCommentTalkRepliedListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetUserSubCommentTalkRepliedListReq) Reset() {
	*x = GetUserSubCommentTalkRepliedListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSubCommentTalkRepliedListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSubCommentTalkRepliedListReq) ProtoMessage() {}

func (x *GetUserSubCommentTalkRepliedListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSubCommentTalkRepliedListReq.ProtoReflect.Descriptor instead.
func (*GetUserSubCommentTalkRepliedListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{204}
}

func (x *GetUserSubCommentTalkRepliedListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUserSubCommentTalkRepliedListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetUserSubCommentTalkRepliedListReply_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetUserSubCommentTalkRepliedListReply) Reset() {
	*x = GetUserSubCommentTalkRepliedListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSubCommentTalkRepliedListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSubCommentTalkRepliedListReply) ProtoMessage() {}

func (x *GetUserSubCommentTalkRepliedListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSubCommentTalkRepliedListReply.ProtoReflect.Descriptor instead.
func (*GetUserSubCommentTalkRepliedListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{205}
}

func (x *GetUserSubCommentTalkRepliedListReply) GetList() []*GetUserSubCommentTalkRepliedListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type GetSubCommentListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Id   int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSubCommentListReq) Reset() {
	*x = GetSubCommentListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubCommentListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubCommentListReq) ProtoMessage() {}

func (x *GetSubCommentListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubCommentListReq.ProtoReflect.Descriptor instead.
func (*GetSubCommentListReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{206}
}

func (x *GetSubCommentListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetSubCommentListReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSubCommentListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment []*GetSubCommentListReply_Comment `protobuf:"bytes,1,rep,name=comment,proto3" json:"comment,omitempty"`
}

func (x *GetSubCommentListReply) Reset() {
	*x = GetSubCommentListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubCommentListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubCommentListReply) ProtoMessage() {}

func (x *GetSubCommentListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubCommentListReply.ProtoReflect.Descriptor instead.
func (*GetSubCommentListReply) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{207}
}

func (x *GetSubCommentListReply) GetComment() []*GetSubCommentListReply_Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type SetCommentAgreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid         string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	CreationId   int32  `protobuf:"varint,3,opt,name=creationId,proto3" json:"creationId,omitempty"`
	CreationType int32  `protobuf:"varint,4,opt,name=creationType,proto3" json:"creationType,omitempty"`
}

func (x *SetCommentAgreeReq) Reset() {
	*x = SetCommentAgreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCommentAgreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCommentAgreeReq) ProtoMessage() {}

func (x *SetCommentAgreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCommentAgreeReq.ProtoReflect.Descriptor instead.
func (*SetCommentAgreeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{208}
}

func (x *SetCommentAgreeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetCommentAgreeReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SetCommentAgreeReq) GetCreationId() int32 {
	if x != nil {
		return x.CreationId
	}
	return 0
}

func (x *SetCommentAgreeReq) GetCreationType() int32 {
	if x != nil {
		return x.CreationType
	}
	return 0
}

type SetSubCommentAgreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SetSubCommentAgreeReq) Reset() {
	*x = SetSubCommentAgreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSubCommentAgreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSubCommentAgreeReq) ProtoMessage() {}

func (x *SetSubCommentAgreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSubCommentAgreeReq.ProtoReflect.Descriptor instead.
func (*SetSubCommentAgreeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{209}
}

func (x *SetSubCommentAgreeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetSubCommentAgreeReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type CancelCommentAgreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid         string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	CreationId   int32  `protobuf:"varint,3,opt,name=creationId,proto3" json:"creationId,omitempty"`
	CreationType int32  `protobuf:"varint,4,opt,name=creationType,proto3" json:"creationType,omitempty"`
}

func (x *CancelCommentAgreeReq) Reset() {
	*x = CancelCommentAgreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelCommentAgreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelCommentAgreeReq) ProtoMessage() {}

func (x *CancelCommentAgreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelCommentAgreeReq.ProtoReflect.Descriptor instead.
func (*CancelCommentAgreeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{210}
}

func (x *CancelCommentAgreeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CancelCommentAgreeReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CancelCommentAgreeReq) GetCreationId() int32 {
	if x != nil {
		return x.CreationId
	}
	return 0
}

func (x *CancelCommentAgreeReq) GetCreationType() int32 {
	if x != nil {
		return x.CreationType
	}
	return 0
}

type CancelSubCommentAgreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *CancelSubCommentAgreeReq) Reset() {
	*x = CancelSubCommentAgreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelSubCommentAgreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSubCommentAgreeReq) ProtoMessage() {}

func (x *CancelSubCommentAgreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSubCommentAgreeReq.ProtoReflect.Descriptor instead.
func (*CancelSubCommentAgreeReq) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{211}
}

func (x *CancelSubCommentAgreeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CancelSubCommentAgreeReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetAvatarReviewReply_Review struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid     string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	CreateAt string `protobuf:"bytes,3,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	JobId    string `protobuf:"bytes,4,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Url      string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Label    string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	Result   int32  `protobuf:"varint,7,opt,name=result,proto3" json:"result,omitempty"`
	Score    int32  `protobuf:"varint,8,opt,name=score,proto3" json:"score,omitempty"`
	Category string `protobuf:"bytes,9,opt,name=category,proto3" json:"category,omitempty"`
	SubLabel string `protobuf:"bytes,10,opt,name=subLabel,proto3" json:"subLabel,omitempty"`
}

func (x *GetAvatarReviewReply_Review) Reset() {
	*x = GetAvatarReviewReply_Review{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvatarReviewReply_Review) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvatarReviewReply_Review) ProtoMessage() {}

func (x *GetAvatarReviewReply_Review) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvatarReviewReply_Review.ProtoReflect.Descriptor instead.
func (*GetAvatarReviewReply_Review) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GetAvatarReviewReply_Review) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetAvatarReviewReply_Review) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetAvatarReviewReply_Review) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *GetAvatarReviewReply_Review) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *GetAvatarReviewReply_Review) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetAvatarReviewReply_Review) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *GetAvatarReviewReply_Review) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *GetAvatarReviewReply_Review) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *GetAvatarReviewReply_Review) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *GetAvatarReviewReply_Review) GetSubLabel() string {
	if x != nil {
		return x.SubLabel
	}
	return ""
}

type GetCoverReviewReply_Review struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid     string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	CreateAt string `protobuf:"bytes,3,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	JobId    string `protobuf:"bytes,4,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Url      string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Label    string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	Result   int32  `protobuf:"varint,7,opt,name=result,proto3" json:"result,omitempty"`
	Score    int32  `protobuf:"varint,8,opt,name=score,proto3" json:"score,omitempty"`
	Category string `protobuf:"bytes,9,opt,name=category,proto3" json:"category,omitempty"`
	SubLabel string `protobuf:"bytes,10,opt,name=subLabel,proto3" json:"subLabel,omitempty"`
}

func (x *GetCoverReviewReply_Review) Reset() {
	*x = GetCoverReviewReply_Review{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoverReviewReply_Review) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoverReviewReply_Review) ProtoMessage() {}

func (x *GetCoverReviewReply_Review) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoverReviewReply_Review.ProtoReflect.Descriptor instead.
func (*GetCoverReviewReply_Review) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{13, 0}
}

func (x *GetCoverReviewReply_Review) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCoverReviewReply_Review) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetCoverReviewReply_Review) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *GetCoverReviewReply_Review) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *GetCoverReviewReply_Review) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetCoverReviewReply_Review) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *GetCoverReviewReply_Review) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *GetCoverReviewReply_Review) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *GetCoverReviewReply_Review) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *GetCoverReviewReply_Review) GetSubLabel() string {
	if x != nil {
		return x.SubLabel
	}
	return ""
}

type GetProfileListReply_Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Introduce string `protobuf:"bytes,3,opt,name=introduce,proto3" json:"introduce,omitempty"`
}

func (x *GetProfileListReply_Profile) Reset() {
	*x = GetProfileListReply_Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileListReply_Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileListReply_Profile) ProtoMessage() {}

func (x *GetProfileListReply_Profile) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileListReply_Profile.ProtoReflect.Descriptor instead.
func (*GetProfileListReply_Profile) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{17, 0}
}

func (x *GetProfileListReply_Profile) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetProfileListReply_Profile) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetProfileListReply_Profile) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

type GetColumnSubscribesReply_Subscribes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SubscribeJudge int32 `protobuf:"varint,2,opt,name=subscribe_judge,json=subscribeJudge,proto3" json:"subscribe_judge,omitempty"`
}

func (x *GetColumnSubscribesReply_Subscribes) Reset() {
	*x = GetColumnSubscribesReply_Subscribes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnSubscribesReply_Subscribes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnSubscribesReply_Subscribes) ProtoMessage() {}

func (x *GetColumnSubscribesReply_Subscribes) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnSubscribesReply_Subscribes.ProtoReflect.Descriptor instead.
func (*GetColumnSubscribesReply_Subscribes) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{23, 0}
}

func (x *GetColumnSubscribesReply_Subscribes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetColumnSubscribesReply_Subscribes) GetSubscribeJudge() int32 {
	if x != nil {
		return x.SubscribeJudge
	}
	return 0
}

type GetFollowListReply_Follow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Introduce string `protobuf:"bytes,3,opt,name=introduce,proto3" json:"introduce,omitempty"`
	Agree     int32  `protobuf:"varint,4,opt,name=agree,proto3" json:"agree,omitempty"`
	View      int32  `protobuf:"varint,5,opt,name=view,proto3" json:"view,omitempty"`
	Follow    int32  `protobuf:"varint,6,opt,name=follow,proto3" json:"follow,omitempty"`
	Followed  int32  `protobuf:"varint,7,opt,name=followed,proto3" json:"followed,omitempty"`
}

func (x *GetFollowListReply_Follow) Reset() {
	*x = GetFollowListReply_Follow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowListReply_Follow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowListReply_Follow) ProtoMessage() {}

func (x *GetFollowListReply_Follow) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowListReply_Follow.ProtoReflect.Descriptor instead.
func (*GetFollowListReply_Follow) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{25, 0}
}

func (x *GetFollowListReply_Follow) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetFollowListReply_Follow) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetFollowListReply_Follow) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *GetFollowListReply_Follow) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetFollowListReply_Follow) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetFollowListReply_Follow) GetFollow() int32 {
	if x != nil {
		return x.Follow
	}
	return 0
}

func (x *GetFollowListReply_Follow) GetFollowed() int32 {
	if x != nil {
		return x.Followed
	}
	return 0
}

type GetFollowedListReply_Follow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Introduce string `protobuf:"bytes,3,opt,name=introduce,proto3" json:"introduce,omitempty"`
	Agree     int32  `protobuf:"varint,4,opt,name=agree,proto3" json:"agree,omitempty"`
	View      int32  `protobuf:"varint,5,opt,name=view,proto3" json:"view,omitempty"`
	Follow    int32  `protobuf:"varint,6,opt,name=follow,proto3" json:"follow,omitempty"`
	Followed  int32  `protobuf:"varint,7,opt,name=followed,proto3" json:"followed,omitempty"`
}

func (x *GetFollowedListReply_Follow) Reset() {
	*x = GetFollowedListReply_Follow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowedListReply_Follow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowedListReply_Follow) ProtoMessage() {}

func (x *GetFollowedListReply_Follow) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowedListReply_Follow.ProtoReflect.Descriptor instead.
func (*GetFollowedListReply_Follow) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{29, 0}
}

func (x *GetFollowedListReply_Follow) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetFollowedListReply_Follow) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetFollowedListReply_Follow) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *GetFollowedListReply_Follow) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetFollowedListReply_Follow) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetFollowedListReply_Follow) GetFollow() int32 {
	if x != nil {
		return x.Follow
	}
	return 0
}

func (x *GetFollowedListReply_Follow) GetFollowed() int32 {
	if x != nil {
		return x.Followed
	}
	return 0
}

type GetUserSearchReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Introduce string `protobuf:"bytes,3,opt,name=introduce,proto3" json:"introduce,omitempty"`
	Agree     int32  `protobuf:"varint,4,opt,name=agree,proto3" json:"agree,omitempty"`
	View      int32  `protobuf:"varint,5,opt,name=view,proto3" json:"view,omitempty"`
	Follow    int32  `protobuf:"varint,6,opt,name=follow,proto3" json:"follow,omitempty"`
	Followed  int32  `protobuf:"varint,7,opt,name=followed,proto3" json:"followed,omitempty"`
}

func (x *GetUserSearchReply_List) Reset() {
	*x = GetUserSearchReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSearchReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSearchReply_List) ProtoMessage() {}

func (x *GetUserSearchReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSearchReply_List.ProtoReflect.Descriptor instead.
func (*GetUserSearchReply_List) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{34, 0}
}

func (x *GetUserSearchReply_List) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetUserSearchReply_List) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetUserSearchReply_List) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *GetUserSearchReply_List) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetUserSearchReply_List) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetUserSearchReply_List) GetFollow() int32 {
	if x != nil {
		return x.Follow
	}
	return 0
}

func (x *GetUserSearchReply_List) GetFollowed() int32 {
	if x != nil {
		return x.Followed
	}
	return 0
}

type GetLeaderBoardReply_Board struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Mode string `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *GetLeaderBoardReply_Board) Reset() {
	*x = GetLeaderBoardReply_Board{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaderBoardReply_Board) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderBoardReply_Board) ProtoMessage() {}

func (x *GetLeaderBoardReply_Board) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderBoardReply_Board.ProtoReflect.Descriptor instead.
func (*GetLeaderBoardReply_Board) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{44, 0}
}

func (x *GetLeaderBoardReply_Board) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetLeaderBoardReply_Board) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetLeaderBoardReply_Board) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type GetArticleListReply_Article struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Agree   int32  `protobuf:"varint,2,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect int32  `protobuf:"varint,3,opt,name=collect,proto3" json:"collect,omitempty"`
	Comment int32  `protobuf:"varint,4,opt,name=comment,proto3" json:"comment,omitempty"`
	View    int32  `protobuf:"varint,5,opt,name=view,proto3" json:"view,omitempty"`
	Uuid    string `protobuf:"bytes,6,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetArticleListReply_Article) Reset() {
	*x = GetArticleListReply_Article{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListReply_Article) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListReply_Article) ProtoMessage() {}

func (x *GetArticleListReply_Article) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListReply_Article.ProtoReflect.Descriptor instead.
func (*GetArticleListReply_Article) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{57, 0}
}

func (x *GetArticleListReply_Article) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetArticleListReply_Article) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetArticleListReply_Article) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetArticleListReply_Article) GetComment() int32 {
	if x != nil {
		return x.Comment
	}
	return 0
}

func (x *GetArticleListReply_Article) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetArticleListReply_Article) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetArticleListHotReply_Article struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Agree   int32  `protobuf:"varint,2,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect int32  `protobuf:"varint,3,opt,name=collect,proto3" json:"collect,omitempty"`
	Comment int32  `protobuf:"varint,4,opt,name=comment,proto3" json:"comment,omitempty"`
	View    int32  `protobuf:"varint,5,opt,name=view,proto3" json:"view,omitempty"`
	Uuid    string `protobuf:"bytes,6,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetArticleListHotReply_Article) Reset() {
	*x = GetArticleListHotReply_Article{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListHotReply_Article) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListHotReply_Article) ProtoMessage() {}

func (x *GetArticleListHotReply_Article) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListHotReply_Article.ProtoReflect.Descriptor instead.
func (*GetArticleListHotReply_Article) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{61, 0}
}

func (x *GetArticleListHotReply_Article) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetArticleListHotReply_Article) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetArticleListHotReply_Article) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetArticleListHotReply_Article) GetComment() int32 {
	if x != nil {
		return x.Comment
	}
	return 0
}

func (x *GetArticleListHotReply_Article) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetArticleListHotReply_Article) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetArticleListStatisticReply_Count struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Agree   int32 `protobuf:"varint,2,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect int32 `protobuf:"varint,3,opt,name=collect,proto3" json:"collect,omitempty"`
	View    int32 `protobuf:"varint,4,opt,name=view,proto3" json:"view,omitempty"`
	Comment int32 `protobuf:"varint,5,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *GetArticleListStatisticReply_Count) Reset() {
	*x = GetArticleListStatisticReply_Count{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListStatisticReply_Count) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListStatisticReply_Count) ProtoMessage() {}

func (x *GetArticleListStatisticReply_Count) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListStatisticReply_Count.ProtoReflect.Descriptor instead.
func (*GetArticleListStatisticReply_Count) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{70, 0}
}

func (x *GetArticleListStatisticReply_Count) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetArticleListStatisticReply_Count) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetArticleListStatisticReply_Count) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetArticleListStatisticReply_Count) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetArticleListStatisticReply_Count) GetComment() int32 {
	if x != nil {
		return x.Comment
	}
	return 0
}

type GetArticleSearchReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Tags    string `protobuf:"bytes,3,opt,name=tags,proto3" json:"tags,omitempty"`
	Text    string `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	Cover   string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	Update  string `protobuf:"bytes,6,opt,name=update,proto3" json:"update,omitempty"`
	Uuid    string `protobuf:"bytes,7,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Agree   int32  `protobuf:"varint,8,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect int32  `protobuf:"varint,9,opt,name=collect,proto3" json:"collect,omitempty"`
	View    int32  `protobuf:"varint,10,opt,name=view,proto3" json:"view,omitempty"`
	Comment int32  `protobuf:"varint,11,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *GetArticleSearchReply_List) Reset() {
	*x = GetArticleSearchReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleSearchReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleSearchReply_List) ProtoMessage() {}

func (x *GetArticleSearchReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleSearchReply_List.ProtoReflect.Descriptor instead.
func (*GetArticleSearchReply_List) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{73, 0}
}

func (x *GetArticleSearchReply_List) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetArticleSearchReply_List) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetArticleSearchReply_List) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *GetArticleSearchReply_List) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *GetArticleSearchReply_List) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *GetArticleSearchReply_List) GetUpdate() string {
	if x != nil {
		return x.Update
	}
	return ""
}

func (x *GetArticleSearchReply_List) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetArticleSearchReply_List) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetArticleSearchReply_List) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetArticleSearchReply_List) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetArticleSearchReply_List) GetComment() int32 {
	if x != nil {
		return x.Comment
	}
	return 0
}

type GetCollectionsListReply_Collections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCollectionsListReply_Collections) Reset() {
	*x = GetCollectionsListReply_Collections{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectionsListReply_Collections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionsListReply_Collections) ProtoMessage() {}

func (x *GetCollectionsListReply_Collections) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionsListReply_Collections.ProtoReflect.Descriptor instead.
func (*GetCollectionsListReply_Collections) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{76, 0}
}

func (x *GetCollectionsListReply_Collections) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetArticleDraftListReply_Draft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetArticleDraftListReply_Draft) Reset() {
	*x = GetArticleDraftListReply_Draft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleDraftListReply_Draft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleDraftListReply_Draft) ProtoMessage() {}

func (x *GetArticleDraftListReply_Draft) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleDraftListReply_Draft.ProtoReflect.Descriptor instead.
func (*GetArticleDraftListReply_Draft) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{86, 0}
}

func (x *GetArticleDraftListReply_Draft) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTalkListReply_Talk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Agree   int32  `protobuf:"varint,2,opt,name=agree,proto3" json:"agree,omitempty"`
	View    int32  `protobuf:"varint,3,opt,name=view,proto3" json:"view,omitempty"`
	Collect int32  `protobuf:"varint,4,opt,name=collect,proto3" json:"collect,omitempty"`
	Comment int32  `protobuf:"varint,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Uuid    string `protobuf:"bytes,6,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetTalkListReply_Talk) Reset() {
	*x = GetTalkListReply_Talk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTalkListReply_Talk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTalkListReply_Talk) ProtoMessage() {}

func (x *GetTalkListReply_Talk) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTalkListReply_Talk.ProtoReflect.Descriptor instead.
func (*GetTalkListReply_Talk) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{98, 0}
}

func (x *GetTalkListReply_Talk) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetTalkListReply_Talk) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetTalkListReply_Talk) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetTalkListReply_Talk) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetTalkListReply_Talk) GetComment() int32 {
	if x != nil {
		return x.Comment
	}
	return 0
}

func (x *GetTalkListReply_Talk) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetTalkListHotReply_Talk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Agree   int32  `protobuf:"varint,2,opt,name=agree,proto3" json:"agree,omitempty"`
	View    int32  `protobuf:"varint,3,opt,name=view,proto3" json:"view,omitempty"`
	Collect int32  `protobuf:"varint,4,opt,name=collect,proto3" json:"collect,omitempty"`
	Comment int32  `protobuf:"varint,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Uuid    string `protobuf:"bytes,6,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetTalkListHotReply_Talk) Reset() {
	*x = GetTalkListHotReply_Talk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTalkListHotReply_Talk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTalkListHotReply_Talk) ProtoMessage() {}

func (x *GetTalkListHotReply_Talk) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTalkListHotReply_Talk.ProtoReflect.Descriptor instead.
func (*GetTalkListHotReply_Talk) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{102, 0}
}

func (x *GetTalkListHotReply_Talk) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetTalkListHotReply_Talk) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetTalkListHotReply_Talk) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetTalkListHotReply_Talk) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetTalkListHotReply_Talk) GetComment() int32 {
	if x != nil {
		return x.Comment
	}
	return 0
}

func (x *GetTalkListHotReply_Talk) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetTalkListStatisticReply_Count struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Agree   int32 `protobuf:"varint,2,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect int32 `protobuf:"varint,3,opt,name=collect,proto3" json:"collect,omitempty"`
	View    int32 `protobuf:"varint,4,opt,name=view,proto3" json:"view,omitempty"`
	Comment int32 `protobuf:"varint,5,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *GetTalkListStatisticReply_Count) Reset() {
	*x = GetTalkListStatisticReply_Count{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTalkListStatisticReply_Count) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTalkListStatisticReply_Count) ProtoMessage() {}

func (x *GetTalkListStatisticReply_Count) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTalkListStatisticReply_Count.ProtoReflect.Descriptor instead.
func (*GetTalkListStatisticReply_Count) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{104, 0}
}

func (x *GetTalkListStatisticReply_Count) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetTalkListStatisticReply_Count) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetTalkListStatisticReply_Count) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetTalkListStatisticReply_Count) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetTalkListStatisticReply_Count) GetComment() int32 {
	if x != nil {
		return x.Comment
	}
	return 0
}

type GetTalkSearchReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Tags    string `protobuf:"bytes,3,opt,name=tags,proto3" json:"tags,omitempty"`
	Text    string `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	Cover   string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	Update  string `protobuf:"bytes,6,opt,name=update,proto3" json:"update,omitempty"`
	Uuid    string `protobuf:"bytes,7,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Agree   int32  `protobuf:"varint,9,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect int32  `protobuf:"varint,10,opt,name=collect,proto3" json:"collect,omitempty"`
	View    int32  `protobuf:"varint,11,opt,name=view,proto3" json:"view,omitempty"`
	Comment int32  `protobuf:"varint,12,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *GetTalkSearchReply_List) Reset() {
	*x = GetTalkSearchReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTalkSearchReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTalkSearchReply_List) ProtoMessage() {}

func (x *GetTalkSearchReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTalkSearchReply_List.ProtoReflect.Descriptor instead.
func (*GetTalkSearchReply_List) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{112, 0}
}

func (x *GetTalkSearchReply_List) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetTalkSearchReply_List) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetTalkSearchReply_List) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *GetTalkSearchReply_List) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *GetTalkSearchReply_List) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *GetTalkSearchReply_List) GetUpdate() string {
	if x != nil {
		return x.Update
	}
	return ""
}

func (x *GetTalkSearchReply_List) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetTalkSearchReply_List) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetTalkSearchReply_List) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetTalkSearchReply_List) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetTalkSearchReply_List) GetComment() int32 {
	if x != nil {
		return x.Comment
	}
	return 0
}

type GetSubscribeListReply_Subscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid    string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Agree   int32  `protobuf:"varint,3,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect int32  `protobuf:"varint,4,opt,name=collect,proto3" json:"collect,omitempty"`
	View    int32  `protobuf:"varint,5,opt,name=view,proto3" json:"view,omitempty"`
}

func (x *GetSubscribeListReply_Subscribe) Reset() {
	*x = GetSubscribeListReply_Subscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscribeListReply_Subscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscribeListReply_Subscribe) ProtoMessage() {}

func (x *GetSubscribeListReply_Subscribe) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscribeListReply_Subscribe.ProtoReflect.Descriptor instead.
func (*GetSubscribeListReply_Subscribe) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{134, 0}
}

func (x *GetSubscribeListReply_Subscribe) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSubscribeListReply_Subscribe) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetSubscribeListReply_Subscribe) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetSubscribeListReply_Subscribe) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetSubscribeListReply_Subscribe) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

type GetColumnListReply_Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Agree   int32  `protobuf:"varint,2,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect int32  `protobuf:"varint,3,opt,name=collect,proto3" json:"collect,omitempty"`
	View    int32  `protobuf:"varint,4,opt,name=view,proto3" json:"view,omitempty"`
	Uuid    string `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetColumnListReply_Column) Reset() {
	*x = GetColumnListReply_Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnListReply_Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnListReply_Column) ProtoMessage() {}

func (x *GetColumnListReply_Column) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnListReply_Column.ProtoReflect.Descriptor instead.
func (*GetColumnListReply_Column) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{139, 0}
}

func (x *GetColumnListReply_Column) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetColumnListReply_Column) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetColumnListReply_Column) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetColumnListReply_Column) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetColumnListReply_Column) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetColumnListHotReply_Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Agree   int32  `protobuf:"varint,2,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect int32  `protobuf:"varint,3,opt,name=collect,proto3" json:"collect,omitempty"`
	View    int32  `protobuf:"varint,4,opt,name=view,proto3" json:"view,omitempty"`
	Uuid    string `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetColumnListHotReply_Column) Reset() {
	*x = GetColumnListHotReply_Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnListHotReply_Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnListHotReply_Column) ProtoMessage() {}

func (x *GetColumnListHotReply_Column) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnListHotReply_Column.ProtoReflect.Descriptor instead.
func (*GetColumnListHotReply_Column) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{141, 0}
}

func (x *GetColumnListHotReply_Column) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetColumnListHotReply_Column) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetColumnListHotReply_Column) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetColumnListHotReply_Column) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetColumnListHotReply_Column) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetColumnListStatisticReply_Count struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Agree   int32 `protobuf:"varint,2,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect int32 `protobuf:"varint,3,opt,name=collect,proto3" json:"collect,omitempty"`
	View    int32 `protobuf:"varint,4,opt,name=view,proto3" json:"view,omitempty"`
}

func (x *GetColumnListStatisticReply_Count) Reset() {
	*x = GetColumnListStatisticReply_Count{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnListStatisticReply_Count) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnListStatisticReply_Count) ProtoMessage() {}

func (x *GetColumnListStatisticReply_Count) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnListStatisticReply_Count.ProtoReflect.Descriptor instead.
func (*GetColumnListStatisticReply_Count) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{143, 0}
}

func (x *GetColumnListStatisticReply_Count) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetColumnListStatisticReply_Count) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetColumnListStatisticReply_Count) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetColumnListStatisticReply_Count) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

type GetColumnSearchReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags      string `protobuf:"bytes,3,opt,name=tags,proto3" json:"tags,omitempty"`
	Introduce string `protobuf:"bytes,4,opt,name=introduce,proto3" json:"introduce,omitempty"`
	Cover     string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	Update    string `protobuf:"bytes,6,opt,name=update,proto3" json:"update,omitempty"`
	Uuid      string `protobuf:"bytes,7,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Agree     int32  `protobuf:"varint,8,opt,name=agree,proto3" json:"agree,omitempty"`
	Collect   int32  `protobuf:"varint,9,opt,name=collect,proto3" json:"collect,omitempty"`
	View      int32  `protobuf:"varint,10,opt,name=view,proto3" json:"view,omitempty"`
}

func (x *GetColumnSearchReply_List) Reset() {
	*x = GetColumnSearchReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnSearchReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnSearchReply_List) ProtoMessage() {}

func (x *GetColumnSearchReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnSearchReply_List.ProtoReflect.Descriptor instead.
func (*GetColumnSearchReply_List) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{151, 0}
}

func (x *GetColumnSearchReply_List) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetColumnSearchReply_List) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetColumnSearchReply_List) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *GetColumnSearchReply_List) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *GetColumnSearchReply_List) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *GetColumnSearchReply_List) GetUpdate() string {
	if x != nil {
		return x.Update
	}
	return ""
}

func (x *GetColumnSearchReply_List) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetColumnSearchReply_List) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetColumnSearchReply_List) GetCollect() int32 {
	if x != nil {
		return x.Collect
	}
	return 0
}

func (x *GetColumnSearchReply_List) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

type GetNewsReply_News struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Update string `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty"`
	Author string `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Title  string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Text   string `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	Tags   string `protobuf:"bytes,6,opt,name=tags,proto3" json:"tags,omitempty"`
	Cover  string `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`
	Url    string `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetNewsReply_News) Reset() {
	*x = GetNewsReply_News{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewsReply_News) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsReply_News) ProtoMessage() {}

func (x *GetNewsReply_News) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsReply_News.ProtoReflect.Descriptor instead.
func (*GetNewsReply_News) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{169, 0}
}

func (x *GetNewsReply_News) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetNewsReply_News) GetUpdate() string {
	if x != nil {
		return x.Update
	}
	return ""
}

func (x *GetNewsReply_News) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *GetNewsReply_News) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetNewsReply_News) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *GetNewsReply_News) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *GetNewsReply_News) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *GetNewsReply_News) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetAchievementListReply_Achievement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid     string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	View     int32  `protobuf:"varint,2,opt,name=view,proto3" json:"view,omitempty"`
	Agree    int32  `protobuf:"varint,3,opt,name=agree,proto3" json:"agree,omitempty"`
	Followed int32  `protobuf:"varint,4,opt,name=followed,proto3" json:"followed,omitempty"`
	Follow   int32  `protobuf:"varint,5,opt,name=follow,proto3" json:"follow,omitempty"`
}

func (x *GetAchievementListReply_Achievement) Reset() {
	*x = GetAchievementListReply_Achievement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAchievementListReply_Achievement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAchievementListReply_Achievement) ProtoMessage() {}

func (x *GetAchievementListReply_Achievement) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAchievementListReply_Achievement.ProtoReflect.Descriptor instead.
func (*GetAchievementListReply_Achievement) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{171, 0}
}

func (x *GetAchievementListReply_Achievement) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetAchievementListReply_Achievement) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *GetAchievementListReply_Achievement) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetAchievementListReply_Achievement) GetFollowed() int32 {
	if x != nil {
		return x.Followed
	}
	return 0
}

func (x *GetAchievementListReply_Achievement) GetFollow() int32 {
	if x != nil {
		return x.Follow
	}
	return 0
}

type GetCommentListReply_Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid     string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Agree    int32  `protobuf:"varint,3,opt,name=agree,proto3" json:"agree,omitempty"`
	Comment  int32  `protobuf:"varint,4,opt,name=comment,proto3" json:"comment,omitempty"`
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetCommentListReply_Comment) Reset() {
	*x = GetCommentListReply_Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentListReply_Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentListReply_Comment) ProtoMessage() {}

func (x *GetCommentListReply_Comment) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentListReply_Comment.ProtoReflect.Descriptor instead.
func (*GetCommentListReply_Comment) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{189, 0}
}

func (x *GetCommentListReply_Comment) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCommentListReply_Comment) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetCommentListReply_Comment) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetCommentListReply_Comment) GetComment() int32 {
	if x != nil {
		return x.Comment
	}
	return 0
}

func (x *GetCommentListReply_Comment) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetUserCommentArticleReplyListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreationId     int32  `protobuf:"varint,2,opt,name=creation_id,json=creationId,proto3" json:"creation_id,omitempty"`
	CreationAuthor string `protobuf:"bytes,3,opt,name=creation_author,json=creationAuthor,proto3" json:"creation_author,omitempty"`
}

func (x *GetUserCommentArticleReplyListReply_List) Reset() {
	*x = GetUserCommentArticleReplyListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCommentArticleReplyListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCommentArticleReplyListReply_List) ProtoMessage() {}

func (x *GetUserCommentArticleReplyListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCommentArticleReplyListReply_List.ProtoReflect.Descriptor instead.
func (*GetUserCommentArticleReplyListReply_List) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{191, 0}
}

func (x *GetUserCommentArticleReplyListReply_List) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetUserCommentArticleReplyListReply_List) GetCreationId() int32 {
	if x != nil {
		return x.CreationId
	}
	return 0
}

func (x *GetUserCommentArticleReplyListReply_List) GetCreationAuthor() string {
	if x != nil {
		return x.CreationAuthor
	}
	return ""
}

type GetUserSubCommentArticleReplyListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreationId     int32  `protobuf:"varint,2,opt,name=creation_id,json=creationId,proto3" json:"creation_id,omitempty"`
	CreationAuthor string `protobuf:"bytes,3,opt,name=creation_author,json=creationAuthor,proto3" json:"creation_author,omitempty"`
	RootId         int32  `protobuf:"varint,4,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"`
	RootUser       string `protobuf:"bytes,5,opt,name=root_user,json=rootUser,proto3" json:"root_user,omitempty"`
	ParentId       int32  `protobuf:"varint,6,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Reply          string `protobuf:"bytes,7,opt,name=reply,proto3" json:"reply,omitempty"`
	UserName       string `protobuf:"bytes,8,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ReplyName      string `protobuf:"bytes,9,opt,name=reply_name,json=replyName,proto3" json:"reply_name,omitempty"`
	RootName       string `protobuf:"bytes,10,opt,name=root_name,json=rootName,proto3" json:"root_name,omitempty"`
}

func (x *GetUserSubCommentArticleReplyListReply_List) Reset() {
	*x = GetUserSubCommentArticleReplyListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSubCommentArticleReplyListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSubCommentArticleReplyListReply_List) ProtoMessage() {}

func (x *GetUserSubCommentArticleReplyListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSubCommentArticleReplyListReply_List.ProtoReflect.Descriptor instead.
func (*GetUserSubCommentArticleReplyListReply_List) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{193, 0}
}

func (x *GetUserSubCommentArticleReplyListReply_List) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetUserSubCommentArticleReplyListReply_List) GetCreationId() int32 {
	if x != nil {
		return x.CreationId
	}
	return 0
}

func (x *GetUserSubCommentArticleReplyListReply_List) GetCreationAuthor() string {
	if x != nil {
		return x.CreationAuthor
	}
	return ""
}

func (x *GetUserSubCommentArticleReplyListReply_List) GetRootId() int32 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *GetUserSubCommentArticleReplyListReply_List) GetRootUser() string {
	if x != nil {
		return x.RootUser
	}
	return ""
}

func (x *GetUserSubCommentArticleReplyListReply_List) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *GetUserSubCommentArticleReplyListReply_List) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

func (x *GetUserSubCommentArticleReplyListReply_List) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetUserSubCommentArticleReplyListReply_List) GetReplyName() string {
	if x != nil {
		return x.ReplyName
	}
	return ""
}

func (x *GetUserSubCommentArticleReplyListReply_List) GetRootName() string {
	if x != nil {
		return x.RootName
	}
	return ""
}

type GetUserCommentTalkReplyListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreationId     int32  `protobuf:"varint,2,opt,name=creation_id,json=creationId,proto3" json:"creation_id,omitempty"`
	CreationAuthor string `protobuf:"bytes,3,opt,name=creation_author,json=creationAuthor,proto3" json:"creation_author,omitempty"`
}

func (x *GetUserCommentTalkReplyListReply_List) Reset() {
	*x = GetUserCommentTalkReplyListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCommentTalkReplyListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCommentTalkReplyListReply_List) ProtoMessage() {}

func (x *GetUserCommentTalkReplyListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCommentTalkReplyListReply_List.ProtoReflect.Descriptor instead.
func (*GetUserCommentTalkReplyListReply_List) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{195, 0}
}

func (x *GetUserCommentTalkReplyListReply_List) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetUserCommentTalkReplyListReply_List) GetCreationId() int32 {
	if x != nil {
		return x.CreationId
	}
	return 0
}

func (x *GetUserCommentTalkReplyListReply_List) GetCreationAuthor() string {
	if x != nil {
		return x.CreationAuthor
	}
	return ""
}

type GetUserSubCommentTalkReplyListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreationId     int32  `protobuf:"varint,2,opt,name=creation_id,json=creationId,proto3" json:"creation_id,omitempty"`
	CreationAuthor string `protobuf:"bytes,3,opt,name=creation_author,json=creationAuthor,proto3" json:"creation_author,omitempty"`
	RootId         int32  `protobuf:"varint,4,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"`
	RootUser       string `protobuf:"bytes,5,opt,name=root_user,json=rootUser,proto3" json:"root_user,omitempty"`
	ParentId       int32  `protobuf:"varint,6,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Reply          string `protobuf:"bytes,7,opt,name=reply,proto3" json:"reply,omitempty"`
	UserName       string `protobuf:"bytes,8,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ReplyName      string `protobuf:"bytes,9,opt,name=reply_name,json=replyName,proto3" json:"reply_name,omitempty"`
	RootName       string `protobuf:"bytes,10,opt,name=root_name,json=rootName,proto3" json:"root_name,omitempty"`
}

func (x *GetUserSubCommentTalkReplyListReply_List) Reset() {
	*x = GetUserSubCommentTalkReplyListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSubCommentTalkReplyListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSubCommentTalkReplyListReply_List) ProtoMessage() {}

func (x *GetUserSubCommentTalkReplyListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSubCommentTalkReplyListReply_List.ProtoReflect.Descriptor instead.
func (*GetUserSubCommentTalkReplyListReply_List) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{197, 0}
}

func (x *GetUserSubCommentTalkReplyListReply_List) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetUserSubCommentTalkReplyListReply_List) GetCreationId() int32 {
	if x != nil {
		return x.CreationId
	}
	return 0
}

func (x *GetUserSubCommentTalkReplyListReply_List) GetCreationAuthor() string {
	if x != nil {
		return x.CreationAuthor
	}
	return ""
}

func (x *GetUserSubCommentTalkReplyListReply_List) GetRootId() int32 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *GetUserSubCommentTalkReplyListReply_List) GetRootUser() string {
	if x != nil {
		return x.RootUser
	}
	return ""
}

func (x *GetUserSubCommentTalkReplyListReply_List) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *GetUserSubCommentTalkReplyListReply_List) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

func (x *GetUserSubCommentTalkReplyListReply_List) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetUserSubCommentTalkReplyListReply_List) GetReplyName() string {
	if x != nil {
		return x.ReplyName
	}
	return ""
}

func (x *GetUserSubCommentTalkReplyListReply_List) GetRootName() string {
	if x != nil {
		return x.RootName
	}
	return ""
}

type GetUserCommentArticleRepliedListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreationId int32  `protobuf:"varint,2,opt,name=creation_id,json=creationId,proto3" json:"creation_id,omitempty"`
	Uuid       string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username   string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetUserCommentArticleRepliedListReply_List) Reset() {
	*x = GetUserCommentArticleRepliedListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCommentArticleRepliedListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCommentArticleRepliedListReply_List) ProtoMessage() {}

func (x *GetUserCommentArticleRepliedListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCommentArticleRepliedListReply_List.ProtoReflect.Descriptor instead.
func (*GetUserCommentArticleRepliedListReply_List) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{199, 0}
}

func (x *GetUserCommentArticleRepliedListReply_List) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetUserCommentArticleRepliedListReply_List) GetCreationId() int32 {
	if x != nil {
		return x.CreationId
	}
	return 0
}

func (x *GetUserCommentArticleRepliedListReply_List) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetUserCommentArticleRepliedListReply_List) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetUserSubCommentArticleRepliedListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid           string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	CreationId     int32  `protobuf:"varint,3,opt,name=creation_id,json=creationId,proto3" json:"creation_id,omitempty"`
	CreationAuthor string `protobuf:"bytes,4,opt,name=creation_author,json=creationAuthor,proto3" json:"creation_author,omitempty"`
	RootId         int32  `protobuf:"varint,5,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"`
	RootUser       string `protobuf:"bytes,6,opt,name=root_user,json=rootUser,proto3" json:"root_user,omitempty"`
	ParentId       int32  `protobuf:"varint,7,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Reply          string `protobuf:"bytes,8,opt,name=reply,proto3" json:"reply,omitempty"`
	UserName       string `protobuf:"bytes,9,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ReplyName      string `protobuf:"bytes,10,opt,name=reply_name,json=replyName,proto3" json:"reply_name,omitempty"`
	RootName       string `protobuf:"bytes,11,opt,name=root_name,json=rootName,proto3" json:"root_name,omitempty"`
}

func (x *GetUserSubCommentArticleRepliedListReply_List) Reset() {
	*x = GetUserSubCommentArticleRepliedListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSubCommentArticleRepliedListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSubCommentArticleRepliedListReply_List) ProtoMessage() {}

func (x *GetUserSubCommentArticleRepliedListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSubCommentArticleRepliedListReply_List.ProtoReflect.Descriptor instead.
func (*GetUserSubCommentArticleRepliedListReply_List) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{201, 0}
}

func (x *GetUserSubCommentArticleRepliedListReply_List) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetUserSubCommentArticleRepliedListReply_List) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetUserSubCommentArticleRepliedListReply_List) GetCreationId() int32 {
	if x != nil {
		return x.CreationId
	}
	return 0
}

func (x *GetUserSubCommentArticleRepliedListReply_List) GetCreationAuthor() string {
	if x != nil {
		return x.CreationAuthor
	}
	return ""
}

func (x *GetUserSubCommentArticleRepliedListReply_List) GetRootId() int32 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *GetUserSubCommentArticleRepliedListReply_List) GetRootUser() string {
	if x != nil {
		return x.RootUser
	}
	return ""
}

func (x *GetUserSubCommentArticleRepliedListReply_List) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *GetUserSubCommentArticleRepliedListReply_List) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

func (x *GetUserSubCommentArticleRepliedListReply_List) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetUserSubCommentArticleRepliedListReply_List) GetReplyName() string {
	if x != nil {
		return x.ReplyName
	}
	return ""
}

func (x *GetUserSubCommentArticleRepliedListReply_List) GetRootName() string {
	if x != nil {
		return x.RootName
	}
	return ""
}

type GetUserCommentTalkRepliedListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreationId int32  `protobuf:"varint,2,opt,name=creation_id,json=creationId,proto3" json:"creation_id,omitempty"`
	Uuid       string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username   string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetUserCommentTalkRepliedListReply_List) Reset() {
	*x = GetUserCommentTalkRepliedListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCommentTalkRepliedListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCommentTalkRepliedListReply_List) ProtoMessage() {}

func (x *GetUserCommentTalkRepliedListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCommentTalkRepliedListReply_List.ProtoReflect.Descriptor instead.
func (*GetUserCommentTalkRepliedListReply_List) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{203, 0}
}

func (x *GetUserCommentTalkRepliedListReply_List) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetUserCommentTalkRepliedListReply_List) GetCreationId() int32 {
	if x != nil {
		return x.CreationId
	}
	return 0
}

func (x *GetUserCommentTalkRepliedListReply_List) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetUserCommentTalkRepliedListReply_List) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetUserSubCommentTalkRepliedListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid           string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	CreationId     int32  `protobuf:"varint,3,opt,name=creation_id,json=creationId,proto3" json:"creation_id,omitempty"`
	CreationAuthor string `protobuf:"bytes,4,opt,name=creation_author,json=creationAuthor,proto3" json:"creation_author,omitempty"`
	RootId         int32  `protobuf:"varint,5,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"`
	RootUser       string `protobuf:"bytes,6,opt,name=root_user,json=rootUser,proto3" json:"root_user,omitempty"`
	ParentId       int32  `protobuf:"varint,7,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Reply          string `protobuf:"bytes,8,opt,name=reply,proto3" json:"reply,omitempty"`
	UserName       string `protobuf:"bytes,9,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ReplyName      string `protobuf:"bytes,10,opt,name=reply_name,json=replyName,proto3" json:"reply_name,omitempty"`
	RootName       string `protobuf:"bytes,11,opt,name=root_name,json=rootName,proto3" json:"root_name,omitempty"`
}

func (x *GetUserSubCommentTalkRepliedListReply_List) Reset() {
	*x = GetUserSubCommentTalkRepliedListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSubCommentTalkRepliedListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSubCommentTalkRepliedListReply_List) ProtoMessage() {}

func (x *GetUserSubCommentTalkRepliedListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSubCommentTalkRepliedListReply_List.ProtoReflect.Descriptor instead.
func (*GetUserSubCommentTalkRepliedListReply_List) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{205, 0}
}

func (x *GetUserSubCommentTalkRepliedListReply_List) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetUserSubCommentTalkRepliedListReply_List) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetUserSubCommentTalkRepliedListReply_List) GetCreationId() int32 {
	if x != nil {
		return x.CreationId
	}
	return 0
}

func (x *GetUserSubCommentTalkRepliedListReply_List) GetCreationAuthor() string {
	if x != nil {
		return x.CreationAuthor
	}
	return ""
}

func (x *GetUserSubCommentTalkRepliedListReply_List) GetRootId() int32 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *GetUserSubCommentTalkRepliedListReply_List) GetRootUser() string {
	if x != nil {
		return x.RootUser
	}
	return ""
}

func (x *GetUserSubCommentTalkRepliedListReply_List) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *GetUserSubCommentTalkRepliedListReply_List) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

func (x *GetUserSubCommentTalkRepliedListReply_List) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetUserSubCommentTalkRepliedListReply_List) GetReplyName() string {
	if x != nil {
		return x.ReplyName
	}
	return ""
}

func (x *GetUserSubCommentTalkRepliedListReply_List) GetRootName() string {
	if x != nil {
		return x.RootName
	}
	return ""
}

type GetSubCommentListReply_Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid      string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Reply     string `protobuf:"bytes,3,opt,name=reply,proto3" json:"reply,omitempty"`
	Agree     int32  `protobuf:"varint,4,opt,name=agree,proto3" json:"agree,omitempty"`
	Comment   int32  `protobuf:"varint,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Username  string `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	ReplyName string `protobuf:"bytes,7,opt,name=replyName,proto3" json:"replyName,omitempty"`
}

func (x *GetSubCommentListReply_Comment) Reset() {
	*x = GetSubCommentListReply_Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_interface_v1_bff_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubCommentListReply_Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubCommentListReply_Comment) ProtoMessage() {}

func (x *GetSubCommentListReply_Comment) ProtoReflect() protoreflect.Message {
	mi := &file_bff_interface_v1_bff_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubCommentListReply_Comment.ProtoReflect.Descriptor instead.
func (*GetSubCommentListReply_Comment) Descriptor() ([]byte, []int) {
	return file_bff_interface_v1_bff_proto_rawDescGZIP(), []int{207, 0}
}

func (x *GetSubCommentListReply_Comment) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSubCommentListReply_Comment) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetSubCommentListReply_Comment) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

func (x *GetSubCommentListReply_Comment) GetAgree() int32 {
	if x != nil {
		return x.Agree
	}
	return 0
}

func (x *GetSubCommentListReply_Comment) GetComment() int32 {
	if x != nil {
		return x.Comment
	}
	return 0
}

func (x *GetSubCommentListReply_Comment) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetSubCommentListReply_Comment) GetReplyName() string {
	if x != nil {
		return x.ReplyName
	}
	return ""
}

var File_bff_interface_v1_bff_proto protoreflect.FileDescriptor

var file_bff_interface_v1_bff_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x62, 0x66, 0x66, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x66, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x57, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x5e, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x2a, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x57,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x22, 0x2a, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x47, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x22, 0x22, 0x0a, 0x0a,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x75, 0x0a, 0x15, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x44, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x44, 0x0a,
	0x10, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x22, 0xc8, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a,
	0x0d, 0x74, 0x6d, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6d, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6d, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6d, 0x70, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x28,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xc4, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x3b, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x1a, 0xee,
	0x01, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22,
	0x27, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xc2, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x1a, 0xee, 0x01, 0x0a,
	0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0xaf, 0x01,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x71, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x71, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0xd7, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6a, 0x6f, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12,
	0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x22, 0x29, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75,
	0x75, 0x69, 0x64, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x57, 0x0a, 0x07, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x22, 0xf2, 0x03, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6a, 0x6f, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1a,
	0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x6c, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x61, 0x6c, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x26, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x2c,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0x2a, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x73, 0x1a, 0x45, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x22, 0x3a, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x86, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x06,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52,
	0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x1a, 0xb4, 0x01, 0x0a, 0x06, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x22, 0x2b,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x8a, 0x02, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x1a, 0xb4, 0x01, 0x0a, 0x06, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x22, 0x2d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe1, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3e, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x94, 0x02,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a,
	0xb2, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f,
	0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x22, 0x3b, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x3b, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x30, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0x26, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x13, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x3e, 0x0a, 0x12,
	0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3e, 0x0a, 0x12,
	0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x8f, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x1a, 0x3f, 0x0a,
	0x05, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x3e,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x2b,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x3b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x61,
	0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x28, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x37, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x22, 0x83, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x6c, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x61, 0x6c, 0x6b, 0x22, 0x27, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x22, 0xe2, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x07,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x1a, 0x8b, 0x01, 0x0a, 0x07, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65,
	0x77, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x22, 0xe8, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x40, 0x0a, 0x07, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x1a, 0x8b, 0x01,
	0x0a, 0x07, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x31, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x22, 0x3c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x22, 0x8c, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x97, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a,
	0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65,
	0x1a, 0x38, 0x0a, 0x0a, 0x41, 0x67, 0x72, 0x65, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa3, 0x01, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x49, 0x0a, 0x07, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x2e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0xd7, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x40, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x75, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x55,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xdc, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x36, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0xf4, 0x01,
	0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x29, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x2b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x87, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4d, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x1d, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x46, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x48, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x56, 0x69, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22,
	0x24, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x2d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x71, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x64, 0x72, 0x61,
	0x66, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x52, 0x05, 0x64, 0x72, 0x61, 0x66, 0x74, 0x1a, 0x17, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x20, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x12,
	0x53, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0x61, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x3b, 0x0a, 0x15, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0x3d, 0x0a, 0x17, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x2a,
	0x0a, 0x18, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x1a, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x4a, 0x75,
	0x64, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x24, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xd0,
	0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x61, 0x6c, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54, 0x61, 0x6c, 0x6b,
	0x52, 0x04, 0x74, 0x61, 0x6c, 0x6b, 0x1a, 0x88, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x6c, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x22, 0x29, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x04, 0x74,
	0x61, 0x6c, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x6c,
	0x6b, 0x1a, 0x88, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x6c, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67,
	0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x75, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x28, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x2e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x43, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x6c, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x61,
	0x6c, 0x6b, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x52, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xd6, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x6c, 0x6b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0xf4, 0x01, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x6c,
	0x6b, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x61,
	0x67, 0x72, 0x65, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x6b, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x1a, 0x38, 0x0a, 0x0a, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9d, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x46, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x26, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x6c, 0x6b, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1d, 0x0a,
	0x0b, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x0f,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x6c, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x1f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x34, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x49, 0x0a, 0x17, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67,
	0x72, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x35, 0x0a, 0x0f, 0x53, 0x65,
	0x74, 0x54, 0x61, 0x6c, 0x6b, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x22, 0x5e, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x22, 0x38, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x6c, 0x6b, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x14, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x73, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x13, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x22, 0x1f, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x29, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xd3, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x1a, 0x73, 0x0a,
	0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61,
	0x67, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x22, 0x2e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x32, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x42,
	0x0a, 0x07, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x26,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a,
	0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x1a, 0x70, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x3c, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x1a, 0x70, 0x0a,
	0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0x2d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xbb,
	0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a,
	0x5b, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x2a, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x45, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x69,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x54, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22,
	0xc8, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0xe2, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x23, 0x0a, 0x11, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x21, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x3b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0x71, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61,
	0x67, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x22, 0x95, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x40,
	0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65,
	0x1a, 0x38, 0x0a, 0x0a, 0x41, 0x67, 0x72, 0x65, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa1, 0x01, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xad,
	0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x50,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x1a, 0x3c, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x29,
	0x0a, 0x17, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x19, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x4a, 0x75, 0x64, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x37, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0x3a, 0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x60, 0x0a, 0x13, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x3c, 0x0a,
	0x16, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x10, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x17, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e, 0x65,
	0x77, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x04, 0x6e, 0x65, 0x77, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4e, 0x65, 0x77, 0x73,
	0x52, 0x04, 0x6e, 0x65, 0x77, 0x73, 0x1a, 0xac, 0x01, 0x0a, 0x04, 0x4e, 0x65, 0x77, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x2d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75,
	0x75, 0x69, 0x64, 0x73, 0x22, 0xe9, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x4d, 0x0a, 0x0b, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0b, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a,
	0x7f, 0x0a, 0x0b, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x22, 0x2b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x91, 0x01,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xdf, 0x04, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x33, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x34, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x35, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x36, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x37, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x37,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x67, 0x72, 0x65, 0x65, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x61, 0x67, 0x72, 0x65, 0x65, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x67, 0x72, 0x65, 0x65, 0x32,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x67, 0x72, 0x65, 0x65, 0x33, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x61, 0x67, 0x72, 0x65, 0x65, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x34, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x67, 0x72, 0x65, 0x65, 0x34,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x67, 0x72, 0x65, 0x65, 0x35, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x61, 0x67, 0x72, 0x65, 0x65, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x36, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x67, 0x72, 0x65, 0x65, 0x36,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x31, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x69, 0x65, 0x77, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x32, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x32, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x69, 0x65, 0x77, 0x33, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x69, 0x65,
	0x77, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x31, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x31, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x33, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x31, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x32, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x32, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x33, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x33, 0x22, 0x2a, 0x0a, 0x12, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x22, 0xb8, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65,
	0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x22, 0x27, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x22, 0x2d, 0x0a, 0x15, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x22, 0x29, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x1a, 0x38, 0x0a, 0x0a, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xeb, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x53, 0x75, 0x62, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x61, 0x6c, 0x6b, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x61,
	0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x75, 0x62, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64,
	0x53, 0x75, 0x62, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x61, 0x6c, 0x6b, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x74, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x53, 0x75, 0x62,
	0x22, 0x20, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x6b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xcf, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x79, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x37, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x23, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x44, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x60, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x22, 0x3a, 0x0a, 0x24, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x96, 0x03, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x47, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0xa2, 0x02, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x34, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x60, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x22,
	0x37, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x90, 0x03, 0x0a, 0x23, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x44, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0xa2, 0x02, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x23, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x46, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x67, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x3c, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22,
	0xae, 0x03, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x49, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0xb6, 0x02, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x36, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x43, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x1a, 0x67, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xa8, 0x03, 0x0a, 0x25, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x46, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0xb6, 0x02, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f,
	0x6f, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x6f, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x8a, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0xad, 0x01, 0x0a,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7c, 0x0a, 0x12,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3b, 0x0a, 0x15, 0x53, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x7f, 0x0a, 0x15, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3e, 0x0a, 0x18, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x32, 0xaa, 0x93, 0x01, 0x0a, 0x03, 0x42, 0x66,
	0x66, 0x12, 0x5d, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x17, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a,
	0x12, 0x65, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x12, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x59, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0x5f, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x57, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x12, 0x18, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x42, 0x79, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0x5f, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x47, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x12, 0x18, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x42, 0x79, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x12,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x3a, 0x01, 0x2a, 0x12, 0x75, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x61, 0x0a, 0x0d, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x61,
	0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x3a, 0x01,
	0x2a, 0x12, 0x6a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f,
	0x73, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x6b, 0x65, 0x79, 0x12, 0x6d, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x3a, 0x01, 0x2a, 0x12, 0x69, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x19,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x2f, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x3a, 0x01, 0x2a, 0x12, 0x5b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x66, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x18, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x70, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f,
	0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x65, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x18, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x3a, 0x01, 0x2a, 0x12, 0x63,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x73, 0x12, 0x62, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x77, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x6a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x7f, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d,
	0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x6e, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d,
	0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x62, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x18,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x6f, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0x5e, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x17, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0x5e, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x17, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x3a,
	0x01, 0x2a, 0x12, 0x67, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x61, 0x0a, 0x0d, 0x53,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x18, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x3a, 0x01, 0x2a, 0x12, 0x6a,
	0x0a, 0x10, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x12, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22,
	0x16, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x3a, 0x01, 0x2a, 0x12, 0x70, 0x0a, 0x12, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x1d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22,
	0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x67, 0x0a, 0x0f,
	0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x67, 0x0a, 0x0f, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x6e, 0x62, 0x69, 0x6e, 0x64,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x3a, 0x01, 0x2a, 0x12, 0x62,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x12, 0x7c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x87, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2f, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x70, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x7b, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2f, 0x74,
	0x61, 0x6c, 0x6b, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x78, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1f, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x83, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2f, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x65, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x79, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x76, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f,
	0x61, 0x6c, 0x6c, 0x12, 0x75, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x20, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x90, 0x01, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x79, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x90, 0x01,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x7f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x24, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x20, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6c, 0x61, 0x73, 0x74, 0x2f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x72, 0x61, 0x66,
	0x74, 0x12, 0x7e, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21,
	0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x01,
	0x2a, 0x12, 0x66, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19,
	0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x73, 0x0a, 0x13, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x64, 0x69, 0x74,
	0x12, 0x1e, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e,
	0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x65, 0x64, 0x69, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x6c,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x66, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x73, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x12, 0x1c, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12,
	0x18, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x68, 0x6f, 0x74, 0x12, 0x79, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1f, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74,
	0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1c, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12,
	0x80, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x21, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x12, 0x76, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x89, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x25, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x89, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12,
	0x21, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x12, 0x73, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x2f, 0x61, 0x6c, 0x6c, 0x12, 0x7a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x1e,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x12, 0x73, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x20, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x2f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x79, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x12, 0x8b, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12,
	0x22, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x20, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x12, 0x73, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x20, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x74, 0x2f, 0x6c, 0x61, 0x73, 0x74, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x12, 0x6e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1b, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x72, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x2f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x6a, 0x0a, 0x10, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x1b,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x6d,
	0x61, 0x72, 0x6b, 0x3a, 0x01, 0x2a, 0x12, 0x73, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12,
	0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x0b, 0x53,
	0x65, 0x6e, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x67, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x64, 0x69, 0x74, 0x12, 0x1a, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x45,
	0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6e, 0x64,
	0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x65, 0x64, 0x69, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x60, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x12, 0x18, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0x67, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x41, 0x67, 0x72, 0x65, 0x65, 0x12, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x2f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x64, 0x0a, 0x0e, 0x53,
	0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x19, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65,
	0x74, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x3a, 0x01,
	0x2a, 0x12, 0x6d, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x2f, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x70, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x12, 0x1d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x23, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0x76, 0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x85, 0x01, 0x0a, 0x15, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x4a,
	0x75, 0x64, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x4a, 0x75,
	0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0x5a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x67,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74,
	0x12, 0x19, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17,
	0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x2f, 0x68, 0x6f, 0x74, 0x12, 0x7f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12,
	0x1f, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x1a, 0x21, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x6a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x3a, 0x01, 0x2a, 0x12, 0x7d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x61, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x20, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61,
	0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x22, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x3a, 0x01, 0x2a, 0x12, 0x7d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61,
	0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x21, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61,
	0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x12, 0x60, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x3a, 0x01, 0x2a, 0x12, 0x74, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x6e, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x1b,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x74, 0x61, 0x6c, 0x6b,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x6a, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6c, 0x61, 0x73, 0x74, 0x2f, 0x74, 0x61, 0x6c, 0x6b,
	0x2f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x12, 0x62, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c,
	0x6b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x18, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x6c, 0x6b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x74,
	0x61, 0x6c, 0x6b, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x6a, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x6b, 0x41, 0x67, 0x72, 0x65, 0x65, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x6b, 0x41, 0x67, 0x72, 0x65, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x6c, 0x6b,
	0x2f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x70, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x6c, 0x6b,
	0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x69, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x6c, 0x6b, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x6c, 0x6b, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x64, 0x72, 0x61, 0x66, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0x51, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x6c, 0x6b, 0x12,
	0x13, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x6c,
	0x6b, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x18, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x2f, 0x74,
	0x61, 0x6c, 0x6b, 0x3a, 0x01, 0x2a, 0x12, 0x5e, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x61,
	0x6c, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x12, 0x17, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x6c, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22,
	0x12, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x65,
	0x64, 0x69, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x57, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x61, 0x6c, 0x6b, 0x12, 0x15, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x3a, 0x01, 0x2a, 0x12,
	0x5b, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x56, 0x69, 0x65, 0x77, 0x12, 0x16,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x56,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x2f,
	0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x3a, 0x01, 0x2a, 0x12, 0x79, 0x0a, 0x12,
	0x54, 0x61, 0x6c, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x4a, 0x75, 0x64,
	0x67, 0x65, 0x12, 0x1d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x6c, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x6c, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2f, 0x6a,
	0x75, 0x64, 0x67, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x5e, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x54, 0x61,
	0x6c, 0x6b, 0x41, 0x67, 0x72, 0x65, 0x65, 0x12, 0x17, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17,
	0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x61,
	0x67, 0x72, 0x65, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x64, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x54, 0x61,
	0x6c, 0x6b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x2f, 0x74, 0x61,
	0x6c, 0x6b, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x67, 0x0a,
	0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x6c, 0x6b, 0x41, 0x67, 0x72, 0x65, 0x65,
	0x12, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x54, 0x61, 0x6c, 0x6b, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x61, 0x67,
	0x72, 0x65, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x6d, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x54, 0x61, 0x6c, 0x6b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x6c, 0x6b, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x70, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6c, 0x61, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x2f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x12, 0x6f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f,
	0x64, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x66, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1a, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x3a, 0x01, 0x2a,
	0x12, 0x79, 0x0a, 0x15, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x20, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x6f, 0x0a, 0x0e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x12, 0x19, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x57, 0x0a, 0x0a,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x15, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x2f, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x71, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x83, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e,
	0x12, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x7d,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22,
	0x19, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x62, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x6f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x6f, 0x74, 0x12, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x68,
	0x6f, 0x74, 0x12, 0x87, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x21, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x1a, 0x23, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x72, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1c, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x85, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x24, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x85, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x12, 0x66, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x7c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x12, 0x20, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x76,
	0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x6a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x64, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x45, 0x64, 0x69, 0x74, 0x12, 0x19, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x2f, 0x65, 0x64, 0x69, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x5d, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x17, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x76, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x1d, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12,
	0x70, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x41, 0x67, 0x72, 0x65, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x12, 0x76, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x21, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x7c, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x81, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x4a, 0x75, 0x64, 0x67, 0x65,
	0x12, 0x1f, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x21, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x64, 0x0a, 0x0e, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x12, 0x19, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65,
	0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x3a, 0x01,
	0x2a, 0x12, 0x6d, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x12, 0x1c, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x3a, 0x01, 0x2a,
	0x12, 0x6a, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x73, 0x0a, 0x13,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x12, 0x1e, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x2f,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x3a, 0x01,
	0x2a, 0x12, 0x61, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x18, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x76, 0x69, 0x65,
	0x77, 0x3a, 0x01, 0x2a, 0x12, 0x6d, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x64,
	0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0x76, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2f,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x49, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x12, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x12, 0x76, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x76,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x12, 0x17, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x65, 0x64, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x12, 0x67, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x12, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x64,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x3a, 0x01, 0x2a, 0x12,
	0x76, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x21, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x65, 0x64, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x2f, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x5e, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x12, 0x17, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17,
	0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d,
	0x65, 0x64, 0x61, 0x6c, 0x3a, 0x01, 0x2a, 0x12, 0x71, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x65,
	0x64, 0x61, 0x6c, 0x2f, 0x73, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x73, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x6c, 0x61, 0x73,
	0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x12,
	0x73, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x61,
	0x67, 0x72, 0x65, 0x65, 0x12, 0x63, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x66, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x72, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x6d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x12, 0x19, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x2f, 0x68, 0x6f, 0x74, 0x12, 0xac, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x22, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0xb8, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x22,
	0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x75,
	0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xa0,
	0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x22, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x74,
	0x61, 0x6c, 0x6b, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01,
	0x2a, 0x12, 0xac, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x2b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x32, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2c, 0x22, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x61,
	0x6c, 0x6b, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0xb4, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x22, 0x29, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xc0, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2e, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x30, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x22, 0x2c, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x65, 0x64, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xa8, 0x01, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x6c,
	0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x62,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22, 0x26, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xb4, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x6c, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x22, 0x29,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x75, 0x62,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x64, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x72, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x62, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x5a, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6e,
	0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x63, 0x0a, 0x0e,
	0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19,
	0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x65, 0x6e, 0x64, 0x2f, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x01,
	0x2a, 0x12, 0x60, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x18, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0x69, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75, 0x62,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x2f, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x67,
	0x0a, 0x0f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x12, 0x1a, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x61,
	0x67, 0x72, 0x65, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x70, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x12, 0x1d, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x74, 0x2f, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x70, 0x0a, 0x12, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x12,
	0x1d, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x2f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x79, 0x0a, 0x15, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x12, 0x20, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x67,
	0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x26,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x2f, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x67,
	0x72, 0x65, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0x19, 0x5a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x66,
	0x66, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bff_interface_v1_bff_proto_rawDescOnce sync.Once
	file_bff_interface_v1_bff_proto_rawDescData = file_bff_interface_v1_bff_proto_rawDesc
)

func file_bff_interface_v1_bff_proto_rawDescGZIP() []byte {
	file_bff_interface_v1_bff_proto_rawDescOnce.Do(func() {
		file_bff_interface_v1_bff_proto_rawDescData = protoimpl.X.CompressGZIP(file_bff_interface_v1_bff_proto_rawDescData)
	})
	return file_bff_interface_v1_bff_proto_rawDescData
}

var file_bff_interface_v1_bff_proto_msgTypes = make([]protoimpl.MessageInfo, 256)
var file_bff_interface_v1_bff_proto_goTypes = []interface{}{
	(*UserRegisterReq)(nil),                          // 0: bff.v1.UserRegisterReq
	(*LoginByPasswordReq)(nil),                       // 1: bff.v1.LoginByPasswordReq
	(*LoginByCodeReq)(nil),                           // 2: bff.v1.LoginByCodeReq
	(*LoginByWeChatReq)(nil),                         // 3: bff.v1.LoginByWeChatReq
	(*LoginByGithubReq)(nil),                         // 4: bff.v1.LoginByGithubReq
	(*LoginReply)(nil),                               // 5: bff.v1.LoginReply
	(*LoginPasswordResetReq)(nil),                    // 6: bff.v1.LoginPasswordResetReq
	(*SendPhoneCodeReq)(nil),                         // 7: bff.v1.SendPhoneCodeReq
	(*SendEmailCodeReq)(nil),                         // 8: bff.v1.SendEmailCodeReq
	(*GetCosSessionKeyReply)(nil),                    // 9: bff.v1.GetCosSessionKeyReply
	(*GetAvatarReviewReq)(nil),                       // 10: bff.v1.GetAvatarReviewReq
	(*GetAvatarReviewReply)(nil),                     // 11: bff.v1.GetAvatarReviewReply
	(*GetCoverReviewReq)(nil),                        // 12: bff.v1.GetCoverReviewReq
	(*GetCoverReviewReply)(nil),                      // 13: bff.v1.GetCoverReviewReply
	(*GetAccountReply)(nil),                          // 14: bff.v1.GetAccountReply
	(*GetProfileReply)(nil),                          // 15: bff.v1.GetProfileReply
	(*GetProfileListReq)(nil),                        // 16: bff.v1.GetProfileListReq
	(*GetProfileListReply)(nil),                      // 17: bff.v1.GetProfileListReply
	(*GetUserInfoVisitorReq)(nil),                    // 18: bff.v1.GetUserInfoVisitorReq
	(*GetUserInfoReply)(nil),                         // 19: bff.v1.GetUserInfoReply
	(*GetUserFollowReq)(nil),                         // 20: bff.v1.GetUserFollowReq
	(*GetUserFollowReply)(nil),                       // 21: bff.v1.GetUserFollowReply
	(*GetColumnSubscribesReq)(nil),                   // 22: bff.v1.GetColumnSubscribesReq
	(*GetColumnSubscribesReply)(nil),                 // 23: bff.v1.GetColumnSubscribesReply
	(*GetFollowListReq)(nil),                         // 24: bff.v1.GetFollowListReq
	(*GetFollowListReply)(nil),                       // 25: bff.v1.GetFollowListReply
	(*GetFollowListCountReq)(nil),                    // 26: bff.v1.GetFollowListCountReq
	(*GetFollowListCountReply)(nil),                  // 27: bff.v1.GetFollowListCountReply
	(*GetFollowedListReq)(nil),                       // 28: bff.v1.GetFollowedListReq
	(*GetFollowedListReply)(nil),                     // 29: bff.v1.GetFollowedListReply
	(*GetFollowedListCountReq)(nil),                  // 30: bff.v1.GetFollowedListCountReq
	(*GetFollowedListCountReply)(nil),                // 31: bff.v1.GetFollowedListCountReply
	(*GetProfileUpdateReply)(nil),                    // 32: bff.v1.GetProfileUpdateReply
	(*GetUserSearchReq)(nil),                         // 33: bff.v1.GetUserSearchReq
	(*GetUserSearchReply)(nil),                       // 34: bff.v1.GetUserSearchReply
	(*SetProfileUpdateReq)(nil),                      // 35: bff.v1.SetProfileUpdateReq
	(*SetUserPhoneReq)(nil),                          // 36: bff.v1.SetUserPhoneReq
	(*SetUserEmailReq)(nil),                          // 37: bff.v1.SetUserEmailReq
	(*SetUserPasswordReq)(nil),                       // 38: bff.v1.SetUserPasswordReq
	(*SetUserFollowReq)(nil),                         // 39: bff.v1.SetUserFollowReq
	(*CancelUserFollowReq)(nil),                      // 40: bff.v1.CancelUserFollowReq
	(*ChangeUserPasswordReq)(nil),                    // 41: bff.v1.ChangeUserPasswordReq
	(*UnbindUserPhoneReq)(nil),                       // 42: bff.v1.UnbindUserPhoneReq
	(*UnbindUserEmailReq)(nil),                       // 43: bff.v1.UnbindUserEmailReq
	(*GetLeaderBoardReply)(nil),                      // 44: bff.v1.GetLeaderBoardReply
	(*GetCollectArticleListReq)(nil),                 // 45: bff.v1.GetCollectArticleListReq
	(*GetCollectArticleCountReq)(nil),                // 46: bff.v1.GetCollectArticleCountReq
	(*GetCollectArticleCountReply)(nil),              // 47: bff.v1.GetCollectArticleCountReply
	(*GetCollectTalkListReq)(nil),                    // 48: bff.v1.GetCollectTalkListReq
	(*GetCollectTalkCountReq)(nil),                   // 49: bff.v1.GetCollectTalkCountReq
	(*GetCollectTalkCountReply)(nil),                 // 50: bff.v1.GetCollectTalkCountReply
	(*GetCollectColumnListReq)(nil),                  // 51: bff.v1.GetCollectColumnListReq
	(*GetCollectColumnCountReq)(nil),                 // 52: bff.v1.GetCollectColumnCountReq
	(*GetCollectColumnCountReply)(nil),               // 53: bff.v1.GetCollectColumnCountReply
	(*GetCollectionsReq)(nil),                        // 54: bff.v1.GetCollectionsReq
	(*GetCollectionsReply)(nil),                      // 55: bff.v1.GetCollectionsReply
	(*GetArticleListReq)(nil),                        // 56: bff.v1.GetArticleListReq
	(*GetArticleListReply)(nil),                      // 57: bff.v1.GetArticleListReply
	(*GetArticleCountReply)(nil),                     // 58: bff.v1.GetArticleCountReply
	(*GetArticleCountVisitorReq)(nil),                // 59: bff.v1.GetArticleCountVisitorReq
	(*GetArticleListHotReq)(nil),                     // 60: bff.v1.GetArticleListHotReq
	(*GetArticleListHotReply)(nil),                   // 61: bff.v1.GetArticleListHotReply
	(*GetUserArticleListReq)(nil),                    // 62: bff.v1.GetUserArticleListReq
	(*GetUserArticleListSimpleReq)(nil),              // 63: bff.v1.GetUserArticleListSimpleReq
	(*GetUserArticleListVisitorReq)(nil),             // 64: bff.v1.GetUserArticleListVisitorReq
	(*GetArticleStatisticReq)(nil),                   // 65: bff.v1.GetArticleStatisticReq
	(*GetArticleStatisticReply)(nil),                 // 66: bff.v1.GetArticleStatisticReply
	(*GetUserArticleAgreeReply)(nil),                 // 67: bff.v1.GetUserArticleAgreeReply
	(*GetUserArticleCollectReply)(nil),               // 68: bff.v1.GetUserArticleCollectReply
	(*GetArticleListStatisticReq)(nil),               // 69: bff.v1.GetArticleListStatisticReq
	(*GetArticleListStatisticReply)(nil),             // 70: bff.v1.GetArticleListStatisticReply
	(*GetLastArticleDraftReply)(nil),                 // 71: bff.v1.GetLastArticleDraftReply
	(*GetArticleSearchReq)(nil),                      // 72: bff.v1.GetArticleSearchReq
	(*GetArticleSearchReply)(nil),                    // 73: bff.v1.GetArticleSearchReply
	(*CreateArticleDraftReply)(nil),                  // 74: bff.v1.CreateArticleDraftReply
	(*GetCollectionsListReq)(nil),                    // 75: bff.v1.GetCollectionsListReq
	(*GetCollectionsListReply)(nil),                  // 76: bff.v1.GetCollectionsListReply
	(*GetCollectionsVisitorCountReq)(nil),            // 77: bff.v1.GetCollectionsVisitorCountReq
	(*GetCollectionsCountReply)(nil),                 // 78: bff.v1.GetCollectionsCountReply
	(*GetLastCollectionsDraftReply)(nil),             // 79: bff.v1.GetLastCollectionsDraftReply
	(*GetCollectionsListByVisitorReq)(nil),           // 80: bff.v1.GetCollectionsListByVisitorReq
	(*SendCollectionsReq)(nil),                       // 81: bff.v1.SendCollectionsReq
	(*SendCollectionsEditReq)(nil),                   // 82: bff.v1.SendCollectionsEditReq
	(*CreateCollectionsDraftReply)(nil),              // 83: bff.v1.CreateCollectionsDraftReply
	(*DeleteCollectionsReq)(nil),                     // 84: bff.v1.DeleteCollectionsReq
	(*ArticleDraftMarkReq)(nil),                      // 85: bff.v1.ArticleDraftMarkReq
	(*GetArticleDraftListReply)(nil),                 // 86: bff.v1.GetArticleDraftListReply
	(*SendArticleReq)(nil),                           // 87: bff.v1.SendArticleReq
	(*SendArticleEditReq)(nil),                       // 88: bff.v1.SendArticleEditReq
	(*DeleteArticleReq)(nil),                         // 89: bff.v1.DeleteArticleReq
	(*SetArticleAgreeReq)(nil),                       // 90: bff.v1.SetArticleAgreeReq
	(*SetArticleViewReq)(nil),                        // 91: bff.v1.SetArticleViewReq
	(*SetArticleCollectReq)(nil),                     // 92: bff.v1.SetArticleCollectReq
	(*CancelArticleAgreeReq)(nil),                    // 93: bff.v1.CancelArticleAgreeReq
	(*CancelArticleCollectReq)(nil),                  // 94: bff.v1.CancelArticleCollectReq
	(*ArticleStatisticJudgeReq)(nil),                 // 95: bff.v1.ArticleStatisticJudgeReq
	(*ArticleStatisticJudgeReply)(nil),               // 96: bff.v1.ArticleStatisticJudgeReply
	(*GetTalkListReq)(nil),                           // 97: bff.v1.GetTalkListReq
	(*GetTalkListReply)(nil),                         // 98: bff.v1.GetTalkListReply
	(*GetTalkCountReply)(nil),                        // 99: bff.v1.GetTalkCountReply
	(*GetTalkCountVisitorReq)(nil),                   // 100: bff.v1.GetTalkCountVisitorReq
	(*GetTalkListHotReq)(nil),                        // 101: bff.v1.GetTalkListHotReq
	(*GetTalkListHotReply)(nil),                      // 102: bff.v1.GetTalkListHotReply
	(*GetTalkListStatisticReq)(nil),                  // 103: bff.v1.GetTalkListStatisticReq
	(*GetTalkListStatisticReply)(nil),                // 104: bff.v1.GetTalkListStatisticReply
	(*GetUserTalkListReq)(nil),                       // 105: bff.v1.GetUserTalkListReq
	(*GetUserTalkListSimpleReq)(nil),                 // 106: bff.v1.GetUserTalkListSimpleReq
	(*GetUserTalkListVisitorReq)(nil),                // 107: bff.v1.GetUserTalkListVisitorReq
	(*GetTalkStatisticReq)(nil),                      // 108: bff.v1.GetTalkStatisticReq
	(*GetTalkStatisticReply)(nil),                    // 109: bff.v1.GetTalkStatisticReply
	(*GetLastTalkDraftReply)(nil),                    // 110: bff.v1.GetLastTalkDraftReply
	(*GetTalkSearchReq)(nil),                         // 111: bff.v1.GetTalkSearchReq
	(*GetTalkSearchReply)(nil),                       // 112: bff.v1.GetTalkSearchReply
	(*GetUserTalkAgreeReply)(nil),                    // 113: bff.v1.GetUserTalkAgreeReply
	(*GetUserTalkCollectReply)(nil),                  // 114: bff.v1.GetUserTalkCollectReply
	(*CreateTalkDraftReply)(nil),                     // 115: bff.v1.CreateTalkDraftReply
	(*SendTalkReq)(nil),                              // 116: bff.v1.SendTalkReq
	(*SendTalkEditReq)(nil),                          // 117: bff.v1.SendTalkEditReq
	(*DeleteTalkReq)(nil),                            // 118: bff.v1.DeleteTalkReq
	(*SetTalkViewReq)(nil),                           // 119: bff.v1.SetTalkViewReq
	(*TalkStatisticJudgeReq)(nil),                    // 120: bff.v1.TalkStatisticJudgeReq
	(*TalkStatisticJudgeReply)(nil),                  // 121: bff.v1.TalkStatisticJudgeReply
	(*SetTalkAgreeReq)(nil),                          // 122: bff.v1.SetTalkAgreeReq
	(*SetTalkCollectReq)(nil),                        // 123: bff.v1.SetTalkCollectReq
	(*CancelTalkAgreeReq)(nil),                       // 124: bff.v1.CancelTalkAgreeReq
	(*CancelTalkCollectReq)(nil),                     // 125: bff.v1.CancelTalkCollectReq
	(*GetLastColumnDraftReply)(nil),                  // 126: bff.v1.GetLastColumnDraftReply
	(*CreateColumnDraftReply)(nil),                   // 127: bff.v1.CreateColumnDraftReply
	(*SubscribeColumnReq)(nil),                       // 128: bff.v1.SubscribeColumnReq
	(*CancelSubscribeColumnReq)(nil),                 // 129: bff.v1.CancelSubscribeColumnReq
	(*SubscribeJudgeReq)(nil),                        // 130: bff.v1.SubscribeJudgeReq
	(*SubscribeJudgeReply)(nil),                      // 131: bff.v1.SubscribeJudgeReply
	(*SendColumnReq)(nil),                            // 132: bff.v1.SendColumnReq
	(*GetSubscribeListReq)(nil),                      // 133: bff.v1.GetSubscribeListReq
	(*GetSubscribeListReply)(nil),                    // 134: bff.v1.GetSubscribeListReply
	(*GetSubscribeListCountReq)(nil),                 // 135: bff.v1.GetSubscribeListCountReq
	(*GetSubscribeListCountReply)(nil),               // 136: bff.v1.GetSubscribeListCountReply
	(*GetUserFollowsReply)(nil),                      // 137: bff.v1.GetUserFollowsReply
	(*GetColumnListReq)(nil),                         // 138: bff.v1.GetColumnListReq
	(*GetColumnListReply)(nil),                       // 139: bff.v1.GetColumnListReply
	(*GetColumnListHotReq)(nil),                      // 140: bff.v1.GetColumnListHotReq
	(*GetColumnListHotReply)(nil),                    // 141: bff.v1.GetColumnListHotReply
	(*GetColumnListStatisticReq)(nil),                // 142: bff.v1.GetColumnListStatisticReq
	(*GetColumnListStatisticReply)(nil),              // 143: bff.v1.GetColumnListStatisticReply
	(*GetUserColumnListReq)(nil),                     // 144: bff.v1.GetUserColumnListReq
	(*GetUserColumnListSimpleReq)(nil),               // 145: bff.v1.GetUserColumnListSimpleReq
	(*GetUserColumnListVisitorReq)(nil),              // 146: bff.v1.GetUserColumnListVisitorReq
	(*GetColumnArticleListReq)(nil),                  // 147: bff.v1.GetColumnArticleListReq
	(*GetColumnCountVisitorReq)(nil),                 // 148: bff.v1.GetColumnCountVisitorReq
	(*GetColumnCountReply)(nil),                      // 149: bff.v1.GetColumnCountReply
	(*GetColumnSearchReq)(nil),                       // 150: bff.v1.GetColumnSearchReq
	(*GetColumnSearchReply)(nil),                     // 151: bff.v1.GetColumnSearchReply
	(*SendColumnEditReq)(nil),                        // 152: bff.v1.SendColumnEditReq
	(*DeleteColumnReq)(nil),                          // 153: bff.v1.DeleteColumnReq
	(*GetColumnStatisticReq)(nil),                    // 154: bff.v1.GetColumnStatisticReq
	(*GetColumnStatisticReply)(nil),                  // 155: bff.v1.GetColumnStatisticReply
	(*GetUserColumnAgreeReply)(nil),                  // 156: bff.v1.GetUserColumnAgreeReply
	(*GetUserColumnCollectReply)(nil),                // 157: bff.v1.GetUserColumnCollectReply
	(*GetUserSubscribeColumnReply)(nil),              // 158: bff.v1.GetUserSubscribeColumnReply
	(*ColumnStatisticJudgeReq)(nil),                  // 159: bff.v1.ColumnStatisticJudgeReq
	(*ColumnStatisticJudgeReply)(nil),                // 160: bff.v1.ColumnStatisticJudgeReply
	(*SetColumnAgreeReq)(nil),                        // 161: bff.v1.SetColumnAgreeReq
	(*CancelColumnAgreeReq)(nil),                     // 162: bff.v1.CancelColumnAgreeReq
	(*SetColumnCollectReq)(nil),                      // 163: bff.v1.SetColumnCollectReq
	(*CancelColumnCollectReq)(nil),                   // 164: bff.v1.CancelColumnCollectReq
	(*SetColumnViewReq)(nil),                         // 165: bff.v1.SetColumnViewReq
	(*AddColumnIncludesReq)(nil),                     // 166: bff.v1.AddColumnIncludesReq
	(*DeleteColumnIncludesReq)(nil),                  // 167: bff.v1.DeleteColumnIncludesReq
	(*GetNewsReq)(nil),                               // 168: bff.v1.GetNewsReq
	(*GetNewsReply)(nil),                             // 169: bff.v1.GetNewsReply
	(*GetAchievementListReq)(nil),                    // 170: bff.v1.GetAchievementListReq
	(*GetAchievementListReply)(nil),                  // 171: bff.v1.GetAchievementListReply
	(*GetUserAchievementReq)(nil),                    // 172: bff.v1.GetUserAchievementReq
	(*GetUserAchievementReply)(nil),                  // 173: bff.v1.GetUserAchievementReply
	(*GetUserMedalReq)(nil),                          // 174: bff.v1.GetUserMedalReq
	(*GetUserMedalReply)(nil),                        // 175: bff.v1.GetUserMedalReply
	(*AccessUserMedalReq)(nil),                       // 176: bff.v1.AccessUserMedalReq
	(*GetUserMedalProgressReply)(nil),                // 177: bff.v1.GetUserMedalProgressReply
	(*SetUserMedalReq)(nil),                          // 178: bff.v1.SetUserMedalReq
	(*CancelUserMedalSetReq)(nil),                    // 179: bff.v1.CancelUserMedalSetReq
	(*CreateCommentDraftReply)(nil),                  // 180: bff.v1.CreateCommentDraftReply
	(*GetLastCommentDraftReply)(nil),                 // 181: bff.v1.GetLastCommentDraftReply
	(*GetUserCommentAgreeReply)(nil),                 // 182: bff.v1.GetUserCommentAgreeReply
	(*GetCommentUserReply)(nil),                      // 183: bff.v1.GetCommentUserReply
	(*SendCommentReq)(nil),                           // 184: bff.v1.SendCommentReq
	(*SendSubCommentReq)(nil),                        // 185: bff.v1.SendSubCommentReq
	(*RemoveCommentReq)(nil),                         // 186: bff.v1.RemoveCommentReq
	(*RemoveSubCommentReq)(nil),                      // 187: bff.v1.RemoveSubCommentReq
	(*GetCommentListReq)(nil),                        // 188: bff.v1.GetCommentListReq
	(*GetCommentListReply)(nil),                      // 189: bff.v1.GetCommentListReply
	(*GetUserCommentArticleReplyListReq)(nil),        // 190: bff.v1.GetUserCommentArticleReplyListReq
	(*GetUserCommentArticleReplyListReply)(nil),      // 191: bff.v1.GetUserCommentArticleReplyListReply
	(*GetUserSubCommentArticleReplyListReq)(nil),     // 192: bff.v1.GetUserSubCommentArticleReplyListReq
	(*GetUserSubCommentArticleReplyListReply)(nil),   // 193: bff.v1.GetUserSubCommentArticleReplyListReply
	(*GetUserCommentTalkReplyListReq)(nil),           // 194: bff.v1.GetUserCommentTalkReplyListReq
	(*GetUserCommentTalkReplyListReply)(nil),         // 195: bff.v1.GetUserCommentTalkReplyListReply
	(*GetUserSubCommentTalkReplyListReq)(nil),        // 196: bff.v1.GetUserSubCommentTalkReplyListReq
	(*GetUserSubCommentTalkReplyListReply)(nil),      // 197: bff.v1.GetUserSubCommentTalkReplyListReply
	(*GetUserCommentArticleRepliedListReq)(nil),      // 198: bff.v1.GetUserCommentArticleRepliedListReq
	(*GetUserCommentArticleRepliedListReply)(nil),    // 199: bff.v1.GetUserCommentArticleRepliedListReply
	(*GetUserSubCommentArticleRepliedListReq)(nil),   // 200: bff.v1.GetUserSubCommentArticleRepliedListReq
	(*GetUserSubCommentArticleRepliedListReply)(nil), // 201: bff.v1.GetUserSubCommentArticleRepliedListReply
	(*GetUserCommentTalkRepliedListReq)(nil),         // 202: bff.v1.GetUserCommentTalkRepliedListReq
	(*GetUserCommentTalkRepliedListReply)(nil),       // 203: bff.v1.GetUserCommentTalkRepliedListReply
	(*GetUserSubCommentTalkRepliedListReq)(nil),      // 204: bff.v1.GetUserSubCommentTalkRepliedListReq
	(*GetUserSubCommentTalkRepliedListReply)(nil),    // 205: bff.v1.GetUserSubCommentTalkRepliedListReply
	(*GetSubCommentListReq)(nil),                     // 206: bff.v1.GetSubCommentListReq
	(*GetSubCommentListReply)(nil),                   // 207: bff.v1.GetSubCommentListReply
	(*SetCommentAgreeReq)(nil),                       // 208: bff.v1.SetCommentAgreeReq
	(*SetSubCommentAgreeReq)(nil),                    // 209: bff.v1.SetSubCommentAgreeReq
	(*CancelCommentAgreeReq)(nil),                    // 210: bff.v1.CancelCommentAgreeReq
	(*CancelSubCommentAgreeReq)(nil),                 // 211: bff.v1.CancelSubCommentAgreeReq
	(*GetAvatarReviewReply_Review)(nil),              // 212: bff.v1.GetAvatarReviewReply.Review
	(*GetCoverReviewReply_Review)(nil),               // 213: bff.v1.GetCoverReviewReply.Review
	(*GetProfileListReply_Profile)(nil),              // 214: bff.v1.GetProfileListReply.Profile
	(*GetColumnSubscribesReply_Subscribes)(nil),      // 215: bff.v1.GetColumnSubscribesReply.Subscribes
	(*GetFollowListReply_Follow)(nil),                // 216: bff.v1.GetFollowListReply.Follow
	(*GetFollowedListReply_Follow)(nil),              // 217: bff.v1.GetFollowedListReply.Follow
	(*GetUserSearchReply_List)(nil),                  // 218: bff.v1.GetUserSearchReply.List
	(*GetLeaderBoardReply_Board)(nil),                // 219: bff.v1.GetLeaderBoardReply.Board
	(*GetArticleListReply_Article)(nil),              // 220: bff.v1.GetArticleListReply.Article
	(*GetArticleListHotReply_Article)(nil),           // 221: bff.v1.GetArticleListHotReply.Article
	nil,                                              // 222: bff.v1.GetUserArticleAgreeReply.AgreeEntry
	nil,                                              // 223: bff.v1.GetUserArticleCollectReply.CollectEntry
	(*GetArticleListStatisticReply_Count)(nil),       // 224: bff.v1.GetArticleListStatisticReply.Count
	(*GetArticleSearchReply_List)(nil),               // 225: bff.v1.GetArticleSearchReply.List
	(*GetCollectionsListReply_Collections)(nil),      // 226: bff.v1.GetCollectionsListReply.Collections
	(*GetArticleDraftListReply_Draft)(nil),           // 227: bff.v1.GetArticleDraftListReply.Draft
	(*GetTalkListReply_Talk)(nil),                    // 228: bff.v1.GetTalkListReply.Talk
	(*GetTalkListHotReply_Talk)(nil),                 // 229: bff.v1.GetTalkListHotReply.Talk
	(*GetTalkListStatisticReply_Count)(nil),          // 230: bff.v1.GetTalkListStatisticReply.Count
	(*GetTalkSearchReply_List)(nil),                  // 231: bff.v1.GetTalkSearchReply.List
	nil,                                              // 232: bff.v1.GetUserTalkAgreeReply.AgreeEntry
	nil,                                              // 233: bff.v1.GetUserTalkCollectReply.CollectEntry
	(*GetSubscribeListReply_Subscribe)(nil),          // 234: bff.v1.GetSubscribeListReply.Subscribe
	nil,                                              // 235: bff.v1.GetUserFollowsReply.FollowsEntry
	(*GetColumnListReply_Column)(nil),                // 236: bff.v1.GetColumnListReply.Column
	(*GetColumnListHotReply_Column)(nil),             // 237: bff.v1.GetColumnListHotReply.Column
	(*GetColumnListStatisticReply_Count)(nil),        // 238: bff.v1.GetColumnListStatisticReply.Count
	(*GetColumnSearchReply_List)(nil),                // 239: bff.v1.GetColumnSearchReply.List
	nil,                                              // 240: bff.v1.GetUserColumnAgreeReply.AgreeEntry
	nil,                                              // 241: bff.v1.GetUserColumnCollectReply.CollectEntry
	nil,                                              // 242: bff.v1.GetUserSubscribeColumnReply.SubscribeEntry
	(*GetNewsReply_News)(nil),                        // 243: bff.v1.GetNewsReply.News
	(*GetAchievementListReply_Achievement)(nil),      // 244: bff.v1.GetAchievementListReply.Achievement
	nil,                                 // 245: bff.v1.GetUserCommentAgreeReply.AgreeEntry
	(*GetCommentListReply_Comment)(nil), // 246: bff.v1.GetCommentListReply.Comment
	(*GetUserCommentArticleReplyListReply_List)(nil),      // 247: bff.v1.GetUserCommentArticleReplyListReply.List
	(*GetUserSubCommentArticleReplyListReply_List)(nil),   // 248: bff.v1.GetUserSubCommentArticleReplyListReply.List
	(*GetUserCommentTalkReplyListReply_List)(nil),         // 249: bff.v1.GetUserCommentTalkReplyListReply.List
	(*GetUserSubCommentTalkReplyListReply_List)(nil),      // 250: bff.v1.GetUserSubCommentTalkReplyListReply.List
	(*GetUserCommentArticleRepliedListReply_List)(nil),    // 251: bff.v1.GetUserCommentArticleRepliedListReply.List
	(*GetUserSubCommentArticleRepliedListReply_List)(nil), // 252: bff.v1.GetUserSubCommentArticleRepliedListReply.List
	(*GetUserCommentTalkRepliedListReply_List)(nil),       // 253: bff.v1.GetUserCommentTalkRepliedListReply.List
	(*GetUserSubCommentTalkRepliedListReply_List)(nil),    // 254: bff.v1.GetUserSubCommentTalkRepliedListReply.List
	(*GetSubCommentListReply_Comment)(nil),                // 255: bff.v1.GetSubCommentListReply.Comment
	(*emptypb.Empty)(nil),                                 // 256: google.protobuf.Empty
}
var file_bff_interface_v1_bff_proto_depIdxs = []int32{
	212, // 0: bff.v1.GetAvatarReviewReply.review:type_name -> bff.v1.GetAvatarReviewReply.Review
	213, // 1: bff.v1.GetCoverReviewReply.review:type_name -> bff.v1.GetCoverReviewReply.Review
	214, // 2: bff.v1.GetProfileListReply.profile:type_name -> bff.v1.GetProfileListReply.Profile
	215, // 3: bff.v1.GetColumnSubscribesReply.subscribes:type_name -> bff.v1.GetColumnSubscribesReply.Subscribes
	216, // 4: bff.v1.GetFollowListReply.follow:type_name -> bff.v1.GetFollowListReply.Follow
	217, // 5: bff.v1.GetFollowedListReply.follow:type_name -> bff.v1.GetFollowedListReply.Follow
	218, // 6: bff.v1.GetUserSearchReply.list:type_name -> bff.v1.GetUserSearchReply.List
	219, // 7: bff.v1.GetLeaderBoardReply.board:type_name -> bff.v1.GetLeaderBoardReply.Board
	220, // 8: bff.v1.GetArticleListReply.article:type_name -> bff.v1.GetArticleListReply.Article
	221, // 9: bff.v1.GetArticleListHotReply.article:type_name -> bff.v1.GetArticleListHotReply.Article
	222, // 10: bff.v1.GetUserArticleAgreeReply.agree:type_name -> bff.v1.GetUserArticleAgreeReply.AgreeEntry
	223, // 11: bff.v1.GetUserArticleCollectReply.collect:type_name -> bff.v1.GetUserArticleCollectReply.CollectEntry
	224, // 12: bff.v1.GetArticleListStatisticReply.count:type_name -> bff.v1.GetArticleListStatisticReply.Count
	225, // 13: bff.v1.GetArticleSearchReply.list:type_name -> bff.v1.GetArticleSearchReply.List
	226, // 14: bff.v1.GetCollectionsListReply.collections:type_name -> bff.v1.GetCollectionsListReply.Collections
	227, // 15: bff.v1.GetArticleDraftListReply.draft:type_name -> bff.v1.GetArticleDraftListReply.Draft
	228, // 16: bff.v1.GetTalkListReply.talk:type_name -> bff.v1.GetTalkListReply.Talk
	229, // 17: bff.v1.GetTalkListHotReply.talk:type_name -> bff.v1.GetTalkListHotReply.Talk
	230, // 18: bff.v1.GetTalkListStatisticReply.count:type_name -> bff.v1.GetTalkListStatisticReply.Count
	231, // 19: bff.v1.GetTalkSearchReply.list:type_name -> bff.v1.GetTalkSearchReply.List
	232, // 20: bff.v1.GetUserTalkAgreeReply.agree:type_name -> bff.v1.GetUserTalkAgreeReply.AgreeEntry
	233, // 21: bff.v1.GetUserTalkCollectReply.collect:type_name -> bff.v1.GetUserTalkCollectReply.CollectEntry
	234, // 22: bff.v1.GetSubscribeListReply.subscribe:type_name -> bff.v1.GetSubscribeListReply.Subscribe
	235, // 23: bff.v1.GetUserFollowsReply.follows:type_name -> bff.v1.GetUserFollowsReply.FollowsEntry
	236, // 24: bff.v1.GetColumnListReply.column:type_name -> bff.v1.GetColumnListReply.Column
	237, // 25: bff.v1.GetColumnListHotReply.column:type_name -> bff.v1.GetColumnListHotReply.Column
	238, // 26: bff.v1.GetColumnListStatisticReply.count:type_name -> bff.v1.GetColumnListStatisticReply.Count
	239, // 27: bff.v1.GetColumnSearchReply.list:type_name -> bff.v1.GetColumnSearchReply.List
	240, // 28: bff.v1.GetUserColumnAgreeReply.agree:type_name -> bff.v1.GetUserColumnAgreeReply.AgreeEntry
	241, // 29: bff.v1.GetUserColumnCollectReply.collect:type_name -> bff.v1.GetUserColumnCollectReply.CollectEntry
	242, // 30: bff.v1.GetUserSubscribeColumnReply.subscribe:type_name -> bff.v1.GetUserSubscribeColumnReply.SubscribeEntry
	243, // 31: bff.v1.GetNewsReply.news:type_name -> bff.v1.GetNewsReply.News
	244, // 32: bff.v1.GetAchievementListReply.achievement:type_name -> bff.v1.GetAchievementListReply.Achievement
	245, // 33: bff.v1.GetUserCommentAgreeReply.agree:type_name -> bff.v1.GetUserCommentAgreeReply.AgreeEntry
	246, // 34: bff.v1.GetCommentListReply.comment:type_name -> bff.v1.GetCommentListReply.Comment
	247, // 35: bff.v1.GetUserCommentArticleReplyListReply.list:type_name -> bff.v1.GetUserCommentArticleReplyListReply.List
	248, // 36: bff.v1.GetUserSubCommentArticleReplyListReply.list:type_name -> bff.v1.GetUserSubCommentArticleReplyListReply.List
	249, // 37: bff.v1.GetUserCommentTalkReplyListReply.list:type_name -> bff.v1.GetUserCommentTalkReplyListReply.List
	250, // 38: bff.v1.GetUserSubCommentTalkReplyListReply.list:type_name -> bff.v1.GetUserSubCommentTalkReplyListReply.List
	251, // 39: bff.v1.GetUserCommentArticleRepliedListReply.list:type_name -> bff.v1.GetUserCommentArticleRepliedListReply.List
	252, // 40: bff.v1.GetUserSubCommentArticleRepliedListReply.list:type_name -> bff.v1.GetUserSubCommentArticleRepliedListReply.List
	253, // 41: bff.v1.GetUserCommentTalkRepliedListReply.list:type_name -> bff.v1.GetUserCommentTalkRepliedListReply.List
	254, // 42: bff.v1.GetUserSubCommentTalkRepliedListReply.list:type_name -> bff.v1.GetUserSubCommentTalkRepliedListReply.List
	255, // 43: bff.v1.GetSubCommentListReply.comment:type_name -> bff.v1.GetSubCommentListReply.Comment
	0,   // 44: bff.v1.Bff.UserRegister:input_type -> bff.v1.UserRegisterReq
	1,   // 45: bff.v1.Bff.LoginByPassword:input_type -> bff.v1.LoginByPasswordReq
	2,   // 46: bff.v1.Bff.LoginByCode:input_type -> bff.v1.LoginByCodeReq
	3,   // 47: bff.v1.Bff.LoginByWeChat:input_type -> bff.v1.LoginByWeChatReq
	4,   // 48: bff.v1.Bff.LoginByGithub:input_type -> bff.v1.LoginByGithubReq
	6,   // 49: bff.v1.Bff.LoginPasswordReset:input_type -> bff.v1.LoginPasswordResetReq
	7,   // 50: bff.v1.Bff.SendPhoneCode:input_type -> bff.v1.SendPhoneCodeReq
	8,   // 51: bff.v1.Bff.SendEmailCode:input_type -> bff.v1.SendEmailCodeReq
	256, // 52: bff.v1.Bff.GetCosSessionKey:input_type -> google.protobuf.Empty
	10,  // 53: bff.v1.Bff.GetAvatarReview:input_type -> bff.v1.GetAvatarReviewReq
	12,  // 54: bff.v1.Bff.GetCoverReview:input_type -> bff.v1.GetCoverReviewReq
	256, // 55: bff.v1.Bff.GetAccount:input_type -> google.protobuf.Empty
	256, // 56: bff.v1.Bff.GetProfile:input_type -> google.protobuf.Empty
	16,  // 57: bff.v1.Bff.GetProfileList:input_type -> bff.v1.GetProfileListReq
	256, // 58: bff.v1.Bff.GetUserInfo:input_type -> google.protobuf.Empty
	18,  // 59: bff.v1.Bff.GetUserInfoVisitor:input_type -> bff.v1.GetUserInfoVisitorReq
	20,  // 60: bff.v1.Bff.GetUserFollow:input_type -> bff.v1.GetUserFollowReq
	256, // 61: bff.v1.Bff.GetUserFollows:input_type -> google.protobuf.Empty
	24,  // 62: bff.v1.Bff.GetFollowList:input_type -> bff.v1.GetFollowListReq
	26,  // 63: bff.v1.Bff.GetFollowListCount:input_type -> bff.v1.GetFollowListCountReq
	28,  // 64: bff.v1.Bff.GetFollowedList:input_type -> bff.v1.GetFollowedListReq
	30,  // 65: bff.v1.Bff.GetFollowedListCount:input_type -> bff.v1.GetFollowedListCountReq
	256, // 66: bff.v1.Bff.GetProfileUpdate:input_type -> google.protobuf.Empty
	33,  // 67: bff.v1.Bff.GetUserSearch:input_type -> bff.v1.GetUserSearchReq
	35,  // 68: bff.v1.Bff.SetProfileUpdate:input_type -> bff.v1.SetProfileUpdateReq
	36,  // 69: bff.v1.Bff.SetUserPhone:input_type -> bff.v1.SetUserPhoneReq
	37,  // 70: bff.v1.Bff.SetUserEmail:input_type -> bff.v1.SetUserEmailReq
	38,  // 71: bff.v1.Bff.SetUserPassword:input_type -> bff.v1.SetUserPasswordReq
	39,  // 72: bff.v1.Bff.SetUserFollow:input_type -> bff.v1.SetUserFollowReq
	40,  // 73: bff.v1.Bff.CancelUserFollow:input_type -> bff.v1.CancelUserFollowReq
	41,  // 74: bff.v1.Bff.ChangeUserPassword:input_type -> bff.v1.ChangeUserPasswordReq
	42,  // 75: bff.v1.Bff.UnbindUserPhone:input_type -> bff.v1.UnbindUserPhoneReq
	43,  // 76: bff.v1.Bff.UnbindUserEmail:input_type -> bff.v1.UnbindUserEmailReq
	256, // 77: bff.v1.Bff.GetLeaderBoard:input_type -> google.protobuf.Empty
	45,  // 78: bff.v1.Bff.GetCollectArticleList:input_type -> bff.v1.GetCollectArticleListReq
	46,  // 79: bff.v1.Bff.GetCollectArticleCount:input_type -> bff.v1.GetCollectArticleCountReq
	48,  // 80: bff.v1.Bff.GetCollectTalkList:input_type -> bff.v1.GetCollectTalkListReq
	49,  // 81: bff.v1.Bff.GetCollectTalkCount:input_type -> bff.v1.GetCollectTalkCountReq
	51,  // 82: bff.v1.Bff.GetCollectColumnList:input_type -> bff.v1.GetCollectColumnListReq
	52,  // 83: bff.v1.Bff.GetCollectColumnCount:input_type -> bff.v1.GetCollectColumnCountReq
	54,  // 84: bff.v1.Bff.GetCollections:input_type -> bff.v1.GetCollectionsReq
	75,  // 85: bff.v1.Bff.GetCollectionsList:input_type -> bff.v1.GetCollectionsListReq
	256, // 86: bff.v1.Bff.GetCollectionsListAll:input_type -> google.protobuf.Empty
	256, // 87: bff.v1.Bff.GetCollectionsCount:input_type -> google.protobuf.Empty
	80,  // 88: bff.v1.Bff.GetCollectionsListByVisitor:input_type -> bff.v1.GetCollectionsListByVisitorReq
	77,  // 89: bff.v1.Bff.GetCollectionsVisitorCount:input_type -> bff.v1.GetCollectionsVisitorCountReq
	256, // 90: bff.v1.Bff.GetLastCollectionsDraft:input_type -> google.protobuf.Empty
	256, // 91: bff.v1.Bff.CreateCollectionsDraft:input_type -> google.protobuf.Empty
	81,  // 92: bff.v1.Bff.SendCollections:input_type -> bff.v1.SendCollectionsReq
	82,  // 93: bff.v1.Bff.SendCollectionsEdit:input_type -> bff.v1.SendCollectionsEditReq
	84,  // 94: bff.v1.Bff.DeleteCollections:input_type -> bff.v1.DeleteCollectionsReq
	56,  // 95: bff.v1.Bff.GetArticleList:input_type -> bff.v1.GetArticleListReq
	60,  // 96: bff.v1.Bff.GetArticleListHot:input_type -> bff.v1.GetArticleListHotReq
	147, // 97: bff.v1.Bff.GetColumnArticleList:input_type -> bff.v1.GetColumnArticleListReq
	256, // 98: bff.v1.Bff.GetArticleCount:input_type -> google.protobuf.Empty
	59,  // 99: bff.v1.Bff.GetArticleCountVisitor:input_type -> bff.v1.GetArticleCountVisitorReq
	62,  // 100: bff.v1.Bff.GetUserArticleList:input_type -> bff.v1.GetUserArticleListReq
	63,  // 101: bff.v1.Bff.GetUserArticleListSimple:input_type -> bff.v1.GetUserArticleListSimpleReq
	64,  // 102: bff.v1.Bff.GetUserArticleListVisitor:input_type -> bff.v1.GetUserArticleListVisitorReq
	256, // 103: bff.v1.Bff.GetUserArticleListAll:input_type -> google.protobuf.Empty
	65,  // 104: bff.v1.Bff.GetArticleStatistic:input_type -> bff.v1.GetArticleStatisticReq
	256, // 105: bff.v1.Bff.GetUserArticleAgree:input_type -> google.protobuf.Empty
	256, // 106: bff.v1.Bff.GetUserArticleCollect:input_type -> google.protobuf.Empty
	69,  // 107: bff.v1.Bff.GetArticleListStatistic:input_type -> bff.v1.GetArticleListStatisticReq
	256, // 108: bff.v1.Bff.GetLastArticleDraft:input_type -> google.protobuf.Empty
	72,  // 109: bff.v1.Bff.GetArticleSearch:input_type -> bff.v1.GetArticleSearchReq
	256, // 110: bff.v1.Bff.CreateArticleDraft:input_type -> google.protobuf.Empty
	85,  // 111: bff.v1.Bff.ArticleDraftMark:input_type -> bff.v1.ArticleDraftMarkReq
	256, // 112: bff.v1.Bff.GetArticleDraftList:input_type -> google.protobuf.Empty
	87,  // 113: bff.v1.Bff.SendArticle:input_type -> bff.v1.SendArticleReq
	88,  // 114: bff.v1.Bff.SendArticleEdit:input_type -> bff.v1.SendArticleEditReq
	89,  // 115: bff.v1.Bff.DeleteArticle:input_type -> bff.v1.DeleteArticleReq
	90,  // 116: bff.v1.Bff.SetArticleAgree:input_type -> bff.v1.SetArticleAgreeReq
	91,  // 117: bff.v1.Bff.SetArticleView:input_type -> bff.v1.SetArticleViewReq
	92,  // 118: bff.v1.Bff.SetArticleCollect:input_type -> bff.v1.SetArticleCollectReq
	93,  // 119: bff.v1.Bff.CancelArticleAgree:input_type -> bff.v1.CancelArticleAgreeReq
	94,  // 120: bff.v1.Bff.CancelArticleCollect:input_type -> bff.v1.CancelArticleCollectReq
	95,  // 121: bff.v1.Bff.ArticleStatisticJudge:input_type -> bff.v1.ArticleStatisticJudgeReq
	97,  // 122: bff.v1.Bff.GetTalkList:input_type -> bff.v1.GetTalkListReq
	101, // 123: bff.v1.Bff.GetTalkListHot:input_type -> bff.v1.GetTalkListHotReq
	103, // 124: bff.v1.Bff.GetTalkListStatistic:input_type -> bff.v1.GetTalkListStatisticReq
	105, // 125: bff.v1.Bff.GetUserTalkList:input_type -> bff.v1.GetUserTalkListReq
	106, // 126: bff.v1.Bff.GetUserTalkListSimple:input_type -> bff.v1.GetUserTalkListSimpleReq
	107, // 127: bff.v1.Bff.GetUserTalkListVisitor:input_type -> bff.v1.GetUserTalkListVisitorReq
	256, // 128: bff.v1.Bff.GetTalkCount:input_type -> google.protobuf.Empty
	100, // 129: bff.v1.Bff.GetTalkCountVisitor:input_type -> bff.v1.GetTalkCountVisitorReq
	108, // 130: bff.v1.Bff.GetTalkStatistic:input_type -> bff.v1.GetTalkStatisticReq
	256, // 131: bff.v1.Bff.GetLastTalkDraft:input_type -> google.protobuf.Empty
	111, // 132: bff.v1.Bff.GetTalkSearch:input_type -> bff.v1.GetTalkSearchReq
	256, // 133: bff.v1.Bff.GetUserTalkAgree:input_type -> google.protobuf.Empty
	256, // 134: bff.v1.Bff.GetUserTalkCollect:input_type -> google.protobuf.Empty
	256, // 135: bff.v1.Bff.CreateTalkDraft:input_type -> google.protobuf.Empty
	116, // 136: bff.v1.Bff.SendTalk:input_type -> bff.v1.SendTalkReq
	117, // 137: bff.v1.Bff.SendTalkEdit:input_type -> bff.v1.SendTalkEditReq
	118, // 138: bff.v1.Bff.DeleteTalk:input_type -> bff.v1.DeleteTalkReq
	119, // 139: bff.v1.Bff.SetTalkView:input_type -> bff.v1.SetTalkViewReq
	120, // 140: bff.v1.Bff.TalkStatisticJudge:input_type -> bff.v1.TalkStatisticJudgeReq
	122, // 141: bff.v1.Bff.SetTalkAgree:input_type -> bff.v1.SetTalkAgreeReq
	123, // 142: bff.v1.Bff.SetTalkCollect:input_type -> bff.v1.SetTalkCollectReq
	124, // 143: bff.v1.Bff.CancelTalkAgree:input_type -> bff.v1.CancelTalkAgreeReq
	125, // 144: bff.v1.Bff.CancelTalkCollect:input_type -> bff.v1.CancelTalkCollectReq
	256, // 145: bff.v1.Bff.GetLastColumnDraft:input_type -> google.protobuf.Empty
	256, // 146: bff.v1.Bff.CreateColumnDraft:input_type -> google.protobuf.Empty
	128, // 147: bff.v1.Bff.SubscribeColumn:input_type -> bff.v1.SubscribeColumnReq
	129, // 148: bff.v1.Bff.CancelSubscribeColumn:input_type -> bff.v1.CancelSubscribeColumnReq
	130, // 149: bff.v1.Bff.SubscribeJudge:input_type -> bff.v1.SubscribeJudgeReq
	132, // 150: bff.v1.Bff.SendColumn:input_type -> bff.v1.SendColumnReq
	133, // 151: bff.v1.Bff.GetSubscribeList:input_type -> bff.v1.GetSubscribeListReq
	135, // 152: bff.v1.Bff.GetSubscribeListCount:input_type -> bff.v1.GetSubscribeListCountReq
	22,  // 153: bff.v1.Bff.GetColumnSubscribes:input_type -> bff.v1.GetColumnSubscribesReq
	138, // 154: bff.v1.Bff.GetColumnList:input_type -> bff.v1.GetColumnListReq
	140, // 155: bff.v1.Bff.GetColumnListHot:input_type -> bff.v1.GetColumnListHotReq
	142, // 156: bff.v1.Bff.GetColumnListStatistic:input_type -> bff.v1.GetColumnListStatisticReq
	144, // 157: bff.v1.Bff.GetUserColumnList:input_type -> bff.v1.GetUserColumnListReq
	145, // 158: bff.v1.Bff.GetUserColumnListSimple:input_type -> bff.v1.GetUserColumnListSimpleReq
	146, // 159: bff.v1.Bff.GetUserColumnListVisitor:input_type -> bff.v1.GetUserColumnListVisitorReq
	256, // 160: bff.v1.Bff.GetColumnCount:input_type -> google.protobuf.Empty
	148, // 161: bff.v1.Bff.GetColumnCountVisitor:input_type -> bff.v1.GetColumnCountVisitorReq
	150, // 162: bff.v1.Bff.GetColumnSearch:input_type -> bff.v1.GetColumnSearchReq
	152, // 163: bff.v1.Bff.SendColumnEdit:input_type -> bff.v1.SendColumnEditReq
	153, // 164: bff.v1.Bff.DeleteColumn:input_type -> bff.v1.DeleteColumnReq
	154, // 165: bff.v1.Bff.GetColumnStatistic:input_type -> bff.v1.GetColumnStatisticReq
	256, // 166: bff.v1.Bff.GetUserColumnAgree:input_type -> google.protobuf.Empty
	256, // 167: bff.v1.Bff.GetUserColumnCollect:input_type -> google.protobuf.Empty
	256, // 168: bff.v1.Bff.GetUserSubscribeColumn:input_type -> google.protobuf.Empty
	159, // 169: bff.v1.Bff.ColumnStatisticJudge:input_type -> bff.v1.ColumnStatisticJudgeReq
	161, // 170: bff.v1.Bff.SetColumnAgree:input_type -> bff.v1.SetColumnAgreeReq
	162, // 171: bff.v1.Bff.CancelColumnAgree:input_type -> bff.v1.CancelColumnAgreeReq
	163, // 172: bff.v1.Bff.SetColumnCollect:input_type -> bff.v1.SetColumnCollectReq
	164, // 173: bff.v1.Bff.CancelColumnCollect:input_type -> bff.v1.CancelColumnCollectReq
	165, // 174: bff.v1.Bff.SetColumnView:input_type -> bff.v1.SetColumnViewReq
	166, // 175: bff.v1.Bff.AddColumnIncludes:input_type -> bff.v1.AddColumnIncludesReq
	167, // 176: bff.v1.Bff.DeleteColumnIncludes:input_type -> bff.v1.DeleteColumnIncludesReq
	168, // 177: bff.v1.Bff.GetNews:input_type -> bff.v1.GetNewsReq
	170, // 178: bff.v1.Bff.GetAchievementList:input_type -> bff.v1.GetAchievementListReq
	172, // 179: bff.v1.Bff.GetUserAchievement:input_type -> bff.v1.GetUserAchievementReq
	174, // 180: bff.v1.Bff.GetUserMedal:input_type -> bff.v1.GetUserMedalReq
	176, // 181: bff.v1.Bff.AccessUserMedal:input_type -> bff.v1.AccessUserMedalReq
	256, // 182: bff.v1.Bff.GetUserMedalProgress:input_type -> google.protobuf.Empty
	178, // 183: bff.v1.Bff.SetUserMedal:input_type -> bff.v1.SetUserMedalReq
	179, // 184: bff.v1.Bff.CancelUserMedalSet:input_type -> bff.v1.CancelUserMedalSetReq
	256, // 185: bff.v1.Bff.GetLastCommentDraft:input_type -> google.protobuf.Empty
	256, // 186: bff.v1.Bff.GetUserCommentAgree:input_type -> google.protobuf.Empty
	256, // 187: bff.v1.Bff.GetCommentUser:input_type -> google.protobuf.Empty
	188, // 188: bff.v1.Bff.GetCommentList:input_type -> bff.v1.GetCommentListReq
	206, // 189: bff.v1.Bff.GetSubCommentList:input_type -> bff.v1.GetSubCommentListReq
	188, // 190: bff.v1.Bff.GetCommentListHot:input_type -> bff.v1.GetCommentListReq
	190, // 191: bff.v1.Bff.GetUserCommentArticleReplyList:input_type -> bff.v1.GetUserCommentArticleReplyListReq
	192, // 192: bff.v1.Bff.GetUserSubCommentArticleReplyList:input_type -> bff.v1.GetUserSubCommentArticleReplyListReq
	194, // 193: bff.v1.Bff.GetUserCommentTalkReplyList:input_type -> bff.v1.GetUserCommentTalkReplyListReq
	196, // 194: bff.v1.Bff.GetUserSubCommentTalkReplyList:input_type -> bff.v1.GetUserSubCommentTalkReplyListReq
	198, // 195: bff.v1.Bff.GetUserCommentArticleRepliedList:input_type -> bff.v1.GetUserCommentArticleRepliedListReq
	200, // 196: bff.v1.Bff.GetUserSubCommentArticleRepliedList:input_type -> bff.v1.GetUserSubCommentArticleRepliedListReq
	202, // 197: bff.v1.Bff.GetUserCommentTalkRepliedList:input_type -> bff.v1.GetUserCommentTalkRepliedListReq
	204, // 198: bff.v1.Bff.GetUserSubCommentTalkRepliedList:input_type -> bff.v1.GetUserSubCommentTalkRepliedListReq
	256, // 199: bff.v1.Bff.CreateCommentDraft:input_type -> google.protobuf.Empty
	184, // 200: bff.v1.Bff.SendComment:input_type -> bff.v1.SendCommentReq
	185, // 201: bff.v1.Bff.SendSubComment:input_type -> bff.v1.SendSubCommentReq
	186, // 202: bff.v1.Bff.RemoveComment:input_type -> bff.v1.RemoveCommentReq
	187, // 203: bff.v1.Bff.RemoveSubComment:input_type -> bff.v1.RemoveSubCommentReq
	208, // 204: bff.v1.Bff.SetCommentAgree:input_type -> bff.v1.SetCommentAgreeReq
	209, // 205: bff.v1.Bff.SetSubCommentAgree:input_type -> bff.v1.SetSubCommentAgreeReq
	210, // 206: bff.v1.Bff.CancelCommentAgree:input_type -> bff.v1.CancelCommentAgreeReq
	211, // 207: bff.v1.Bff.CancelSubCommentAgree:input_type -> bff.v1.CancelSubCommentAgreeReq
	256, // 208: bff.v1.Bff.UserRegister:output_type -> google.protobuf.Empty
	5,   // 209: bff.v1.Bff.LoginByPassword:output_type -> bff.v1.LoginReply
	5,   // 210: bff.v1.Bff.LoginByCode:output_type -> bff.v1.LoginReply
	5,   // 211: bff.v1.Bff.LoginByWeChat:output_type -> bff.v1.LoginReply
	5,   // 212: bff.v1.Bff.LoginByGithub:output_type -> bff.v1.LoginReply
	256, // 213: bff.v1.Bff.LoginPasswordReset:output_type -> google.protobuf.Empty
	256, // 214: bff.v1.Bff.SendPhoneCode:output_type -> google.protobuf.Empty
	256, // 215: bff.v1.Bff.SendEmailCode:output_type -> google.protobuf.Empty
	9,   // 216: bff.v1.Bff.GetCosSessionKey:output_type -> bff.v1.GetCosSessionKeyReply
	11,  // 217: bff.v1.Bff.GetAvatarReview:output_type -> bff.v1.GetAvatarReviewReply
	13,  // 218: bff.v1.Bff.GetCoverReview:output_type -> bff.v1.GetCoverReviewReply
	14,  // 219: bff.v1.Bff.GetAccount:output_type -> bff.v1.GetAccountReply
	15,  // 220: bff.v1.Bff.GetProfile:output_type -> bff.v1.GetProfileReply
	17,  // 221: bff.v1.Bff.GetProfileList:output_type -> bff.v1.GetProfileListReply
	19,  // 222: bff.v1.Bff.GetUserInfo:output_type -> bff.v1.GetUserInfoReply
	19,  // 223: bff.v1.Bff.GetUserInfoVisitor:output_type -> bff.v1.GetUserInfoReply
	21,  // 224: bff.v1.Bff.GetUserFollow:output_type -> bff.v1.GetUserFollowReply
	137, // 225: bff.v1.Bff.GetUserFollows:output_type -> bff.v1.GetUserFollowsReply
	25,  // 226: bff.v1.Bff.GetFollowList:output_type -> bff.v1.GetFollowListReply
	27,  // 227: bff.v1.Bff.GetFollowListCount:output_type -> bff.v1.GetFollowListCountReply
	29,  // 228: bff.v1.Bff.GetFollowedList:output_type -> bff.v1.GetFollowedListReply
	31,  // 229: bff.v1.Bff.GetFollowedListCount:output_type -> bff.v1.GetFollowedListCountReply
	32,  // 230: bff.v1.Bff.GetProfileUpdate:output_type -> bff.v1.GetProfileUpdateReply
	34,  // 231: bff.v1.Bff.GetUserSearch:output_type -> bff.v1.GetUserSearchReply
	256, // 232: bff.v1.Bff.SetProfileUpdate:output_type -> google.protobuf.Empty
	256, // 233: bff.v1.Bff.SetUserPhone:output_type -> google.protobuf.Empty
	256, // 234: bff.v1.Bff.SetUserEmail:output_type -> google.protobuf.Empty
	256, // 235: bff.v1.Bff.SetUserPassword:output_type -> google.protobuf.Empty
	256, // 236: bff.v1.Bff.SetUserFollow:output_type -> google.protobuf.Empty
	256, // 237: bff.v1.Bff.CancelUserFollow:output_type -> google.protobuf.Empty
	256, // 238: bff.v1.Bff.ChangeUserPassword:output_type -> google.protobuf.Empty
	256, // 239: bff.v1.Bff.UnbindUserPhone:output_type -> google.protobuf.Empty
	256, // 240: bff.v1.Bff.UnbindUserEmail:output_type -> google.protobuf.Empty
	44,  // 241: bff.v1.Bff.GetLeaderBoard:output_type -> bff.v1.GetLeaderBoardReply
	57,  // 242: bff.v1.Bff.GetCollectArticleList:output_type -> bff.v1.GetArticleListReply
	47,  // 243: bff.v1.Bff.GetCollectArticleCount:output_type -> bff.v1.GetCollectArticleCountReply
	98,  // 244: bff.v1.Bff.GetCollectTalkList:output_type -> bff.v1.GetTalkListReply
	50,  // 245: bff.v1.Bff.GetCollectTalkCount:output_type -> bff.v1.GetCollectTalkCountReply
	139, // 246: bff.v1.Bff.GetCollectColumnList:output_type -> bff.v1.GetColumnListReply
	53,  // 247: bff.v1.Bff.GetCollectColumnCount:output_type -> bff.v1.GetCollectColumnCountReply
	55,  // 248: bff.v1.Bff.GetCollections:output_type -> bff.v1.GetCollectionsReply
	76,  // 249: bff.v1.Bff.GetCollectionsList:output_type -> bff.v1.GetCollectionsListReply
	76,  // 250: bff.v1.Bff.GetCollectionsListAll:output_type -> bff.v1.GetCollectionsListReply
	78,  // 251: bff.v1.Bff.GetCollectionsCount:output_type -> bff.v1.GetCollectionsCountReply
	76,  // 252: bff.v1.Bff.GetCollectionsListByVisitor:output_type -> bff.v1.GetCollectionsListReply
	78,  // 253: bff.v1.Bff.GetCollectionsVisitorCount:output_type -> bff.v1.GetCollectionsCountReply
	79,  // 254: bff.v1.Bff.GetLastCollectionsDraft:output_type -> bff.v1.GetLastCollectionsDraftReply
	83,  // 255: bff.v1.Bff.CreateCollectionsDraft:output_type -> bff.v1.CreateCollectionsDraftReply
	256, // 256: bff.v1.Bff.SendCollections:output_type -> google.protobuf.Empty
	256, // 257: bff.v1.Bff.SendCollectionsEdit:output_type -> google.protobuf.Empty
	256, // 258: bff.v1.Bff.DeleteCollections:output_type -> google.protobuf.Empty
	57,  // 259: bff.v1.Bff.GetArticleList:output_type -> bff.v1.GetArticleListReply
	61,  // 260: bff.v1.Bff.GetArticleListHot:output_type -> bff.v1.GetArticleListHotReply
	57,  // 261: bff.v1.Bff.GetColumnArticleList:output_type -> bff.v1.GetArticleListReply
	58,  // 262: bff.v1.Bff.GetArticleCount:output_type -> bff.v1.GetArticleCountReply
	58,  // 263: bff.v1.Bff.GetArticleCountVisitor:output_type -> bff.v1.GetArticleCountReply
	57,  // 264: bff.v1.Bff.GetUserArticleList:output_type -> bff.v1.GetArticleListReply
	57,  // 265: bff.v1.Bff.GetUserArticleListSimple:output_type -> bff.v1.GetArticleListReply
	57,  // 266: bff.v1.Bff.GetUserArticleListVisitor:output_type -> bff.v1.GetArticleListReply
	57,  // 267: bff.v1.Bff.GetUserArticleListAll:output_type -> bff.v1.GetArticleListReply
	66,  // 268: bff.v1.Bff.GetArticleStatistic:output_type -> bff.v1.GetArticleStatisticReply
	67,  // 269: bff.v1.Bff.GetUserArticleAgree:output_type -> bff.v1.GetUserArticleAgreeReply
	68,  // 270: bff.v1.Bff.GetUserArticleCollect:output_type -> bff.v1.GetUserArticleCollectReply
	70,  // 271: bff.v1.Bff.GetArticleListStatistic:output_type -> bff.v1.GetArticleListStatisticReply
	71,  // 272: bff.v1.Bff.GetLastArticleDraft:output_type -> bff.v1.GetLastArticleDraftReply
	73,  // 273: bff.v1.Bff.GetArticleSearch:output_type -> bff.v1.GetArticleSearchReply
	74,  // 274: bff.v1.Bff.CreateArticleDraft:output_type -> bff.v1.CreateArticleDraftReply
	256, // 275: bff.v1.Bff.ArticleDraftMark:output_type -> google.protobuf.Empty
	86,  // 276: bff.v1.Bff.GetArticleDraftList:output_type -> bff.v1.GetArticleDraftListReply
	256, // 277: bff.v1.Bff.SendArticle:output_type -> google.protobuf.Empty
	256, // 278: bff.v1.Bff.SendArticleEdit:output_type -> google.protobuf.Empty
	256, // 279: bff.v1.Bff.DeleteArticle:output_type -> google.protobuf.Empty
	256, // 280: bff.v1.Bff.SetArticleAgree:output_type -> google.protobuf.Empty
	256, // 281: bff.v1.Bff.SetArticleView:output_type -> google.protobuf.Empty
	256, // 282: bff.v1.Bff.SetArticleCollect:output_type -> google.protobuf.Empty
	256, // 283: bff.v1.Bff.CancelArticleAgree:output_type -> google.protobuf.Empty
	256, // 284: bff.v1.Bff.CancelArticleCollect:output_type -> google.protobuf.Empty
	96,  // 285: bff.v1.Bff.ArticleStatisticJudge:output_type -> bff.v1.ArticleStatisticJudgeReply
	98,  // 286: bff.v1.Bff.GetTalkList:output_type -> bff.v1.GetTalkListReply
	102, // 287: bff.v1.Bff.GetTalkListHot:output_type -> bff.v1.GetTalkListHotReply
	104, // 288: bff.v1.Bff.GetTalkListStatistic:output_type -> bff.v1.GetTalkListStatisticReply
	98,  // 289: bff.v1.Bff.GetUserTalkList:output_type -> bff.v1.GetTalkListReply
	98,  // 290: bff.v1.Bff.GetUserTalkListSimple:output_type -> bff.v1.GetTalkListReply
	98,  // 291: bff.v1.Bff.GetUserTalkListVisitor:output_type -> bff.v1.GetTalkListReply
	99,  // 292: bff.v1.Bff.GetTalkCount:output_type -> bff.v1.GetTalkCountReply
	99,  // 293: bff.v1.Bff.GetTalkCountVisitor:output_type -> bff.v1.GetTalkCountReply
	109, // 294: bff.v1.Bff.GetTalkStatistic:output_type -> bff.v1.GetTalkStatisticReply
	110, // 295: bff.v1.Bff.GetLastTalkDraft:output_type -> bff.v1.GetLastTalkDraftReply
	112, // 296: bff.v1.Bff.GetTalkSearch:output_type -> bff.v1.GetTalkSearchReply
	113, // 297: bff.v1.Bff.GetUserTalkAgree:output_type -> bff.v1.GetUserTalkAgreeReply
	114, // 298: bff.v1.Bff.GetUserTalkCollect:output_type -> bff.v1.GetUserTalkCollectReply
	115, // 299: bff.v1.Bff.CreateTalkDraft:output_type -> bff.v1.CreateTalkDraftReply
	256, // 300: bff.v1.Bff.SendTalk:output_type -> google.protobuf.Empty
	256, // 301: bff.v1.Bff.SendTalkEdit:output_type -> google.protobuf.Empty
	256, // 302: bff.v1.Bff.DeleteTalk:output_type -> google.protobuf.Empty
	256, // 303: bff.v1.Bff.SetTalkView:output_type -> google.protobuf.Empty
	121, // 304: bff.v1.Bff.TalkStatisticJudge:output_type -> bff.v1.TalkStatisticJudgeReply
	256, // 305: bff.v1.Bff.SetTalkAgree:output_type -> google.protobuf.Empty
	256, // 306: bff.v1.Bff.SetTalkCollect:output_type -> google.protobuf.Empty
	256, // 307: bff.v1.Bff.CancelTalkAgree:output_type -> google.protobuf.Empty
	256, // 308: bff.v1.Bff.CancelTalkCollect:output_type -> google.protobuf.Empty
	126, // 309: bff.v1.Bff.GetLastColumnDraft:output_type -> bff.v1.GetLastColumnDraftReply
	127, // 310: bff.v1.Bff.CreateColumnDraft:output_type -> bff.v1.CreateColumnDraftReply
	256, // 311: bff.v1.Bff.SubscribeColumn:output_type -> google.protobuf.Empty
	256, // 312: bff.v1.Bff.CancelSubscribeColumn:output_type -> google.protobuf.Empty
	131, // 313: bff.v1.Bff.SubscribeJudge:output_type -> bff.v1.SubscribeJudgeReply
	256, // 314: bff.v1.Bff.SendColumn:output_type -> google.protobuf.Empty
	134, // 315: bff.v1.Bff.GetSubscribeList:output_type -> bff.v1.GetSubscribeListReply
	136, // 316: bff.v1.Bff.GetSubscribeListCount:output_type -> bff.v1.GetSubscribeListCountReply
	23,  // 317: bff.v1.Bff.GetColumnSubscribes:output_type -> bff.v1.GetColumnSubscribesReply
	139, // 318: bff.v1.Bff.GetColumnList:output_type -> bff.v1.GetColumnListReply
	141, // 319: bff.v1.Bff.GetColumnListHot:output_type -> bff.v1.GetColumnListHotReply
	143, // 320: bff.v1.Bff.GetColumnListStatistic:output_type -> bff.v1.GetColumnListStatisticReply
	139, // 321: bff.v1.Bff.GetUserColumnList:output_type -> bff.v1.GetColumnListReply
	139, // 322: bff.v1.Bff.GetUserColumnListSimple:output_type -> bff.v1.GetColumnListReply
	139, // 323: bff.v1.Bff.GetUserColumnListVisitor:output_type -> bff.v1.GetColumnListReply
	149, // 324: bff.v1.Bff.GetColumnCount:output_type -> bff.v1.GetColumnCountReply
	149, // 325: bff.v1.Bff.GetColumnCountVisitor:output_type -> bff.v1.GetColumnCountReply
	151, // 326: bff.v1.Bff.GetColumnSearch:output_type -> bff.v1.GetColumnSearchReply
	256, // 327: bff.v1.Bff.SendColumnEdit:output_type -> google.protobuf.Empty
	256, // 328: bff.v1.Bff.DeleteColumn:output_type -> google.protobuf.Empty
	155, // 329: bff.v1.Bff.GetColumnStatistic:output_type -> bff.v1.GetColumnStatisticReply
	156, // 330: bff.v1.Bff.GetUserColumnAgree:output_type -> bff.v1.GetUserColumnAgreeReply
	157, // 331: bff.v1.Bff.GetUserColumnCollect:output_type -> bff.v1.GetUserColumnCollectReply
	158, // 332: bff.v1.Bff.GetUserSubscribeColumn:output_type -> bff.v1.GetUserSubscribeColumnReply
	160, // 333: bff.v1.Bff.ColumnStatisticJudge:output_type -> bff.v1.ColumnStatisticJudgeReply
	256, // 334: bff.v1.Bff.SetColumnAgree:output_type -> google.protobuf.Empty
	256, // 335: bff.v1.Bff.CancelColumnAgree:output_type -> google.protobuf.Empty
	256, // 336: bff.v1.Bff.SetColumnCollect:output_type -> google.protobuf.Empty
	256, // 337: bff.v1.Bff.CancelColumnCollect:output_type -> google.protobuf.Empty
	256, // 338: bff.v1.Bff.SetColumnView:output_type -> google.protobuf.Empty
	256, // 339: bff.v1.Bff.AddColumnIncludes:output_type -> google.protobuf.Empty
	256, // 340: bff.v1.Bff.DeleteColumnIncludes:output_type -> google.protobuf.Empty
	169, // 341: bff.v1.Bff.GetNews:output_type -> bff.v1.GetNewsReply
	171, // 342: bff.v1.Bff.GetAchievementList:output_type -> bff.v1.GetAchievementListReply
	173, // 343: bff.v1.Bff.GetUserAchievement:output_type -> bff.v1.GetUserAchievementReply
	175, // 344: bff.v1.Bff.GetUserMedal:output_type -> bff.v1.GetUserMedalReply
	256, // 345: bff.v1.Bff.AccessUserMedal:output_type -> google.protobuf.Empty
	177, // 346: bff.v1.Bff.GetUserMedalProgress:output_type -> bff.v1.GetUserMedalProgressReply
	256, // 347: bff.v1.Bff.SetUserMedal:output_type -> google.protobuf.Empty
	256, // 348: bff.v1.Bff.CancelUserMedalSet:output_type -> google.protobuf.Empty
	181, // 349: bff.v1.Bff.GetLastCommentDraft:output_type -> bff.v1.GetLastCommentDraftReply
	182, // 350: bff.v1.Bff.GetUserCommentAgree:output_type -> bff.v1.GetUserCommentAgreeReply
	183, // 351: bff.v1.Bff.GetCommentUser:output_type -> bff.v1.GetCommentUserReply
	189, // 352: bff.v1.Bff.GetCommentList:output_type -> bff.v1.GetCommentListReply
	207, // 353: bff.v1.Bff.GetSubCommentList:output_type -> bff.v1.GetSubCommentListReply
	189, // 354: bff.v1.Bff.GetCommentListHot:output_type -> bff.v1.GetCommentListReply
	191, // 355: bff.v1.Bff.GetUserCommentArticleReplyList:output_type -> bff.v1.GetUserCommentArticleReplyListReply
	193, // 356: bff.v1.Bff.GetUserSubCommentArticleReplyList:output_type -> bff.v1.GetUserSubCommentArticleReplyListReply
	195, // 357: bff.v1.Bff.GetUserCommentTalkReplyList:output_type -> bff.v1.GetUserCommentTalkReplyListReply
	197, // 358: bff.v1.Bff.GetUserSubCommentTalkReplyList:output_type -> bff.v1.GetUserSubCommentTalkReplyListReply
	199, // 359: bff.v1.Bff.GetUserCommentArticleRepliedList:output_type -> bff.v1.GetUserCommentArticleRepliedListReply
	201, // 360: bff.v1.Bff.GetUserSubCommentArticleRepliedList:output_type -> bff.v1.GetUserSubCommentArticleRepliedListReply
	203, // 361: bff.v1.Bff.GetUserCommentTalkRepliedList:output_type -> bff.v1.GetUserCommentTalkRepliedListReply
	205, // 362: bff.v1.Bff.GetUserSubCommentTalkRepliedList:output_type -> bff.v1.GetUserSubCommentTalkRepliedListReply
	180, // 363: bff.v1.Bff.CreateCommentDraft:output_type -> bff.v1.CreateCommentDraftReply
	256, // 364: bff.v1.Bff.SendComment:output_type -> google.protobuf.Empty
	256, // 365: bff.v1.Bff.SendSubComment:output_type -> google.protobuf.Empty
	256, // 366: bff.v1.Bff.RemoveComment:output_type -> google.protobuf.Empty
	256, // 367: bff.v1.Bff.RemoveSubComment:output_type -> google.protobuf.Empty
	256, // 368: bff.v1.Bff.SetCommentAgree:output_type -> google.protobuf.Empty
	256, // 369: bff.v1.Bff.SetSubCommentAgree:output_type -> google.protobuf.Empty
	256, // 370: bff.v1.Bff.CancelCommentAgree:output_type -> google.protobuf.Empty
	256, // 371: bff.v1.Bff.CancelSubCommentAgree:output_type -> google.protobuf.Empty
	208, // [208:372] is the sub-list for method output_type
	44,  // [44:208] is the sub-list for method input_type
	44,  // [44:44] is the sub-list for extension type_name
	44,  // [44:44] is the sub-list for extension extendee
	0,   // [0:44] is the sub-list for field type_name
}

func init() { file_bff_interface_v1_bff_proto_init() }
func file_bff_interface_v1_bff_proto_init() {
	if File_bff_interface_v1_bff_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bff_interface_v1_bff_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginByPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginByCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginByWeChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginByGithubReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginPasswordResetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPhoneCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmailCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCosSessionKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvatarReviewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvatarReviewReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoverReviewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoverReviewReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoVisitorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserFollowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserFollowReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnSubscribesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnSubscribesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowListCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowListCountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowedListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowedListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowedListCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowedListCountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSearchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProfileUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserPhoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserFollowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelUserFollowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeUserPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindUserPhoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindUserEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaderBoardReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectArticleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectArticleCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectArticleCountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectTalkListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectTalkCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectTalkCountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectColumnListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectColumnCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectColumnCountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectionsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleCountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleCountVisitorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListHotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListHotReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserArticleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserArticleListSimpleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserArticleListVisitorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleStatisticReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleStatisticReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserArticleAgreeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserArticleCollectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListStatisticReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListStatisticReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastArticleDraftReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleSearchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArticleDraftReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectionsListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectionsListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectionsVisitorCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectionsCountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastCollectionsDraftReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectionsListByVisitorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCollectionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCollectionsEditReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCollectionsDraftReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCollectionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleDraftMarkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleDraftListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendArticleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendArticleEditReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteArticleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetArticleAgreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetArticleViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetArticleCollectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelArticleAgreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelArticleCollectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleStatisticJudgeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleStatisticJudgeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTalkListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTalkListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTalkCountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTalkCountVisitorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTalkListHotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTalkListHotReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTalkListStatisticReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTalkListStatisticReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTalkListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTalkListSimpleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTalkListVisitorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTalkStatisticReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTalkStatisticReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastTalkDraftReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTalkSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTalkSearchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTalkAgreeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTalkCollectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTalkDraftReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTalkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTalkEditReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTalkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTalkViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalkStatisticJudgeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalkStatisticJudgeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTalkAgreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTalkCollectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelTalkAgreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelTalkCollectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastColumnDraftReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateColumnDraftReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeColumnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelSubscribeColumnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeJudgeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeJudgeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendColumnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscribeListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscribeListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscribeListCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscribeListCountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserFollowsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnListHotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnListHotReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnListStatisticReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnListStatisticReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserColumnListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserColumnListSimpleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserColumnListVisitorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnArticleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnCountVisitorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnCountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnSearchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendColumnEditReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteColumnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnStatisticReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnStatisticReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserColumnAgreeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserColumnCollectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSubscribeColumnReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnStatisticJudgeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnStatisticJudgeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetColumnAgreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelColumnAgreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetColumnCollectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelColumnCollectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetColumnViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddColumnIncludesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteColumnIncludesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAchievementListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAchievementListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAchievementReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAchievementReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserMedalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserMedalReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessUserMedalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserMedalProgressReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserMedalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelUserMedalSetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommentDraftReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastCommentDraftReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCommentAgreeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendSubCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSubCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCommentArticleReplyListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCommentArticleReplyListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSubCommentArticleReplyListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSubCommentArticleReplyListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCommentTalkReplyListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCommentTalkReplyListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSubCommentTalkReplyListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSubCommentTalkReplyListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCommentArticleRepliedListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCommentArticleRepliedListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSubCommentArticleRepliedListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSubCommentArticleRepliedListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCommentTalkRepliedListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCommentTalkRepliedListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSubCommentTalkRepliedListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSubCommentTalkRepliedListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubCommentListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubCommentListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCommentAgreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSubCommentAgreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelCommentAgreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelSubCommentAgreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvatarReviewReply_Review); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoverReviewReply_Review); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileListReply_Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnSubscribesReply_Subscribes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowListReply_Follow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowedListReply_Follow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSearchReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaderBoardReply_Board); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListReply_Article); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListHotReply_Article); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListStatisticReply_Count); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleSearchReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectionsListReply_Collections); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleDraftListReply_Draft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTalkListReply_Talk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTalkListHotReply_Talk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTalkListStatisticReply_Count); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTalkSearchReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscribeListReply_Subscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnListReply_Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnListHotReply_Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnListStatisticReply_Count); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnSearchReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewsReply_News); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAchievementListReply_Achievement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentListReply_Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCommentArticleReplyListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSubCommentArticleReplyListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCommentTalkReplyListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSubCommentTalkReplyListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCommentArticleRepliedListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSubCommentArticleRepliedListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCommentTalkRepliedListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSubCommentTalkRepliedListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_interface_v1_bff_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubCommentListReply_Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bff_interface_v1_bff_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   256,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bff_interface_v1_bff_proto_goTypes,
		DependencyIndexes: file_bff_interface_v1_bff_proto_depIdxs,
		MessageInfos:      file_bff_interface_v1_bff_proto_msgTypes,
	}.Build()
	File_bff_interface_v1_bff_proto = out.File
	file_bff_interface_v1_bff_proto_rawDesc = nil
	file_bff_interface_v1_bff_proto_goTypes = nil
	file_bff_interface_v1_bff_proto_depIdxs = nil
}
