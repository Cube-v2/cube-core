syntax = "proto3";

package creation.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";

option go_package = "api/creation/service/v1;v1";

service Creation {

  rpc GetLeaderBoard(google.protobuf.Empty) returns (GetLeaderBoardReply){}

  rpc GetCollectArticle(GetCollectArticleReq) returns (GetArticleListReply){}

  rpc GetCollectArticleCount(GetCollectArticleCountReq) returns (GetCollectArticleCountReply){}

  rpc GetCollectTalk(GetCollectTalkReq) returns (GetTalkListReply){}

  rpc GetCollectTalkCount(GetCollectTalkCountReq) returns (GetCollectTalkCountReply){}

  rpc GetCollectColumn(GetCollectColumnReq) returns (GetColumnListReply){}

  rpc GetCollectColumnCount(GetCollectColumnCountReq) returns (GetCollectColumnCountReply){}

  rpc GetCollection(GetCollectionReq) returns (GetCollectionReply){}

  rpc GetCollectionListInfo(GetCollectionListInfoReq) returns (GetCollectionsReply){}

  rpc GetCollections(GetCollectionsReq) returns (GetCollectionsReply){}

  rpc GetCollectionsCount(GetCollectionsCountReq) returns (GetCollectionsCountReply){}

  rpc GetCollectionsByVisitor(GetCollectionsReq) returns (GetCollectionsReply){}

  rpc GetCollectionsVisitorCount(GetCollectionsCountReq) returns (GetCollectionsCountReply){}

  rpc GetCreationUser(GetCreationUserReq) returns (GetCreationUserReply){}

  rpc GetCreationUserVisitor(GetCreationUserReq) returns (GetCreationUserReply){}

  rpc CreateCollections(CreateCollectionsReq) returns (google.protobuf.Empty){}

  rpc EditCollections(EditCollectionsReq) returns (google.protobuf.Empty){}

  rpc DeleteCollections(DeleteCollectionsReq) returns (google.protobuf.Empty){}

  rpc GetArticleList(GetArticleListReq) returns (GetArticleListReply){}

  rpc GetArticleListHot(GetArticleListHotReq) returns (GetArticleListHotReply){}

  rpc GetColumnArticleList(GetColumnArticleListReq) returns (GetArticleListReply){}

  rpc GetArticleCount(GetArticleCountReq) returns (GetArticleCountReply){}

  rpc GetArticleCountVisitor(GetArticleCountVisitorReq) returns (GetArticleCountReply){}

  rpc GetUserArticleList(GetUserArticleListReq) returns (GetArticleListReply){}

  rpc GetUserArticleListVisitor(GetUserArticleListVisitorReq) returns (GetArticleListReply){}

  rpc GetArticleStatistic(GetArticleStatisticReq)returns (GetArticleStatisticReply){}

  rpc GetArticleListStatistic(GetArticleListStatisticReq)returns (GetArticleListStatisticReply){}

  rpc GetLastArticleDraft(GetLastArticleDraftReq) returns (GetLastArticleDraftReply){}

  rpc GetArticleSearch(GetArticleSearchReq)returns (GetArticleSearchReply){}

  rpc CreateArticle(CreateArticleReq) returns (google.protobuf.Empty){}

  rpc EditArticle(EditArticleReq) returns (google.protobuf.Empty){}

  rpc CreateArticleDbCacheAndSearch(CreateArticleDbCacheAndSearchReq) returns (google.protobuf.Empty){}

  rpc EditArticleCosAndSearch(EditArticleCosAndSearchReq) returns (google.protobuf.Empty){}

  rpc DeleteArticleCacheAndSearch(DeleteArticleCacheAndSearchReq) returns (google.protobuf.Empty){}

  rpc SetArticleViewDbAndCache(SetArticleViewDbAndCacheReq)returns (google.protobuf.Empty){}

  rpc SetArticleAgreeDbAndCache(SetArticleAgreeDbAndCacheReq)returns (google.protobuf.Empty){}

  rpc CreateArticleDraft(CreateArticleDraftReq) returns (CreateArticleDraftReply){}

  rpc ArticleDraftMark(ArticleDraftMarkReq) returns (google.protobuf.Empty){}

  rpc GetArticleDraftList(GetArticleDraftListReq) returns (GetArticleDraftListReply){}

  rpc SendArticle(SendArticleReq) returns (google.protobuf.Empty){}

  rpc SendArticleEdit(SendArticleEditReq) returns (google.protobuf.Empty){}

  rpc DeleteArticle(DeleteArticleReq) returns (google.protobuf.Empty){}

  rpc SetArticleAgree(SetArticleAgreeReq) returns (google.protobuf.Empty){}

  rpc SetArticleView(SetArticleViewReq) returns (google.protobuf.Empty){}

  rpc SetArticleCollect(SetArticleCollectReq) returns (google.protobuf.Empty){}

  rpc CancelArticleAgree(CancelArticleAgreeReq) returns (google.protobuf.Empty){}

  rpc CancelArticleCollect(CancelArticleCollectReq) returns (google.protobuf.Empty){}

  rpc ArticleStatisticJudge(ArticleStatisticJudgeReq) returns (ArticleStatisticJudgeReply){}

  rpc GetTalkList(GetTalkListReq) returns (GetTalkListReply){}

  rpc GetTalkListHot(GetTalkListHotReq) returns (GetTalkListHotReply){}

  rpc GetUserTalkList(GetUserTalkListReq) returns (GetTalkListReply){}

  rpc GetUserTalkListVisitor(GetUserTalkListVisitorReq) returns (GetTalkListReply){}

  rpc GetTalkCount(GetTalkCountReq) returns (GetTalkCountReply){}

  rpc GetTalkCountVisitor(GetTalkCountVisitorReq) returns (GetTalkCountReply){}

  rpc GetTalkListStatistic(GetTalkListStatisticReq)returns (GetTalkListStatisticReply){}

  rpc GetTalkStatistic(GetTalkStatisticReq)returns (GetTalkStatisticReply){}

  rpc GetLastTalkDraft(GetLastTalkDraftReq) returns (GetLastTalkDraftReply){}

  rpc GetTalkSearch(GetTalkSearchReq)returns (GetTalkSearchReply){}

  rpc CreateTalkDraft(CreateTalkDraftReq) returns (CreateTalkDraftReply){}

  rpc SendTalk(SendTalkReq) returns (google.protobuf.Empty){}

  rpc SendTalkEdit(SendTalkEditReq) returns (google.protobuf.Empty){}

  rpc CreateTalk(CreateTalkReq) returns (google.protobuf.Empty){}

  rpc EditTalk(EditTalkReq) returns (google.protobuf.Empty){}

  rpc DeleteTalk(DeleteTalkReq) returns (google.protobuf.Empty){}

  rpc CreateTalkDbCacheAndSearch(CreateTalkDbCacheAndSearchReq) returns (google.protobuf.Empty){}

  rpc EditTalkCosAndSearch(EditTalkCosAndSearchReq) returns (google.protobuf.Empty){}

  rpc DeleteTalkCacheAndSearch(DeleteTalkCacheAndSearchReq) returns (google.protobuf.Empty){}

  rpc SetTalkView(SetTalkViewReq) returns (google.protobuf.Empty){}

  rpc TalkStatisticJudge(TalkStatisticJudgeReq) returns (TalkStatisticJudgeReply){}

  rpc SetTalkAgree(SetTalkAgreeReq) returns (google.protobuf.Empty){}

  rpc SetTalkCollect(SetTalkCollectReq) returns (google.protobuf.Empty){}

  rpc CancelTalkAgree(CancelTalkAgreeReq) returns (google.protobuf.Empty){}

  rpc CancelTalkCollect(CancelTalkCollectReq) returns (google.protobuf.Empty){}

  rpc GetLastColumnDraft(GetLastColumnDraftReq) returns (GetLastColumnDraftReply){}

  rpc GetColumnSearch(GetColumnSearchReq)returns (GetColumnSearchReply){}

  rpc CreateColumnDraft(CreateColumnDraftReq) returns (CreateColumnDraftReply){}

  rpc SendColumn(SendColumnReq) returns (google.protobuf.Empty){}

  rpc CreateColumn(CreateColumnReq) returns (google.protobuf.Empty){}

  rpc CreateColumnDbCacheAndSearch(CreateColumnDbCacheAndSearchReq) returns (google.protobuf.Empty){}

  rpc SubscribeColumn(SubscribeColumnReq) returns (google.protobuf.Empty){}

  rpc CancelSubscribeColumn(CancelSubscribeColumnReq) returns (google.protobuf.Empty){}

  rpc SubscribeJudge(SubscribeJudgeReq) returns (SubscribeJudgeReply){}

  rpc EditColumnCosAndSearch(EditColumnCosAndSearchReq) returns (google.protobuf.Empty){}

  rpc GetColumnList(GetColumnListReq) returns (GetColumnListReply){}

  rpc GetColumnListHot(GetColumnListHotReq) returns (GetColumnListHotReply){}

  rpc GetColumnListStatistic(GetColumnListStatisticReq)returns (GetColumnListStatisticReply){}

  rpc GetColumnStatistic(GetColumnStatisticReq)returns (GetColumnStatisticReply){}

  rpc GetUserColumnList(GetUserColumnListReq) returns (GetColumnListReply){}

  rpc GetUserColumnListVisitor(GetUserColumnListVisitorReq) returns (GetColumnListReply){}

  rpc GetColumnCount(GetColumnCountReq) returns (GetColumnCountReply){}

  rpc GetColumnCountVisitor(GetColumnCountVisitorReq) returns (GetColumnCountReply){}

  rpc GetSubscribeList(GetSubscribeListReq) returns (GetSubscribeListReply){}

  rpc GetSubscribeListCount(GetSubscribeListCountReq) returns (GetSubscribeListCountReply){}

  rpc GetColumnSubscribes(GetColumnSubscribesReq) returns (GetColumnSubscribesReply){}

  rpc SendColumnEdit(SendColumnEditReq) returns (google.protobuf.Empty){}

  rpc EditColumn(EditColumnReq) returns (google.protobuf.Empty){}

  rpc DeleteColumn(DeleteColumnReq) returns (google.protobuf.Empty){}

  rpc DeleteColumnCacheAndSearch(DeleteColumnCacheAndSearchReq) returns (google.protobuf.Empty){}

  rpc ColumnStatisticJudge(ColumnStatisticJudgeReq) returns (ColumnStatisticJudgeReply){}

  rpc SetColumnAgree(SetColumnAgreeReq) returns (google.protobuf.Empty){}

  rpc CancelColumnAgree(CancelColumnAgreeReq) returns (google.protobuf.Empty){}

  rpc SetColumnCollect(SetColumnCollectReq) returns (google.protobuf.Empty){}

  rpc CancelColumnCollect(CancelColumnCollectReq) returns (google.protobuf.Empty){}

  rpc SetColumnView(SetColumnViewReq) returns (google.protobuf.Empty){}

  rpc AddColumnIncludes(AddColumnIncludesReq) returns (google.protobuf.Empty){}

  rpc DeleteColumnIncludes(DeleteColumnIncludesReq) returns (google.protobuf.Empty){}

  rpc GetNews(GetNewsReq) returns (GetNewsReply){}

  rpc AddCreationComment(AddCreationCommentReq) returns (google.protobuf.Empty){}
  rpc ReduceCreationComment(ReduceCreationCommentReq) returns (google.protobuf.Empty){}
}

message GetLeaderBoardReply{
  message Board{
    int32 id = 1;
    string uuid = 2;
    string mode = 3;
  }
  repeated Board board = 1;
}

message GetCollectArticleReq{
  int32 id = 1;
  int32 page = 2;
}

message GetCollectArticleCountReq{
  int32 id = 1;
}

message GetCollectArticleCountReply{
  int32 count = 1;
}

message GetCollectTalkReq{
  int32 id = 1;
  int32 page = 2;
}

message GetCollectTalkCountReq{
  int32 id = 1;
}

message GetCollectTalkCountReply{
  int32 count = 1;
}

message GetCollectColumnReq{
  int32 id = 1;
  int32 page = 2;
}

message GetCollectColumnCountReq{
  int32 id = 1;
}

message GetCollectColumnCountReply{
  int32 count = 1;
}

message GetCollectionReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetCollectionReply{
  string uuid = 1;
  string name = 2;
  string introduce = 3;
  int32 auth = 4;
}

message GetCollectionListInfoReq{
  repeated int32 ids = 1;
}

message GetCollectionsReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetCollectionsReply{
  message Collections {
    int32 id = 1;
    string name = 2;
    string introduce = 3;
  }
  repeated Collections collections = 1;
}

message GetCollectionsCountReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetCollectionsCountReply{
  int32 count = 1;
}

message GetCreationUserReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetCreationUserReply{
  int32 article = 1;
  int32 column = 2;
  int32 talk = 3;
  int32 collections = 4;
  int32 collect = 5;
  int32 subscribe = 6;
}

message CreateCollectionsReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string name = 2 [(validate.rules).string = {min_len:1, max_len: 50}];
  string introduce = 3 [(validate.rules).string = {min_len:1, max_len: 100}];
  int32 auth = 4;
}

message EditCollectionsReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string name = 3 [(validate.rules).string = {min_len:1, max_len: 50}];
  string introduce = 4 [(validate.rules).string = {min_len:1, max_len: 100}];
  int32 auth = 5;
}

message DeleteCollectionsReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetArticleListReq{
  int32 page = 1;
}

message GetArticleListReply{
  message Article{
    int32 id = 1;
    string uuid = 2;
  }
  repeated Article article = 1;
}

message GetArticleListHotReq{
  int32 page = 1;
}

message GetArticleListHotReply{
  message Article{
    int32 id = 1;
    string uuid = 2;
  }
  repeated Article article = 1;
}

message GetArticleCountReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetArticleCountVisitorReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetArticleCountReply{
  int32 count = 1;
}

message GetUserArticleListReq{
  int32 page = 1;
  string uuid = 2;
}

message GetUserArticleListVisitorReq{
  int32 page = 1;
  string uuid = 2;
}

message GetArticleStatisticReq{
  int32 id = 1;
}

message GetArticleStatisticReply{
  string uuid = 1;
  int32 agree = 2;
  int32 collect = 3;
  int32 view = 4;
  int32  comment = 5;
}

message GetArticleListStatisticReq{
  repeated int32 ids = 1;
}

message GetArticleListStatisticReply{
  message Count{
    int32 id = 1;
    int32 agree = 2;
    int32 collect = 3;
    int32 view = 4;
    int32 comment = 5;
  }
  repeated Count count = 1;
}

message GetLastArticleDraftReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetLastArticleDraftReply{
  int32 id = 1;
  int32 status = 2;
}

message GetArticleSearchReq{
  int32 page = 1;
  string search = 2 [(validate.rules).string = {min_len:0, max_len: 200}];
  string time = 3 [(validate.rules).string = {min_len:0, max_len: 10}];
}

message GetArticleSearchReply{
  message List{
    int32 id = 1;
    string title = 2;
    string tags = 3;
    string text = 4;
    string cover = 5;
    string update = 6;
    string uuid = 7;
  }
  repeated List list = 1;
  int32 total = 2;
}

message CreateArticleReq{
  int32 id = 1;
  int32 auth = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message EditArticleReq{
  int32 id = 1;
  int32 auth = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message CreateArticleDbCacheAndSearchReq{
  int32 id = 1;
  int32 auth = 2;
  string uuid = 3;
}

message EditArticleCosAndSearchReq{
  int32 id = 1;
  int32 auth = 2;
  string uuid = 3;
}

message DeleteArticleCacheAndSearchReq{
  int32 id = 1;
  string uuid = 2;
}

message SetArticleViewDbAndCacheReq{
  int32 id = 1;
  string uuid = 2;
}

message SetArticleAgreeDbAndCacheReq{
  int32 id = 1;
  string uuid = 2;
  string userUuid = 3;
}

message CreateArticleDraftReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message CreateArticleDraftReply{
  int32 id = 1;
}

message ArticleDraftMarkReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetArticleDraftListReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetArticleDraftListReply{
  message Draft{
    int32 id = 1;
  }
  repeated Draft draft = 1;
}

message SendArticleReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string ip = 3 [(validate.rules).string.ip = true];
}

message SendArticleEditReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string ip = 3 [(validate.rules).string.ip = true];
}

message DeleteArticleReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message SetArticleAgreeReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string user_uuid = 3 [(validate.rules).string.uuid = true];
}

message SetArticleViewReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message SetArticleCollectReq{
  int32 id = 1;
  int32 collections_id = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
  string user_uuid = 4 [(validate.rules).string.uuid = true];
}

message CancelArticleAgreeReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string user_uuid = 3 [(validate.rules).string.uuid = true];
}

message CancelArticleCollectReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string user_uuid = 3 [(validate.rules).string.uuid = true];
}

message ArticleStatisticJudgeReq{
  int32 id = 1;
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message ArticleStatisticJudgeReply{
  bool agree = 1;
  bool collect = 2;
}

message GetTalkListReq{
  int32 page = 1;
}

message GetTalkListReply{
  message Talk{
    int32 id = 1;
    string uuid = 2;
  }
  repeated Talk talk = 1;
}

message GetTalkCountReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetTalkCountVisitorReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetTalkCountReply{
  int32 count = 1;
}

message GetTalkListHotReq{
  int32 page = 1;
}

message GetTalkListHotReply{
  message Talk{
    int32 id = 1;
    string uuid = 2;
  }
  repeated Talk talk = 1;
}

message GetUserTalkListReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetUserTalkListVisitorReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetTalkListStatisticReq{
  repeated int32 ids = 1;
}

message GetTalkListStatisticReply{
  message Count{
    int32 id = 1;
    int32 agree = 2;
    int32 collect = 3;
    int32 view = 4;
    int32 comment = 5;
  }
  repeated Count count = 1;
}

message GetTalkStatisticReq{
  int32 id = 1;
}

message GetTalkStatisticReply{
  string uuid = 1;
  int32 agree = 2;
  int32 collect = 3;
  int32 view = 4;
  int32  comment = 5;
}

message GetLastTalkDraftReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetLastTalkDraftReply{
  int32 id = 1;
  int32 status = 2;
}

message GetTalkSearchReq{
  int32 page = 1;
  string search = 2;
  string time = 3;
}

message GetTalkSearchReply{
  message List{
    int32 id = 1;
    string title = 2;
    string tags = 3;
    string text = 4;
    string cover = 5;
    string update = 6;
    string uuid = 7;
  }
  repeated List list = 1;
  int32 total = 2;
}

message CreateTalkDraftReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message CreateTalkDraftReply{
  int32 id = 1;
}

message SendTalkReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string ip = 3 [(validate.rules).string.ip = true];
}

message SendTalkEditReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string ip = 3 [(validate.rules).string.ip = true];
}

message CreateTalkReq{
  int32 id = 1;
  int32 auth = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message EditTalkReq{
  int32 id = 1;
  int32 auth = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message DeleteTalkReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message CreateTalkDbCacheAndSearchReq{
  int32 id = 1;
  int32 auth = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message EditTalkCosAndSearchReq{
  int32 id = 1;
  int32 auth = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message DeleteTalkCacheAndSearchReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message SetTalkViewReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message TalkStatisticJudgeReq{
  int32 id = 1;
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message TalkStatisticJudgeReply{
  bool agree = 1;
  bool collect = 2;
}

message SetTalkAgreeReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string user_uuid = 3 [(validate.rules).string.uuid = true];
}

message SetTalkCollectReq{
  int32 id = 1;
  int32 collections_id = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
  string user_uuid = 4 [(validate.rules).string.uuid = true];
}

message CancelTalkAgreeReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string user_uuid = 3 [(validate.rules).string.uuid = true];
}

message CancelTalkCollectReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string user_uuid = 3 [(validate.rules).string.uuid = true];
}

message GetLastColumnDraftReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetLastColumnDraftReply{
  int32 id = 1;
  int32 status = 2;
}

message GetColumnSearchReq{
  int32 page = 1;
  string search = 2;
  string time = 3;
}

message GetColumnSearchReply{
  message List{
    int32 id = 1;
    string name = 2;
    string tags = 3;
    string introduce = 4;
    string cover = 5;
    string update = 6;
    string uuid = 7;
  }
  repeated List list = 1;
  int32 total = 2;
}

message CreateColumnDraftReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message CreateColumnDraftReply{
  int32 id = 1;
}

message SendColumnReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string ip = 3 [(validate.rules).string.ip = true];
}

message CreateColumnReq{
  int32 id = 1;
  int32 auth = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message CreateColumnDbCacheAndSearchReq{
  int32 id = 1;
  int32 auth = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message SubscribeColumnReq{
  int32 id = 1;
  string author = 2 [(validate.rules).string.uuid = true];
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message CancelSubscribeColumnReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message SubscribeJudgeReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message SubscribeJudgeReply{
  bool subscribe = 1;
}

message EditColumnCosAndSearchReq{
  int32 id = 1;
  int32 auth = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message GetColumnListReq{
  int32 page = 1;
}

message GetColumnListReply{
  message Column{
    int32 id = 1;
    string uuid = 2;
  }
  repeated Column column = 1;
}

message GetColumnListHotReq{
  int32 page = 1;
}

message GetColumnListHotReply{
  message Column{
    int32 id = 1;
    string uuid = 2;
  }
  repeated Column column = 1;
}

message GetColumnListStatisticReq{
  repeated int32 ids = 1;
}

message GetColumnListStatisticReply{
  message Count{
    int32 id = 1;
    int32 agree = 2;
    int32 collect = 3;
    int32 view = 4;
  }
  repeated Count count = 1;
}

message GetColumnStatisticReq{
  int32 id = 1;
}

message GetColumnStatisticReply{
  string uuid = 1;
  int32 agree = 2;
  int32 collect = 3;
  int32 view = 4;
}

message GetUserColumnListReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetUserColumnListVisitorReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetColumnArticleListReq{
  int32 id = 1;
}

message GetColumnCountReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetColumnCountVisitorReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetColumnCountReply{
  int32 count = 1;
}

message GetSubscribeListReq{
  int32 page = 1;
  string uuid = 2;
}

message GetSubscribeListReply{
  message Subscribe{
    int32 id = 1;
    string uuid = 2;
  }
  repeated Subscribe subscribe = 1;
}

message GetSubscribeListCountReq{
  string uuid = 1;
}

message GetSubscribeListCountReply{
  int32 count = 1;
}

message GetColumnSubscribesReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  repeated int32 ids = 2;
}

message GetColumnSubscribesReply{
  message Subscribes{
    int32 id = 1;
    int32 subscribe_judge = 2;
  }
  repeated Subscribes subscribes = 1;
}

message SendColumnEditReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string ip = 3 [(validate.rules).string.ip = true];
}

message EditColumnReq{
  int32 id = 1;
  int32 auth = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message DeleteColumnReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message DeleteColumnCacheAndSearchReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message ColumnStatisticJudgeReq{
  int32 id = 1;
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message ColumnStatisticJudgeReply{
  bool agree = 1;
  bool collect = 2;
}

message SetColumnAgreeReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string user_uuid = 3 [(validate.rules).string.uuid = true];
}

message CancelColumnAgreeReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string user_uuid = 3 [(validate.rules).string.uuid = true];
}

message SetColumnCollectReq{
  int32 id = 1;
  int32 collections_id = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
  string user_uuid = 4 [(validate.rules).string.uuid = true];
}

message CancelColumnCollectReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string user_uuid = 3 [(validate.rules).string.uuid = true];
}

message SetColumnViewReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message AddColumnIncludesReq{
  int32 id = 1;
  int32 article_id = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message DeleteColumnIncludesReq{
  int32 id = 1;
  int32 article_id = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message GetNewsReq{
  int32 page = 1;
}

message GetNewsReply{
  message News{
    string id = 1;
    string update = 2;
    string author = 3;
    string title = 4;
    string text = 5;
    string tags = 6;
    string cover = 7;
    string url = 8;
  }
  repeated News news = 1;
}

message AddCreationCommentReq{
  int32 creationId = 1;
  int32 creationType = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
}

message ReduceCreationCommentReq{
  int32 creationId = 1;
  int32 creationType = 2;
  string uuid = 3 [(validate.rules).string.uuid = true];
}