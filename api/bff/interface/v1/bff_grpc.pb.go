// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.20.0
// source: bff/interface/v1/bff.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BffClient is the client API for Bff service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BffClient interface {
	UserRegister(ctx context.Context, in *UserRegisterReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	LoginByPassword(ctx context.Context, in *LoginByPasswordReq, opts ...grpc.CallOption) (*LoginReply, error)
	LoginByCode(ctx context.Context, in *LoginByCodeReq, opts ...grpc.CallOption) (*LoginReply, error)
	LoginByWeChat(ctx context.Context, in *LoginByWeChatReq, opts ...grpc.CallOption) (*LoginReply, error)
	LoginByGithub(ctx context.Context, in *LoginByGithubReq, opts ...grpc.CallOption) (*LoginReply, error)
	LoginPasswordReset(ctx context.Context, in *LoginPasswordResetReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SendPhoneCode(ctx context.Context, in *SendPhoneCodeReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SendEmailCode(ctx context.Context, in *SendEmailCodeReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetCosSessionKey(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetCosSessionKeyReply, error)
	GetAvatarReview(ctx context.Context, in *GetAvatarReviewReq, opts ...grpc.CallOption) (*GetAvatarReviewReply, error)
	GetCoverReview(ctx context.Context, in *GetCoverReviewReq, opts ...grpc.CallOption) (*GetCoverReviewReply, error)
	GetAccount(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetAccountReply, error)
	GetProfile(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetProfileReply, error)
	GetProfileList(ctx context.Context, in *GetProfileListReq, opts ...grpc.CallOption) (*GetProfileListReply, error)
	GetUserInfo(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserInfoReply, error)
	GetUserInfoVisitor(ctx context.Context, in *GetUserInfoVisitorReq, opts ...grpc.CallOption) (*GetUserInfoReply, error)
	GetUserFollow(ctx context.Context, in *GetUserFollowReq, opts ...grpc.CallOption) (*GetUserFollowReply, error)
	GetUserFollows(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserFollowsReply, error)
	GetFollowList(ctx context.Context, in *GetFollowListReq, opts ...grpc.CallOption) (*GetFollowListReply, error)
	GetFollowListCount(ctx context.Context, in *GetFollowListCountReq, opts ...grpc.CallOption) (*GetFollowListCountReply, error)
	GetFollowedList(ctx context.Context, in *GetFollowedListReq, opts ...grpc.CallOption) (*GetFollowedListReply, error)
	GetFollowedListCount(ctx context.Context, in *GetFollowedListCountReq, opts ...grpc.CallOption) (*GetFollowedListCountReply, error)
	GetProfileUpdate(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetProfileUpdateReply, error)
	GetUserSearch(ctx context.Context, in *GetUserSearchReq, opts ...grpc.CallOption) (*GetUserSearchReply, error)
	SetProfileUpdate(ctx context.Context, in *SetProfileUpdateReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SetUserPhone(ctx context.Context, in *SetUserPhoneReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SetUserEmail(ctx context.Context, in *SetUserEmailReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SetUserPassword(ctx context.Context, in *SetUserPasswordReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SetUserFollow(ctx context.Context, in *SetUserFollowReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CancelUserFollow(ctx context.Context, in *CancelUserFollowReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ChangeUserPassword(ctx context.Context, in *ChangeUserPasswordReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UnbindUserPhone(ctx context.Context, in *UnbindUserPhoneReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UnbindUserEmail(ctx context.Context, in *UnbindUserEmailReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// -------------------------creation----------------------------
	GetLeaderBoard(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetLeaderBoardReply, error)
	GetCollectArticleList(ctx context.Context, in *GetCollectArticleListReq, opts ...grpc.CallOption) (*GetArticleListReply, error)
	GetCollectArticleCount(ctx context.Context, in *GetCollectArticleCountReq, opts ...grpc.CallOption) (*GetCollectArticleCountReply, error)
	GetCollectTalkList(ctx context.Context, in *GetCollectTalkListReq, opts ...grpc.CallOption) (*GetTalkListReply, error)
	GetCollectTalkCount(ctx context.Context, in *GetCollectTalkCountReq, opts ...grpc.CallOption) (*GetCollectTalkCountReply, error)
	GetCollectColumnList(ctx context.Context, in *GetCollectColumnListReq, opts ...grpc.CallOption) (*GetColumnListReply, error)
	GetCollectColumnCount(ctx context.Context, in *GetCollectColumnCountReq, opts ...grpc.CallOption) (*GetCollectColumnCountReply, error)
	GetCollections(ctx context.Context, in *GetCollectionsReq, opts ...grpc.CallOption) (*GetCollectionsReply, error)
	GetCollectionsList(ctx context.Context, in *GetCollectionsListReq, opts ...grpc.CallOption) (*GetCollectionsListReply, error)
	GetCollectionsListAll(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetCollectionsListReply, error)
	GetCollectionsCount(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetCollectionsCountReply, error)
	GetCollectionsListByVisitor(ctx context.Context, in *GetCollectionsListByVisitorReq, opts ...grpc.CallOption) (*GetCollectionsListReply, error)
	GetCollectionsVisitorCount(ctx context.Context, in *GetCollectionsVisitorCountReq, opts ...grpc.CallOption) (*GetCollectionsCountReply, error)
	GetLastCollectionsDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetLastCollectionsDraftReply, error)
	GetCollectionsContentReview(ctx context.Context, in *GetCollectionsContentReviewReq, opts ...grpc.CallOption) (*GetCollectionsContentReviewReply, error)
	GetUserTimeLineListVisitor(ctx context.Context, in *GetUserTimeLineListReq, opts ...grpc.CallOption) (*GetUserTimeLineListReply, error)
	CreateCollectionsDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CreateCollectionsDraftReply, error)
	SendCollections(ctx context.Context, in *SendCollectionsReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SendCollectionsEdit(ctx context.Context, in *SendCollectionsEditReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteCollections(ctx context.Context, in *DeleteCollectionsReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetArticleList(ctx context.Context, in *GetArticleListReq, opts ...grpc.CallOption) (*GetArticleListReply, error)
	GetArticleListHot(ctx context.Context, in *GetArticleListHotReq, opts ...grpc.CallOption) (*GetArticleListHotReply, error)
	GetColumnArticleList(ctx context.Context, in *GetColumnArticleListReq, opts ...grpc.CallOption) (*GetArticleListReply, error)
	GetArticleCount(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetArticleCountReply, error)
	GetArticleCountVisitor(ctx context.Context, in *GetArticleCountVisitorReq, opts ...grpc.CallOption) (*GetArticleCountReply, error)
	GetUserArticleList(ctx context.Context, in *GetUserArticleListReq, opts ...grpc.CallOption) (*GetArticleListReply, error)
	GetUserArticleListSimple(ctx context.Context, in *GetUserArticleListSimpleReq, opts ...grpc.CallOption) (*GetArticleListReply, error)
	GetUserArticleListVisitor(ctx context.Context, in *GetUserArticleListVisitorReq, opts ...grpc.CallOption) (*GetArticleListReply, error)
	GetUserArticleListAll(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetArticleListReply, error)
	GetArticleStatistic(ctx context.Context, in *GetArticleStatisticReq, opts ...grpc.CallOption) (*GetArticleStatisticReply, error)
	GetUserArticleAgree(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserArticleAgreeReply, error)
	GetUserArticleCollect(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserArticleCollectReply, error)
	GetArticleListStatistic(ctx context.Context, in *GetArticleListStatisticReq, opts ...grpc.CallOption) (*GetArticleListStatisticReply, error)
	GetLastArticleDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetLastArticleDraftReply, error)
	GetArticleSearch(ctx context.Context, in *GetArticleSearchReq, opts ...grpc.CallOption) (*GetArticleSearchReply, error)
	GetArticleImageReview(ctx context.Context, in *GetArticleImageReviewReq, opts ...grpc.CallOption) (*GetArticleImageReviewReply, error)
	GetArticleContentReview(ctx context.Context, in *GetArticleContentReviewReq, opts ...grpc.CallOption) (*GetArticleContentReviewReply, error)
	CreateArticleDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CreateArticleDraftReply, error)
	ArticleDraftMark(ctx context.Context, in *ArticleDraftMarkReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetArticleDraftList(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetArticleDraftListReply, error)
	SendArticle(ctx context.Context, in *SendArticleReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SendArticleEdit(ctx context.Context, in *SendArticleEditReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteArticle(ctx context.Context, in *DeleteArticleReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SetArticleAgree(ctx context.Context, in *SetArticleAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SetArticleView(ctx context.Context, in *SetArticleViewReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SetArticleCollect(ctx context.Context, in *SetArticleCollectReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CancelArticleAgree(ctx context.Context, in *CancelArticleAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CancelArticleCollect(ctx context.Context, in *CancelArticleCollectReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ArticleStatisticJudge(ctx context.Context, in *ArticleStatisticJudgeReq, opts ...grpc.CallOption) (*ArticleStatisticJudgeReply, error)
	GetTalkList(ctx context.Context, in *GetTalkListReq, opts ...grpc.CallOption) (*GetTalkListReply, error)
	GetTalkListHot(ctx context.Context, in *GetTalkListHotReq, opts ...grpc.CallOption) (*GetTalkListHotReply, error)
	GetTalkListStatistic(ctx context.Context, in *GetTalkListStatisticReq, opts ...grpc.CallOption) (*GetTalkListStatisticReply, error)
	GetUserTalkList(ctx context.Context, in *GetUserTalkListReq, opts ...grpc.CallOption) (*GetTalkListReply, error)
	GetUserTalkListSimple(ctx context.Context, in *GetUserTalkListSimpleReq, opts ...grpc.CallOption) (*GetTalkListReply, error)
	GetUserTalkListVisitor(ctx context.Context, in *GetUserTalkListVisitorReq, opts ...grpc.CallOption) (*GetTalkListReply, error)
	GetTalkCount(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetTalkCountReply, error)
	GetTalkCountVisitor(ctx context.Context, in *GetTalkCountVisitorReq, opts ...grpc.CallOption) (*GetTalkCountReply, error)
	GetTalkStatistic(ctx context.Context, in *GetTalkStatisticReq, opts ...grpc.CallOption) (*GetTalkStatisticReply, error)
	GetLastTalkDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetLastTalkDraftReply, error)
	GetTalkSearch(ctx context.Context, in *GetTalkSearchReq, opts ...grpc.CallOption) (*GetTalkSearchReply, error)
	GetUserTalkAgree(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserTalkAgreeReply, error)
	GetUserTalkCollect(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserTalkCollectReply, error)
	GetTalkImageReview(ctx context.Context, in *GetTalkImageReviewReq, opts ...grpc.CallOption) (*GetTalkImageReviewReply, error)
	GetTalkContentReview(ctx context.Context, in *GetTalkContentReviewReq, opts ...grpc.CallOption) (*GetTalkContentReviewReply, error)
	CreateTalkDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CreateTalkDraftReply, error)
	SendTalk(ctx context.Context, in *SendTalkReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SendTalkEdit(ctx context.Context, in *SendTalkEditReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteTalk(ctx context.Context, in *DeleteTalkReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SetTalkView(ctx context.Context, in *SetTalkViewReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TalkStatisticJudge(ctx context.Context, in *TalkStatisticJudgeReq, opts ...grpc.CallOption) (*TalkStatisticJudgeReply, error)
	SetTalkAgree(ctx context.Context, in *SetTalkAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SetTalkCollect(ctx context.Context, in *SetTalkCollectReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CancelTalkAgree(ctx context.Context, in *CancelTalkAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CancelTalkCollect(ctx context.Context, in *CancelTalkCollectReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetLastColumnDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetLastColumnDraftReply, error)
	CreateColumnDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CreateColumnDraftReply, error)
	SubscribeColumn(ctx context.Context, in *SubscribeColumnReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CancelSubscribeColumn(ctx context.Context, in *CancelSubscribeColumnReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SubscribeJudge(ctx context.Context, in *SubscribeJudgeReq, opts ...grpc.CallOption) (*SubscribeJudgeReply, error)
	SendColumn(ctx context.Context, in *SendColumnReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetSubscribeList(ctx context.Context, in *GetSubscribeListReq, opts ...grpc.CallOption) (*GetSubscribeListReply, error)
	GetSubscribeListCount(ctx context.Context, in *GetSubscribeListCountReq, opts ...grpc.CallOption) (*GetSubscribeListCountReply, error)
	GetColumnSubscribes(ctx context.Context, in *GetColumnSubscribesReq, opts ...grpc.CallOption) (*GetColumnSubscribesReply, error)
	GetColumnList(ctx context.Context, in *GetColumnListReq, opts ...grpc.CallOption) (*GetColumnListReply, error)
	GetColumnListHot(ctx context.Context, in *GetColumnListHotReq, opts ...grpc.CallOption) (*GetColumnListHotReply, error)
	GetColumnListStatistic(ctx context.Context, in *GetColumnListStatisticReq, opts ...grpc.CallOption) (*GetColumnListStatisticReply, error)
	GetUserColumnList(ctx context.Context, in *GetUserColumnListReq, opts ...grpc.CallOption) (*GetColumnListReply, error)
	GetUserColumnListSimple(ctx context.Context, in *GetUserColumnListSimpleReq, opts ...grpc.CallOption) (*GetColumnListReply, error)
	GetUserColumnListVisitor(ctx context.Context, in *GetUserColumnListVisitorReq, opts ...grpc.CallOption) (*GetColumnListReply, error)
	GetColumnCount(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetColumnCountReply, error)
	GetColumnCountVisitor(ctx context.Context, in *GetColumnCountVisitorReq, opts ...grpc.CallOption) (*GetColumnCountReply, error)
	GetColumnSearch(ctx context.Context, in *GetColumnSearchReq, opts ...grpc.CallOption) (*GetColumnSearchReply, error)
	SendColumnEdit(ctx context.Context, in *SendColumnEditReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteColumn(ctx context.Context, in *DeleteColumnReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetColumnStatistic(ctx context.Context, in *GetColumnStatisticReq, opts ...grpc.CallOption) (*GetColumnStatisticReply, error)
	GetUserColumnAgree(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserColumnAgreeReply, error)
	GetUserColumnCollect(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserColumnCollectReply, error)
	GetUserSubscribeColumn(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserSubscribeColumnReply, error)
	GetColumnImageReview(ctx context.Context, in *GetColumnImageReviewReq, opts ...grpc.CallOption) (*GetColumnImageReviewReply, error)
	GetColumnContentReview(ctx context.Context, in *GetColumnContentReviewReq, opts ...grpc.CallOption) (*GetColumnContentReviewReply, error)
	ColumnStatisticJudge(ctx context.Context, in *ColumnStatisticJudgeReq, opts ...grpc.CallOption) (*ColumnStatisticJudgeReply, error)
	SetColumnAgree(ctx context.Context, in *SetColumnAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CancelColumnAgree(ctx context.Context, in *CancelColumnAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SetColumnCollect(ctx context.Context, in *SetColumnCollectReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CancelColumnCollect(ctx context.Context, in *CancelColumnCollectReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SetColumnView(ctx context.Context, in *SetColumnViewReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	AddColumnIncludes(ctx context.Context, in *AddColumnIncludesReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteColumnIncludes(ctx context.Context, in *DeleteColumnIncludesReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetNews(ctx context.Context, in *GetNewsReq, opts ...grpc.CallOption) (*GetNewsReply, error)
	GetAchievementList(ctx context.Context, in *GetAchievementListReq, opts ...grpc.CallOption) (*GetAchievementListReply, error)
	GetUserAchievement(ctx context.Context, in *GetUserAchievementReq, opts ...grpc.CallOption) (*GetUserAchievementReply, error)
	GetUserMedal(ctx context.Context, in *GetUserMedalReq, opts ...grpc.CallOption) (*GetUserMedalReply, error)
	AccessUserMedal(ctx context.Context, in *AccessUserMedalReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetUserMedalProgress(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserMedalProgressReply, error)
	SetUserMedal(ctx context.Context, in *SetUserMedalReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CancelUserMedalSet(ctx context.Context, in *CancelUserMedalSetReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetLastCommentDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetLastCommentDraftReply, error)
	GetUserCommentAgree(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserCommentAgreeReply, error)
	GetCommentUser(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetCommentUserReply, error)
	GetCommentList(ctx context.Context, in *GetCommentListReq, opts ...grpc.CallOption) (*GetCommentListReply, error)
	GetSubCommentList(ctx context.Context, in *GetSubCommentListReq, opts ...grpc.CallOption) (*GetSubCommentListReply, error)
	GetCommentListHot(ctx context.Context, in *GetCommentListReq, opts ...grpc.CallOption) (*GetCommentListReply, error)
	GetUserCommentArticleReplyList(ctx context.Context, in *GetUserCommentArticleReplyListReq, opts ...grpc.CallOption) (*GetUserCommentArticleReplyListReply, error)
	GetUserSubCommentArticleReplyList(ctx context.Context, in *GetUserSubCommentArticleReplyListReq, opts ...grpc.CallOption) (*GetUserSubCommentArticleReplyListReply, error)
	GetUserCommentTalkReplyList(ctx context.Context, in *GetUserCommentTalkReplyListReq, opts ...grpc.CallOption) (*GetUserCommentTalkReplyListReply, error)
	GetUserSubCommentTalkReplyList(ctx context.Context, in *GetUserSubCommentTalkReplyListReq, opts ...grpc.CallOption) (*GetUserSubCommentTalkReplyListReply, error)
	GetUserCommentArticleRepliedList(ctx context.Context, in *GetUserCommentArticleRepliedListReq, opts ...grpc.CallOption) (*GetUserCommentArticleRepliedListReply, error)
	GetUserSubCommentArticleRepliedList(ctx context.Context, in *GetUserSubCommentArticleRepliedListReq, opts ...grpc.CallOption) (*GetUserSubCommentArticleRepliedListReply, error)
	GetUserCommentTalkRepliedList(ctx context.Context, in *GetUserCommentTalkRepliedListReq, opts ...grpc.CallOption) (*GetUserCommentTalkRepliedListReply, error)
	GetUserSubCommentTalkRepliedList(ctx context.Context, in *GetUserSubCommentTalkRepliedListReq, opts ...grpc.CallOption) (*GetUserSubCommentTalkRepliedListReply, error)
	GetCommentContentReview(ctx context.Context, in *GetCommentContentReviewReq, opts ...grpc.CallOption) (*GetCommentContentReviewReply, error)
	CreateCommentDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CreateCommentDraftReply, error)
	SendComment(ctx context.Context, in *SendCommentReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SendSubComment(ctx context.Context, in *SendSubCommentReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	RemoveComment(ctx context.Context, in *RemoveCommentReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	RemoveSubComment(ctx context.Context, in *RemoveSubCommentReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SetCommentAgree(ctx context.Context, in *SetCommentAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SetSubCommentAgree(ctx context.Context, in *SetSubCommentAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CancelCommentAgree(ctx context.Context, in *CancelCommentAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CancelSubCommentAgree(ctx context.Context, in *CancelSubCommentAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type bffClient struct {
	cc grpc.ClientConnInterface
}

func NewBffClient(cc grpc.ClientConnInterface) BffClient {
	return &bffClient{cc}
}

func (c *bffClient) UserRegister(ctx context.Context, in *UserRegisterReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/UserRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) LoginByPassword(ctx context.Context, in *LoginByPasswordReq, opts ...grpc.CallOption) (*LoginReply, error) {
	out := new(LoginReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/LoginByPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) LoginByCode(ctx context.Context, in *LoginByCodeReq, opts ...grpc.CallOption) (*LoginReply, error) {
	out := new(LoginReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/LoginByCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) LoginByWeChat(ctx context.Context, in *LoginByWeChatReq, opts ...grpc.CallOption) (*LoginReply, error) {
	out := new(LoginReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/LoginByWeChat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) LoginByGithub(ctx context.Context, in *LoginByGithubReq, opts ...grpc.CallOption) (*LoginReply, error) {
	out := new(LoginReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/LoginByGithub", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) LoginPasswordReset(ctx context.Context, in *LoginPasswordResetReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/LoginPasswordReset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SendPhoneCode(ctx context.Context, in *SendPhoneCodeReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SendPhoneCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SendEmailCode(ctx context.Context, in *SendEmailCodeReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SendEmailCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCosSessionKey(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetCosSessionKeyReply, error) {
	out := new(GetCosSessionKeyReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCosSessionKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetAvatarReview(ctx context.Context, in *GetAvatarReviewReq, opts ...grpc.CallOption) (*GetAvatarReviewReply, error) {
	out := new(GetAvatarReviewReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetAvatarReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCoverReview(ctx context.Context, in *GetCoverReviewReq, opts ...grpc.CallOption) (*GetCoverReviewReply, error) {
	out := new(GetCoverReviewReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCoverReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetAccount(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetAccountReply, error) {
	out := new(GetAccountReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetProfile(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetProfileReply, error) {
	out := new(GetProfileReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetProfileList(ctx context.Context, in *GetProfileListReq, opts ...grpc.CallOption) (*GetProfileListReply, error) {
	out := new(GetProfileListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetProfileList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserInfo(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserInfoReply, error) {
	out := new(GetUserInfoReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserInfoVisitor(ctx context.Context, in *GetUserInfoVisitorReq, opts ...grpc.CallOption) (*GetUserInfoReply, error) {
	out := new(GetUserInfoReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserInfoVisitor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserFollow(ctx context.Context, in *GetUserFollowReq, opts ...grpc.CallOption) (*GetUserFollowReply, error) {
	out := new(GetUserFollowReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserFollow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserFollows(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserFollowsReply, error) {
	out := new(GetUserFollowsReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserFollows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetFollowList(ctx context.Context, in *GetFollowListReq, opts ...grpc.CallOption) (*GetFollowListReply, error) {
	out := new(GetFollowListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetFollowList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetFollowListCount(ctx context.Context, in *GetFollowListCountReq, opts ...grpc.CallOption) (*GetFollowListCountReply, error) {
	out := new(GetFollowListCountReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetFollowListCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetFollowedList(ctx context.Context, in *GetFollowedListReq, opts ...grpc.CallOption) (*GetFollowedListReply, error) {
	out := new(GetFollowedListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetFollowedList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetFollowedListCount(ctx context.Context, in *GetFollowedListCountReq, opts ...grpc.CallOption) (*GetFollowedListCountReply, error) {
	out := new(GetFollowedListCountReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetFollowedListCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetProfileUpdate(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetProfileUpdateReply, error) {
	out := new(GetProfileUpdateReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetProfileUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserSearch(ctx context.Context, in *GetUserSearchReq, opts ...grpc.CallOption) (*GetUserSearchReply, error) {
	out := new(GetUserSearchReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetProfileUpdate(ctx context.Context, in *SetProfileUpdateReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetProfileUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetUserPhone(ctx context.Context, in *SetUserPhoneReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetUserPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetUserEmail(ctx context.Context, in *SetUserEmailReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetUserEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetUserPassword(ctx context.Context, in *SetUserPasswordReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetUserPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetUserFollow(ctx context.Context, in *SetUserFollowReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetUserFollow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) CancelUserFollow(ctx context.Context, in *CancelUserFollowReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/CancelUserFollow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) ChangeUserPassword(ctx context.Context, in *ChangeUserPasswordReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/ChangeUserPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) UnbindUserPhone(ctx context.Context, in *UnbindUserPhoneReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/UnbindUserPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) UnbindUserEmail(ctx context.Context, in *UnbindUserEmailReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/UnbindUserEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetLeaderBoard(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetLeaderBoardReply, error) {
	out := new(GetLeaderBoardReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetLeaderBoard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCollectArticleList(ctx context.Context, in *GetCollectArticleListReq, opts ...grpc.CallOption) (*GetArticleListReply, error) {
	out := new(GetArticleListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCollectArticleList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCollectArticleCount(ctx context.Context, in *GetCollectArticleCountReq, opts ...grpc.CallOption) (*GetCollectArticleCountReply, error) {
	out := new(GetCollectArticleCountReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCollectArticleCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCollectTalkList(ctx context.Context, in *GetCollectTalkListReq, opts ...grpc.CallOption) (*GetTalkListReply, error) {
	out := new(GetTalkListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCollectTalkList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCollectTalkCount(ctx context.Context, in *GetCollectTalkCountReq, opts ...grpc.CallOption) (*GetCollectTalkCountReply, error) {
	out := new(GetCollectTalkCountReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCollectTalkCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCollectColumnList(ctx context.Context, in *GetCollectColumnListReq, opts ...grpc.CallOption) (*GetColumnListReply, error) {
	out := new(GetColumnListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCollectColumnList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCollectColumnCount(ctx context.Context, in *GetCollectColumnCountReq, opts ...grpc.CallOption) (*GetCollectColumnCountReply, error) {
	out := new(GetCollectColumnCountReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCollectColumnCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCollections(ctx context.Context, in *GetCollectionsReq, opts ...grpc.CallOption) (*GetCollectionsReply, error) {
	out := new(GetCollectionsReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCollections", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCollectionsList(ctx context.Context, in *GetCollectionsListReq, opts ...grpc.CallOption) (*GetCollectionsListReply, error) {
	out := new(GetCollectionsListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCollectionsList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCollectionsListAll(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetCollectionsListReply, error) {
	out := new(GetCollectionsListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCollectionsListAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCollectionsCount(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetCollectionsCountReply, error) {
	out := new(GetCollectionsCountReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCollectionsCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCollectionsListByVisitor(ctx context.Context, in *GetCollectionsListByVisitorReq, opts ...grpc.CallOption) (*GetCollectionsListReply, error) {
	out := new(GetCollectionsListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCollectionsListByVisitor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCollectionsVisitorCount(ctx context.Context, in *GetCollectionsVisitorCountReq, opts ...grpc.CallOption) (*GetCollectionsCountReply, error) {
	out := new(GetCollectionsCountReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCollectionsVisitorCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetLastCollectionsDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetLastCollectionsDraftReply, error) {
	out := new(GetLastCollectionsDraftReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetLastCollectionsDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCollectionsContentReview(ctx context.Context, in *GetCollectionsContentReviewReq, opts ...grpc.CallOption) (*GetCollectionsContentReviewReply, error) {
	out := new(GetCollectionsContentReviewReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCollectionsContentReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserTimeLineListVisitor(ctx context.Context, in *GetUserTimeLineListReq, opts ...grpc.CallOption) (*GetUserTimeLineListReply, error) {
	out := new(GetUserTimeLineListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserTimeLineListVisitor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) CreateCollectionsDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CreateCollectionsDraftReply, error) {
	out := new(CreateCollectionsDraftReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/CreateCollectionsDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SendCollections(ctx context.Context, in *SendCollectionsReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SendCollections", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SendCollectionsEdit(ctx context.Context, in *SendCollectionsEditReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SendCollectionsEdit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) DeleteCollections(ctx context.Context, in *DeleteCollectionsReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/DeleteCollections", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetArticleList(ctx context.Context, in *GetArticleListReq, opts ...grpc.CallOption) (*GetArticleListReply, error) {
	out := new(GetArticleListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetArticleList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetArticleListHot(ctx context.Context, in *GetArticleListHotReq, opts ...grpc.CallOption) (*GetArticleListHotReply, error) {
	out := new(GetArticleListHotReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetArticleListHot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetColumnArticleList(ctx context.Context, in *GetColumnArticleListReq, opts ...grpc.CallOption) (*GetArticleListReply, error) {
	out := new(GetArticleListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetColumnArticleList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetArticleCount(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetArticleCountReply, error) {
	out := new(GetArticleCountReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetArticleCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetArticleCountVisitor(ctx context.Context, in *GetArticleCountVisitorReq, opts ...grpc.CallOption) (*GetArticleCountReply, error) {
	out := new(GetArticleCountReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetArticleCountVisitor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserArticleList(ctx context.Context, in *GetUserArticleListReq, opts ...grpc.CallOption) (*GetArticleListReply, error) {
	out := new(GetArticleListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserArticleList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserArticleListSimple(ctx context.Context, in *GetUserArticleListSimpleReq, opts ...grpc.CallOption) (*GetArticleListReply, error) {
	out := new(GetArticleListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserArticleListSimple", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserArticleListVisitor(ctx context.Context, in *GetUserArticleListVisitorReq, opts ...grpc.CallOption) (*GetArticleListReply, error) {
	out := new(GetArticleListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserArticleListVisitor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserArticleListAll(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetArticleListReply, error) {
	out := new(GetArticleListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserArticleListAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetArticleStatistic(ctx context.Context, in *GetArticleStatisticReq, opts ...grpc.CallOption) (*GetArticleStatisticReply, error) {
	out := new(GetArticleStatisticReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetArticleStatistic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserArticleAgree(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserArticleAgreeReply, error) {
	out := new(GetUserArticleAgreeReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserArticleAgree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserArticleCollect(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserArticleCollectReply, error) {
	out := new(GetUserArticleCollectReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserArticleCollect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetArticleListStatistic(ctx context.Context, in *GetArticleListStatisticReq, opts ...grpc.CallOption) (*GetArticleListStatisticReply, error) {
	out := new(GetArticleListStatisticReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetArticleListStatistic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetLastArticleDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetLastArticleDraftReply, error) {
	out := new(GetLastArticleDraftReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetLastArticleDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetArticleSearch(ctx context.Context, in *GetArticleSearchReq, opts ...grpc.CallOption) (*GetArticleSearchReply, error) {
	out := new(GetArticleSearchReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetArticleSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetArticleImageReview(ctx context.Context, in *GetArticleImageReviewReq, opts ...grpc.CallOption) (*GetArticleImageReviewReply, error) {
	out := new(GetArticleImageReviewReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetArticleImageReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetArticleContentReview(ctx context.Context, in *GetArticleContentReviewReq, opts ...grpc.CallOption) (*GetArticleContentReviewReply, error) {
	out := new(GetArticleContentReviewReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetArticleContentReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) CreateArticleDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CreateArticleDraftReply, error) {
	out := new(CreateArticleDraftReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/CreateArticleDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) ArticleDraftMark(ctx context.Context, in *ArticleDraftMarkReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/ArticleDraftMark", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetArticleDraftList(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetArticleDraftListReply, error) {
	out := new(GetArticleDraftListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetArticleDraftList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SendArticle(ctx context.Context, in *SendArticleReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SendArticle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SendArticleEdit(ctx context.Context, in *SendArticleEditReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SendArticleEdit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) DeleteArticle(ctx context.Context, in *DeleteArticleReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/DeleteArticle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetArticleAgree(ctx context.Context, in *SetArticleAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetArticleAgree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetArticleView(ctx context.Context, in *SetArticleViewReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetArticleView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetArticleCollect(ctx context.Context, in *SetArticleCollectReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetArticleCollect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) CancelArticleAgree(ctx context.Context, in *CancelArticleAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/CancelArticleAgree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) CancelArticleCollect(ctx context.Context, in *CancelArticleCollectReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/CancelArticleCollect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) ArticleStatisticJudge(ctx context.Context, in *ArticleStatisticJudgeReq, opts ...grpc.CallOption) (*ArticleStatisticJudgeReply, error) {
	out := new(ArticleStatisticJudgeReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/ArticleStatisticJudge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetTalkList(ctx context.Context, in *GetTalkListReq, opts ...grpc.CallOption) (*GetTalkListReply, error) {
	out := new(GetTalkListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetTalkList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetTalkListHot(ctx context.Context, in *GetTalkListHotReq, opts ...grpc.CallOption) (*GetTalkListHotReply, error) {
	out := new(GetTalkListHotReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetTalkListHot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetTalkListStatistic(ctx context.Context, in *GetTalkListStatisticReq, opts ...grpc.CallOption) (*GetTalkListStatisticReply, error) {
	out := new(GetTalkListStatisticReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetTalkListStatistic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserTalkList(ctx context.Context, in *GetUserTalkListReq, opts ...grpc.CallOption) (*GetTalkListReply, error) {
	out := new(GetTalkListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserTalkList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserTalkListSimple(ctx context.Context, in *GetUserTalkListSimpleReq, opts ...grpc.CallOption) (*GetTalkListReply, error) {
	out := new(GetTalkListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserTalkListSimple", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserTalkListVisitor(ctx context.Context, in *GetUserTalkListVisitorReq, opts ...grpc.CallOption) (*GetTalkListReply, error) {
	out := new(GetTalkListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserTalkListVisitor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetTalkCount(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetTalkCountReply, error) {
	out := new(GetTalkCountReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetTalkCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetTalkCountVisitor(ctx context.Context, in *GetTalkCountVisitorReq, opts ...grpc.CallOption) (*GetTalkCountReply, error) {
	out := new(GetTalkCountReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetTalkCountVisitor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetTalkStatistic(ctx context.Context, in *GetTalkStatisticReq, opts ...grpc.CallOption) (*GetTalkStatisticReply, error) {
	out := new(GetTalkStatisticReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetTalkStatistic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetLastTalkDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetLastTalkDraftReply, error) {
	out := new(GetLastTalkDraftReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetLastTalkDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetTalkSearch(ctx context.Context, in *GetTalkSearchReq, opts ...grpc.CallOption) (*GetTalkSearchReply, error) {
	out := new(GetTalkSearchReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetTalkSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserTalkAgree(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserTalkAgreeReply, error) {
	out := new(GetUserTalkAgreeReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserTalkAgree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserTalkCollect(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserTalkCollectReply, error) {
	out := new(GetUserTalkCollectReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserTalkCollect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetTalkImageReview(ctx context.Context, in *GetTalkImageReviewReq, opts ...grpc.CallOption) (*GetTalkImageReviewReply, error) {
	out := new(GetTalkImageReviewReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetTalkImageReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetTalkContentReview(ctx context.Context, in *GetTalkContentReviewReq, opts ...grpc.CallOption) (*GetTalkContentReviewReply, error) {
	out := new(GetTalkContentReviewReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetTalkContentReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) CreateTalkDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CreateTalkDraftReply, error) {
	out := new(CreateTalkDraftReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/CreateTalkDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SendTalk(ctx context.Context, in *SendTalkReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SendTalk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SendTalkEdit(ctx context.Context, in *SendTalkEditReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SendTalkEdit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) DeleteTalk(ctx context.Context, in *DeleteTalkReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/DeleteTalk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetTalkView(ctx context.Context, in *SetTalkViewReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetTalkView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) TalkStatisticJudge(ctx context.Context, in *TalkStatisticJudgeReq, opts ...grpc.CallOption) (*TalkStatisticJudgeReply, error) {
	out := new(TalkStatisticJudgeReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/TalkStatisticJudge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetTalkAgree(ctx context.Context, in *SetTalkAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetTalkAgree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetTalkCollect(ctx context.Context, in *SetTalkCollectReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetTalkCollect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) CancelTalkAgree(ctx context.Context, in *CancelTalkAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/CancelTalkAgree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) CancelTalkCollect(ctx context.Context, in *CancelTalkCollectReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/CancelTalkCollect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetLastColumnDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetLastColumnDraftReply, error) {
	out := new(GetLastColumnDraftReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetLastColumnDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) CreateColumnDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CreateColumnDraftReply, error) {
	out := new(CreateColumnDraftReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/CreateColumnDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SubscribeColumn(ctx context.Context, in *SubscribeColumnReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SubscribeColumn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) CancelSubscribeColumn(ctx context.Context, in *CancelSubscribeColumnReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/CancelSubscribeColumn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SubscribeJudge(ctx context.Context, in *SubscribeJudgeReq, opts ...grpc.CallOption) (*SubscribeJudgeReply, error) {
	out := new(SubscribeJudgeReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SubscribeJudge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SendColumn(ctx context.Context, in *SendColumnReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SendColumn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetSubscribeList(ctx context.Context, in *GetSubscribeListReq, opts ...grpc.CallOption) (*GetSubscribeListReply, error) {
	out := new(GetSubscribeListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetSubscribeList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetSubscribeListCount(ctx context.Context, in *GetSubscribeListCountReq, opts ...grpc.CallOption) (*GetSubscribeListCountReply, error) {
	out := new(GetSubscribeListCountReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetSubscribeListCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetColumnSubscribes(ctx context.Context, in *GetColumnSubscribesReq, opts ...grpc.CallOption) (*GetColumnSubscribesReply, error) {
	out := new(GetColumnSubscribesReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetColumnSubscribes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetColumnList(ctx context.Context, in *GetColumnListReq, opts ...grpc.CallOption) (*GetColumnListReply, error) {
	out := new(GetColumnListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetColumnList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetColumnListHot(ctx context.Context, in *GetColumnListHotReq, opts ...grpc.CallOption) (*GetColumnListHotReply, error) {
	out := new(GetColumnListHotReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetColumnListHot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetColumnListStatistic(ctx context.Context, in *GetColumnListStatisticReq, opts ...grpc.CallOption) (*GetColumnListStatisticReply, error) {
	out := new(GetColumnListStatisticReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetColumnListStatistic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserColumnList(ctx context.Context, in *GetUserColumnListReq, opts ...grpc.CallOption) (*GetColumnListReply, error) {
	out := new(GetColumnListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserColumnList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserColumnListSimple(ctx context.Context, in *GetUserColumnListSimpleReq, opts ...grpc.CallOption) (*GetColumnListReply, error) {
	out := new(GetColumnListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserColumnListSimple", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserColumnListVisitor(ctx context.Context, in *GetUserColumnListVisitorReq, opts ...grpc.CallOption) (*GetColumnListReply, error) {
	out := new(GetColumnListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserColumnListVisitor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetColumnCount(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetColumnCountReply, error) {
	out := new(GetColumnCountReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetColumnCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetColumnCountVisitor(ctx context.Context, in *GetColumnCountVisitorReq, opts ...grpc.CallOption) (*GetColumnCountReply, error) {
	out := new(GetColumnCountReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetColumnCountVisitor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetColumnSearch(ctx context.Context, in *GetColumnSearchReq, opts ...grpc.CallOption) (*GetColumnSearchReply, error) {
	out := new(GetColumnSearchReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetColumnSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SendColumnEdit(ctx context.Context, in *SendColumnEditReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SendColumnEdit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) DeleteColumn(ctx context.Context, in *DeleteColumnReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/DeleteColumn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetColumnStatistic(ctx context.Context, in *GetColumnStatisticReq, opts ...grpc.CallOption) (*GetColumnStatisticReply, error) {
	out := new(GetColumnStatisticReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetColumnStatistic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserColumnAgree(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserColumnAgreeReply, error) {
	out := new(GetUserColumnAgreeReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserColumnAgree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserColumnCollect(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserColumnCollectReply, error) {
	out := new(GetUserColumnCollectReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserColumnCollect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserSubscribeColumn(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserSubscribeColumnReply, error) {
	out := new(GetUserSubscribeColumnReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserSubscribeColumn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetColumnImageReview(ctx context.Context, in *GetColumnImageReviewReq, opts ...grpc.CallOption) (*GetColumnImageReviewReply, error) {
	out := new(GetColumnImageReviewReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetColumnImageReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetColumnContentReview(ctx context.Context, in *GetColumnContentReviewReq, opts ...grpc.CallOption) (*GetColumnContentReviewReply, error) {
	out := new(GetColumnContentReviewReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetColumnContentReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) ColumnStatisticJudge(ctx context.Context, in *ColumnStatisticJudgeReq, opts ...grpc.CallOption) (*ColumnStatisticJudgeReply, error) {
	out := new(ColumnStatisticJudgeReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/ColumnStatisticJudge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetColumnAgree(ctx context.Context, in *SetColumnAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetColumnAgree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) CancelColumnAgree(ctx context.Context, in *CancelColumnAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/CancelColumnAgree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetColumnCollect(ctx context.Context, in *SetColumnCollectReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetColumnCollect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) CancelColumnCollect(ctx context.Context, in *CancelColumnCollectReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/CancelColumnCollect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetColumnView(ctx context.Context, in *SetColumnViewReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetColumnView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) AddColumnIncludes(ctx context.Context, in *AddColumnIncludesReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/AddColumnIncludes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) DeleteColumnIncludes(ctx context.Context, in *DeleteColumnIncludesReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/DeleteColumnIncludes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetNews(ctx context.Context, in *GetNewsReq, opts ...grpc.CallOption) (*GetNewsReply, error) {
	out := new(GetNewsReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetNews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetAchievementList(ctx context.Context, in *GetAchievementListReq, opts ...grpc.CallOption) (*GetAchievementListReply, error) {
	out := new(GetAchievementListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetAchievementList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserAchievement(ctx context.Context, in *GetUserAchievementReq, opts ...grpc.CallOption) (*GetUserAchievementReply, error) {
	out := new(GetUserAchievementReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserAchievement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserMedal(ctx context.Context, in *GetUserMedalReq, opts ...grpc.CallOption) (*GetUserMedalReply, error) {
	out := new(GetUserMedalReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserMedal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) AccessUserMedal(ctx context.Context, in *AccessUserMedalReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/AccessUserMedal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserMedalProgress(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserMedalProgressReply, error) {
	out := new(GetUserMedalProgressReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserMedalProgress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetUserMedal(ctx context.Context, in *SetUserMedalReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetUserMedal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) CancelUserMedalSet(ctx context.Context, in *CancelUserMedalSetReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/CancelUserMedalSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetLastCommentDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetLastCommentDraftReply, error) {
	out := new(GetLastCommentDraftReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetLastCommentDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserCommentAgree(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserCommentAgreeReply, error) {
	out := new(GetUserCommentAgreeReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserCommentAgree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCommentUser(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetCommentUserReply, error) {
	out := new(GetCommentUserReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCommentUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCommentList(ctx context.Context, in *GetCommentListReq, opts ...grpc.CallOption) (*GetCommentListReply, error) {
	out := new(GetCommentListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCommentList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetSubCommentList(ctx context.Context, in *GetSubCommentListReq, opts ...grpc.CallOption) (*GetSubCommentListReply, error) {
	out := new(GetSubCommentListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetSubCommentList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCommentListHot(ctx context.Context, in *GetCommentListReq, opts ...grpc.CallOption) (*GetCommentListReply, error) {
	out := new(GetCommentListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCommentListHot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserCommentArticleReplyList(ctx context.Context, in *GetUserCommentArticleReplyListReq, opts ...grpc.CallOption) (*GetUserCommentArticleReplyListReply, error) {
	out := new(GetUserCommentArticleReplyListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserCommentArticleReplyList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserSubCommentArticleReplyList(ctx context.Context, in *GetUserSubCommentArticleReplyListReq, opts ...grpc.CallOption) (*GetUserSubCommentArticleReplyListReply, error) {
	out := new(GetUserSubCommentArticleReplyListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserSubCommentArticleReplyList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserCommentTalkReplyList(ctx context.Context, in *GetUserCommentTalkReplyListReq, opts ...grpc.CallOption) (*GetUserCommentTalkReplyListReply, error) {
	out := new(GetUserCommentTalkReplyListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserCommentTalkReplyList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserSubCommentTalkReplyList(ctx context.Context, in *GetUserSubCommentTalkReplyListReq, opts ...grpc.CallOption) (*GetUserSubCommentTalkReplyListReply, error) {
	out := new(GetUserSubCommentTalkReplyListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserSubCommentTalkReplyList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserCommentArticleRepliedList(ctx context.Context, in *GetUserCommentArticleRepliedListReq, opts ...grpc.CallOption) (*GetUserCommentArticleRepliedListReply, error) {
	out := new(GetUserCommentArticleRepliedListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserCommentArticleRepliedList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserSubCommentArticleRepliedList(ctx context.Context, in *GetUserSubCommentArticleRepliedListReq, opts ...grpc.CallOption) (*GetUserSubCommentArticleRepliedListReply, error) {
	out := new(GetUserSubCommentArticleRepliedListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserSubCommentArticleRepliedList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserCommentTalkRepliedList(ctx context.Context, in *GetUserCommentTalkRepliedListReq, opts ...grpc.CallOption) (*GetUserCommentTalkRepliedListReply, error) {
	out := new(GetUserCommentTalkRepliedListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserCommentTalkRepliedList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetUserSubCommentTalkRepliedList(ctx context.Context, in *GetUserSubCommentTalkRepliedListReq, opts ...grpc.CallOption) (*GetUserSubCommentTalkRepliedListReply, error) {
	out := new(GetUserSubCommentTalkRepliedListReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetUserSubCommentTalkRepliedList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) GetCommentContentReview(ctx context.Context, in *GetCommentContentReviewReq, opts ...grpc.CallOption) (*GetCommentContentReviewReply, error) {
	out := new(GetCommentContentReviewReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/GetCommentContentReview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) CreateCommentDraft(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CreateCommentDraftReply, error) {
	out := new(CreateCommentDraftReply)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/CreateCommentDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SendComment(ctx context.Context, in *SendCommentReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SendComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SendSubComment(ctx context.Context, in *SendSubCommentReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SendSubComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) RemoveComment(ctx context.Context, in *RemoveCommentReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/RemoveComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) RemoveSubComment(ctx context.Context, in *RemoveSubCommentReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/RemoveSubComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetCommentAgree(ctx context.Context, in *SetCommentAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetCommentAgree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) SetSubCommentAgree(ctx context.Context, in *SetSubCommentAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/SetSubCommentAgree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) CancelCommentAgree(ctx context.Context, in *CancelCommentAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/CancelCommentAgree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bffClient) CancelSubCommentAgree(ctx context.Context, in *CancelSubCommentAgreeReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bff.v1.Bff/CancelSubCommentAgree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BffServer is the server API for Bff service.
// All implementations must embed UnimplementedBffServer
// for forward compatibility
type BffServer interface {
	UserRegister(context.Context, *UserRegisterReq) (*emptypb.Empty, error)
	LoginByPassword(context.Context, *LoginByPasswordReq) (*LoginReply, error)
	LoginByCode(context.Context, *LoginByCodeReq) (*LoginReply, error)
	LoginByWeChat(context.Context, *LoginByWeChatReq) (*LoginReply, error)
	LoginByGithub(context.Context, *LoginByGithubReq) (*LoginReply, error)
	LoginPasswordReset(context.Context, *LoginPasswordResetReq) (*emptypb.Empty, error)
	SendPhoneCode(context.Context, *SendPhoneCodeReq) (*emptypb.Empty, error)
	SendEmailCode(context.Context, *SendEmailCodeReq) (*emptypb.Empty, error)
	GetCosSessionKey(context.Context, *emptypb.Empty) (*GetCosSessionKeyReply, error)
	GetAvatarReview(context.Context, *GetAvatarReviewReq) (*GetAvatarReviewReply, error)
	GetCoverReview(context.Context, *GetCoverReviewReq) (*GetCoverReviewReply, error)
	GetAccount(context.Context, *emptypb.Empty) (*GetAccountReply, error)
	GetProfile(context.Context, *emptypb.Empty) (*GetProfileReply, error)
	GetProfileList(context.Context, *GetProfileListReq) (*GetProfileListReply, error)
	GetUserInfo(context.Context, *emptypb.Empty) (*GetUserInfoReply, error)
	GetUserInfoVisitor(context.Context, *GetUserInfoVisitorReq) (*GetUserInfoReply, error)
	GetUserFollow(context.Context, *GetUserFollowReq) (*GetUserFollowReply, error)
	GetUserFollows(context.Context, *emptypb.Empty) (*GetUserFollowsReply, error)
	GetFollowList(context.Context, *GetFollowListReq) (*GetFollowListReply, error)
	GetFollowListCount(context.Context, *GetFollowListCountReq) (*GetFollowListCountReply, error)
	GetFollowedList(context.Context, *GetFollowedListReq) (*GetFollowedListReply, error)
	GetFollowedListCount(context.Context, *GetFollowedListCountReq) (*GetFollowedListCountReply, error)
	GetProfileUpdate(context.Context, *emptypb.Empty) (*GetProfileUpdateReply, error)
	GetUserSearch(context.Context, *GetUserSearchReq) (*GetUserSearchReply, error)
	SetProfileUpdate(context.Context, *SetProfileUpdateReq) (*emptypb.Empty, error)
	SetUserPhone(context.Context, *SetUserPhoneReq) (*emptypb.Empty, error)
	SetUserEmail(context.Context, *SetUserEmailReq) (*emptypb.Empty, error)
	SetUserPassword(context.Context, *SetUserPasswordReq) (*emptypb.Empty, error)
	SetUserFollow(context.Context, *SetUserFollowReq) (*emptypb.Empty, error)
	CancelUserFollow(context.Context, *CancelUserFollowReq) (*emptypb.Empty, error)
	ChangeUserPassword(context.Context, *ChangeUserPasswordReq) (*emptypb.Empty, error)
	UnbindUserPhone(context.Context, *UnbindUserPhoneReq) (*emptypb.Empty, error)
	UnbindUserEmail(context.Context, *UnbindUserEmailReq) (*emptypb.Empty, error)
	// -------------------------creation----------------------------
	GetLeaderBoard(context.Context, *emptypb.Empty) (*GetLeaderBoardReply, error)
	GetCollectArticleList(context.Context, *GetCollectArticleListReq) (*GetArticleListReply, error)
	GetCollectArticleCount(context.Context, *GetCollectArticleCountReq) (*GetCollectArticleCountReply, error)
	GetCollectTalkList(context.Context, *GetCollectTalkListReq) (*GetTalkListReply, error)
	GetCollectTalkCount(context.Context, *GetCollectTalkCountReq) (*GetCollectTalkCountReply, error)
	GetCollectColumnList(context.Context, *GetCollectColumnListReq) (*GetColumnListReply, error)
	GetCollectColumnCount(context.Context, *GetCollectColumnCountReq) (*GetCollectColumnCountReply, error)
	GetCollections(context.Context, *GetCollectionsReq) (*GetCollectionsReply, error)
	GetCollectionsList(context.Context, *GetCollectionsListReq) (*GetCollectionsListReply, error)
	GetCollectionsListAll(context.Context, *emptypb.Empty) (*GetCollectionsListReply, error)
	GetCollectionsCount(context.Context, *emptypb.Empty) (*GetCollectionsCountReply, error)
	GetCollectionsListByVisitor(context.Context, *GetCollectionsListByVisitorReq) (*GetCollectionsListReply, error)
	GetCollectionsVisitorCount(context.Context, *GetCollectionsVisitorCountReq) (*GetCollectionsCountReply, error)
	GetLastCollectionsDraft(context.Context, *emptypb.Empty) (*GetLastCollectionsDraftReply, error)
	GetCollectionsContentReview(context.Context, *GetCollectionsContentReviewReq) (*GetCollectionsContentReviewReply, error)
	GetUserTimeLineListVisitor(context.Context, *GetUserTimeLineListReq) (*GetUserTimeLineListReply, error)
	CreateCollectionsDraft(context.Context, *emptypb.Empty) (*CreateCollectionsDraftReply, error)
	SendCollections(context.Context, *SendCollectionsReq) (*emptypb.Empty, error)
	SendCollectionsEdit(context.Context, *SendCollectionsEditReq) (*emptypb.Empty, error)
	DeleteCollections(context.Context, *DeleteCollectionsReq) (*emptypb.Empty, error)
	GetArticleList(context.Context, *GetArticleListReq) (*GetArticleListReply, error)
	GetArticleListHot(context.Context, *GetArticleListHotReq) (*GetArticleListHotReply, error)
	GetColumnArticleList(context.Context, *GetColumnArticleListReq) (*GetArticleListReply, error)
	GetArticleCount(context.Context, *emptypb.Empty) (*GetArticleCountReply, error)
	GetArticleCountVisitor(context.Context, *GetArticleCountVisitorReq) (*GetArticleCountReply, error)
	GetUserArticleList(context.Context, *GetUserArticleListReq) (*GetArticleListReply, error)
	GetUserArticleListSimple(context.Context, *GetUserArticleListSimpleReq) (*GetArticleListReply, error)
	GetUserArticleListVisitor(context.Context, *GetUserArticleListVisitorReq) (*GetArticleListReply, error)
	GetUserArticleListAll(context.Context, *emptypb.Empty) (*GetArticleListReply, error)
	GetArticleStatistic(context.Context, *GetArticleStatisticReq) (*GetArticleStatisticReply, error)
	GetUserArticleAgree(context.Context, *emptypb.Empty) (*GetUserArticleAgreeReply, error)
	GetUserArticleCollect(context.Context, *emptypb.Empty) (*GetUserArticleCollectReply, error)
	GetArticleListStatistic(context.Context, *GetArticleListStatisticReq) (*GetArticleListStatisticReply, error)
	GetLastArticleDraft(context.Context, *emptypb.Empty) (*GetLastArticleDraftReply, error)
	GetArticleSearch(context.Context, *GetArticleSearchReq) (*GetArticleSearchReply, error)
	GetArticleImageReview(context.Context, *GetArticleImageReviewReq) (*GetArticleImageReviewReply, error)
	GetArticleContentReview(context.Context, *GetArticleContentReviewReq) (*GetArticleContentReviewReply, error)
	CreateArticleDraft(context.Context, *emptypb.Empty) (*CreateArticleDraftReply, error)
	ArticleDraftMark(context.Context, *ArticleDraftMarkReq) (*emptypb.Empty, error)
	GetArticleDraftList(context.Context, *emptypb.Empty) (*GetArticleDraftListReply, error)
	SendArticle(context.Context, *SendArticleReq) (*emptypb.Empty, error)
	SendArticleEdit(context.Context, *SendArticleEditReq) (*emptypb.Empty, error)
	DeleteArticle(context.Context, *DeleteArticleReq) (*emptypb.Empty, error)
	SetArticleAgree(context.Context, *SetArticleAgreeReq) (*emptypb.Empty, error)
	SetArticleView(context.Context, *SetArticleViewReq) (*emptypb.Empty, error)
	SetArticleCollect(context.Context, *SetArticleCollectReq) (*emptypb.Empty, error)
	CancelArticleAgree(context.Context, *CancelArticleAgreeReq) (*emptypb.Empty, error)
	CancelArticleCollect(context.Context, *CancelArticleCollectReq) (*emptypb.Empty, error)
	ArticleStatisticJudge(context.Context, *ArticleStatisticJudgeReq) (*ArticleStatisticJudgeReply, error)
	GetTalkList(context.Context, *GetTalkListReq) (*GetTalkListReply, error)
	GetTalkListHot(context.Context, *GetTalkListHotReq) (*GetTalkListHotReply, error)
	GetTalkListStatistic(context.Context, *GetTalkListStatisticReq) (*GetTalkListStatisticReply, error)
	GetUserTalkList(context.Context, *GetUserTalkListReq) (*GetTalkListReply, error)
	GetUserTalkListSimple(context.Context, *GetUserTalkListSimpleReq) (*GetTalkListReply, error)
	GetUserTalkListVisitor(context.Context, *GetUserTalkListVisitorReq) (*GetTalkListReply, error)
	GetTalkCount(context.Context, *emptypb.Empty) (*GetTalkCountReply, error)
	GetTalkCountVisitor(context.Context, *GetTalkCountVisitorReq) (*GetTalkCountReply, error)
	GetTalkStatistic(context.Context, *GetTalkStatisticReq) (*GetTalkStatisticReply, error)
	GetLastTalkDraft(context.Context, *emptypb.Empty) (*GetLastTalkDraftReply, error)
	GetTalkSearch(context.Context, *GetTalkSearchReq) (*GetTalkSearchReply, error)
	GetUserTalkAgree(context.Context, *emptypb.Empty) (*GetUserTalkAgreeReply, error)
	GetUserTalkCollect(context.Context, *emptypb.Empty) (*GetUserTalkCollectReply, error)
	GetTalkImageReview(context.Context, *GetTalkImageReviewReq) (*GetTalkImageReviewReply, error)
	GetTalkContentReview(context.Context, *GetTalkContentReviewReq) (*GetTalkContentReviewReply, error)
	CreateTalkDraft(context.Context, *emptypb.Empty) (*CreateTalkDraftReply, error)
	SendTalk(context.Context, *SendTalkReq) (*emptypb.Empty, error)
	SendTalkEdit(context.Context, *SendTalkEditReq) (*emptypb.Empty, error)
	DeleteTalk(context.Context, *DeleteTalkReq) (*emptypb.Empty, error)
	SetTalkView(context.Context, *SetTalkViewReq) (*emptypb.Empty, error)
	TalkStatisticJudge(context.Context, *TalkStatisticJudgeReq) (*TalkStatisticJudgeReply, error)
	SetTalkAgree(context.Context, *SetTalkAgreeReq) (*emptypb.Empty, error)
	SetTalkCollect(context.Context, *SetTalkCollectReq) (*emptypb.Empty, error)
	CancelTalkAgree(context.Context, *CancelTalkAgreeReq) (*emptypb.Empty, error)
	CancelTalkCollect(context.Context, *CancelTalkCollectReq) (*emptypb.Empty, error)
	GetLastColumnDraft(context.Context, *emptypb.Empty) (*GetLastColumnDraftReply, error)
	CreateColumnDraft(context.Context, *emptypb.Empty) (*CreateColumnDraftReply, error)
	SubscribeColumn(context.Context, *SubscribeColumnReq) (*emptypb.Empty, error)
	CancelSubscribeColumn(context.Context, *CancelSubscribeColumnReq) (*emptypb.Empty, error)
	SubscribeJudge(context.Context, *SubscribeJudgeReq) (*SubscribeJudgeReply, error)
	SendColumn(context.Context, *SendColumnReq) (*emptypb.Empty, error)
	GetSubscribeList(context.Context, *GetSubscribeListReq) (*GetSubscribeListReply, error)
	GetSubscribeListCount(context.Context, *GetSubscribeListCountReq) (*GetSubscribeListCountReply, error)
	GetColumnSubscribes(context.Context, *GetColumnSubscribesReq) (*GetColumnSubscribesReply, error)
	GetColumnList(context.Context, *GetColumnListReq) (*GetColumnListReply, error)
	GetColumnListHot(context.Context, *GetColumnListHotReq) (*GetColumnListHotReply, error)
	GetColumnListStatistic(context.Context, *GetColumnListStatisticReq) (*GetColumnListStatisticReply, error)
	GetUserColumnList(context.Context, *GetUserColumnListReq) (*GetColumnListReply, error)
	GetUserColumnListSimple(context.Context, *GetUserColumnListSimpleReq) (*GetColumnListReply, error)
	GetUserColumnListVisitor(context.Context, *GetUserColumnListVisitorReq) (*GetColumnListReply, error)
	GetColumnCount(context.Context, *emptypb.Empty) (*GetColumnCountReply, error)
	GetColumnCountVisitor(context.Context, *GetColumnCountVisitorReq) (*GetColumnCountReply, error)
	GetColumnSearch(context.Context, *GetColumnSearchReq) (*GetColumnSearchReply, error)
	SendColumnEdit(context.Context, *SendColumnEditReq) (*emptypb.Empty, error)
	DeleteColumn(context.Context, *DeleteColumnReq) (*emptypb.Empty, error)
	GetColumnStatistic(context.Context, *GetColumnStatisticReq) (*GetColumnStatisticReply, error)
	GetUserColumnAgree(context.Context, *emptypb.Empty) (*GetUserColumnAgreeReply, error)
	GetUserColumnCollect(context.Context, *emptypb.Empty) (*GetUserColumnCollectReply, error)
	GetUserSubscribeColumn(context.Context, *emptypb.Empty) (*GetUserSubscribeColumnReply, error)
	GetColumnImageReview(context.Context, *GetColumnImageReviewReq) (*GetColumnImageReviewReply, error)
	GetColumnContentReview(context.Context, *GetColumnContentReviewReq) (*GetColumnContentReviewReply, error)
	ColumnStatisticJudge(context.Context, *ColumnStatisticJudgeReq) (*ColumnStatisticJudgeReply, error)
	SetColumnAgree(context.Context, *SetColumnAgreeReq) (*emptypb.Empty, error)
	CancelColumnAgree(context.Context, *CancelColumnAgreeReq) (*emptypb.Empty, error)
	SetColumnCollect(context.Context, *SetColumnCollectReq) (*emptypb.Empty, error)
	CancelColumnCollect(context.Context, *CancelColumnCollectReq) (*emptypb.Empty, error)
	SetColumnView(context.Context, *SetColumnViewReq) (*emptypb.Empty, error)
	AddColumnIncludes(context.Context, *AddColumnIncludesReq) (*emptypb.Empty, error)
	DeleteColumnIncludes(context.Context, *DeleteColumnIncludesReq) (*emptypb.Empty, error)
	GetNews(context.Context, *GetNewsReq) (*GetNewsReply, error)
	GetAchievementList(context.Context, *GetAchievementListReq) (*GetAchievementListReply, error)
	GetUserAchievement(context.Context, *GetUserAchievementReq) (*GetUserAchievementReply, error)
	GetUserMedal(context.Context, *GetUserMedalReq) (*GetUserMedalReply, error)
	AccessUserMedal(context.Context, *AccessUserMedalReq) (*emptypb.Empty, error)
	GetUserMedalProgress(context.Context, *emptypb.Empty) (*GetUserMedalProgressReply, error)
	SetUserMedal(context.Context, *SetUserMedalReq) (*emptypb.Empty, error)
	CancelUserMedalSet(context.Context, *CancelUserMedalSetReq) (*emptypb.Empty, error)
	GetLastCommentDraft(context.Context, *emptypb.Empty) (*GetLastCommentDraftReply, error)
	GetUserCommentAgree(context.Context, *emptypb.Empty) (*GetUserCommentAgreeReply, error)
	GetCommentUser(context.Context, *emptypb.Empty) (*GetCommentUserReply, error)
	GetCommentList(context.Context, *GetCommentListReq) (*GetCommentListReply, error)
	GetSubCommentList(context.Context, *GetSubCommentListReq) (*GetSubCommentListReply, error)
	GetCommentListHot(context.Context, *GetCommentListReq) (*GetCommentListReply, error)
	GetUserCommentArticleReplyList(context.Context, *GetUserCommentArticleReplyListReq) (*GetUserCommentArticleReplyListReply, error)
	GetUserSubCommentArticleReplyList(context.Context, *GetUserSubCommentArticleReplyListReq) (*GetUserSubCommentArticleReplyListReply, error)
	GetUserCommentTalkReplyList(context.Context, *GetUserCommentTalkReplyListReq) (*GetUserCommentTalkReplyListReply, error)
	GetUserSubCommentTalkReplyList(context.Context, *GetUserSubCommentTalkReplyListReq) (*GetUserSubCommentTalkReplyListReply, error)
	GetUserCommentArticleRepliedList(context.Context, *GetUserCommentArticleRepliedListReq) (*GetUserCommentArticleRepliedListReply, error)
	GetUserSubCommentArticleRepliedList(context.Context, *GetUserSubCommentArticleRepliedListReq) (*GetUserSubCommentArticleRepliedListReply, error)
	GetUserCommentTalkRepliedList(context.Context, *GetUserCommentTalkRepliedListReq) (*GetUserCommentTalkRepliedListReply, error)
	GetUserSubCommentTalkRepliedList(context.Context, *GetUserSubCommentTalkRepliedListReq) (*GetUserSubCommentTalkRepliedListReply, error)
	GetCommentContentReview(context.Context, *GetCommentContentReviewReq) (*GetCommentContentReviewReply, error)
	CreateCommentDraft(context.Context, *emptypb.Empty) (*CreateCommentDraftReply, error)
	SendComment(context.Context, *SendCommentReq) (*emptypb.Empty, error)
	SendSubComment(context.Context, *SendSubCommentReq) (*emptypb.Empty, error)
	RemoveComment(context.Context, *RemoveCommentReq) (*emptypb.Empty, error)
	RemoveSubComment(context.Context, *RemoveSubCommentReq) (*emptypb.Empty, error)
	SetCommentAgree(context.Context, *SetCommentAgreeReq) (*emptypb.Empty, error)
	SetSubCommentAgree(context.Context, *SetSubCommentAgreeReq) (*emptypb.Empty, error)
	CancelCommentAgree(context.Context, *CancelCommentAgreeReq) (*emptypb.Empty, error)
	CancelSubCommentAgree(context.Context, *CancelSubCommentAgreeReq) (*emptypb.Empty, error)
	mustEmbedUnimplementedBffServer()
}

// UnimplementedBffServer must be embedded to have forward compatible implementations.
type UnimplementedBffServer struct {
}

func (UnimplementedBffServer) UserRegister(context.Context, *UserRegisterReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRegister not implemented")
}
func (UnimplementedBffServer) LoginByPassword(context.Context, *LoginByPasswordReq) (*LoginReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginByPassword not implemented")
}
func (UnimplementedBffServer) LoginByCode(context.Context, *LoginByCodeReq) (*LoginReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginByCode not implemented")
}
func (UnimplementedBffServer) LoginByWeChat(context.Context, *LoginByWeChatReq) (*LoginReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginByWeChat not implemented")
}
func (UnimplementedBffServer) LoginByGithub(context.Context, *LoginByGithubReq) (*LoginReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginByGithub not implemented")
}
func (UnimplementedBffServer) LoginPasswordReset(context.Context, *LoginPasswordResetReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginPasswordReset not implemented")
}
func (UnimplementedBffServer) SendPhoneCode(context.Context, *SendPhoneCodeReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendPhoneCode not implemented")
}
func (UnimplementedBffServer) SendEmailCode(context.Context, *SendEmailCodeReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendEmailCode not implemented")
}
func (UnimplementedBffServer) GetCosSessionKey(context.Context, *emptypb.Empty) (*GetCosSessionKeyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCosSessionKey not implemented")
}
func (UnimplementedBffServer) GetAvatarReview(context.Context, *GetAvatarReviewReq) (*GetAvatarReviewReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAvatarReview not implemented")
}
func (UnimplementedBffServer) GetCoverReview(context.Context, *GetCoverReviewReq) (*GetCoverReviewReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCoverReview not implemented")
}
func (UnimplementedBffServer) GetAccount(context.Context, *emptypb.Empty) (*GetAccountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccount not implemented")
}
func (UnimplementedBffServer) GetProfile(context.Context, *emptypb.Empty) (*GetProfileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProfile not implemented")
}
func (UnimplementedBffServer) GetProfileList(context.Context, *GetProfileListReq) (*GetProfileListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProfileList not implemented")
}
func (UnimplementedBffServer) GetUserInfo(context.Context, *emptypb.Empty) (*GetUserInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfo not implemented")
}
func (UnimplementedBffServer) GetUserInfoVisitor(context.Context, *GetUserInfoVisitorReq) (*GetUserInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfoVisitor not implemented")
}
func (UnimplementedBffServer) GetUserFollow(context.Context, *GetUserFollowReq) (*GetUserFollowReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserFollow not implemented")
}
func (UnimplementedBffServer) GetUserFollows(context.Context, *emptypb.Empty) (*GetUserFollowsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserFollows not implemented")
}
func (UnimplementedBffServer) GetFollowList(context.Context, *GetFollowListReq) (*GetFollowListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowList not implemented")
}
func (UnimplementedBffServer) GetFollowListCount(context.Context, *GetFollowListCountReq) (*GetFollowListCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowListCount not implemented")
}
func (UnimplementedBffServer) GetFollowedList(context.Context, *GetFollowedListReq) (*GetFollowedListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowedList not implemented")
}
func (UnimplementedBffServer) GetFollowedListCount(context.Context, *GetFollowedListCountReq) (*GetFollowedListCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowedListCount not implemented")
}
func (UnimplementedBffServer) GetProfileUpdate(context.Context, *emptypb.Empty) (*GetProfileUpdateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProfileUpdate not implemented")
}
func (UnimplementedBffServer) GetUserSearch(context.Context, *GetUserSearchReq) (*GetUserSearchReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSearch not implemented")
}
func (UnimplementedBffServer) SetProfileUpdate(context.Context, *SetProfileUpdateReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetProfileUpdate not implemented")
}
func (UnimplementedBffServer) SetUserPhone(context.Context, *SetUserPhoneReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserPhone not implemented")
}
func (UnimplementedBffServer) SetUserEmail(context.Context, *SetUserEmailReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserEmail not implemented")
}
func (UnimplementedBffServer) SetUserPassword(context.Context, *SetUserPasswordReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserPassword not implemented")
}
func (UnimplementedBffServer) SetUserFollow(context.Context, *SetUserFollowReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserFollow not implemented")
}
func (UnimplementedBffServer) CancelUserFollow(context.Context, *CancelUserFollowReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelUserFollow not implemented")
}
func (UnimplementedBffServer) ChangeUserPassword(context.Context, *ChangeUserPasswordReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeUserPassword not implemented")
}
func (UnimplementedBffServer) UnbindUserPhone(context.Context, *UnbindUserPhoneReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnbindUserPhone not implemented")
}
func (UnimplementedBffServer) UnbindUserEmail(context.Context, *UnbindUserEmailReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnbindUserEmail not implemented")
}
func (UnimplementedBffServer) GetLeaderBoard(context.Context, *emptypb.Empty) (*GetLeaderBoardReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLeaderBoard not implemented")
}
func (UnimplementedBffServer) GetCollectArticleList(context.Context, *GetCollectArticleListReq) (*GetArticleListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectArticleList not implemented")
}
func (UnimplementedBffServer) GetCollectArticleCount(context.Context, *GetCollectArticleCountReq) (*GetCollectArticleCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectArticleCount not implemented")
}
func (UnimplementedBffServer) GetCollectTalkList(context.Context, *GetCollectTalkListReq) (*GetTalkListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectTalkList not implemented")
}
func (UnimplementedBffServer) GetCollectTalkCount(context.Context, *GetCollectTalkCountReq) (*GetCollectTalkCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectTalkCount not implemented")
}
func (UnimplementedBffServer) GetCollectColumnList(context.Context, *GetCollectColumnListReq) (*GetColumnListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectColumnList not implemented")
}
func (UnimplementedBffServer) GetCollectColumnCount(context.Context, *GetCollectColumnCountReq) (*GetCollectColumnCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectColumnCount not implemented")
}
func (UnimplementedBffServer) GetCollections(context.Context, *GetCollectionsReq) (*GetCollectionsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollections not implemented")
}
func (UnimplementedBffServer) GetCollectionsList(context.Context, *GetCollectionsListReq) (*GetCollectionsListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectionsList not implemented")
}
func (UnimplementedBffServer) GetCollectionsListAll(context.Context, *emptypb.Empty) (*GetCollectionsListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectionsListAll not implemented")
}
func (UnimplementedBffServer) GetCollectionsCount(context.Context, *emptypb.Empty) (*GetCollectionsCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectionsCount not implemented")
}
func (UnimplementedBffServer) GetCollectionsListByVisitor(context.Context, *GetCollectionsListByVisitorReq) (*GetCollectionsListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectionsListByVisitor not implemented")
}
func (UnimplementedBffServer) GetCollectionsVisitorCount(context.Context, *GetCollectionsVisitorCountReq) (*GetCollectionsCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectionsVisitorCount not implemented")
}
func (UnimplementedBffServer) GetLastCollectionsDraft(context.Context, *emptypb.Empty) (*GetLastCollectionsDraftReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLastCollectionsDraft not implemented")
}
func (UnimplementedBffServer) GetCollectionsContentReview(context.Context, *GetCollectionsContentReviewReq) (*GetCollectionsContentReviewReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectionsContentReview not implemented")
}
func (UnimplementedBffServer) GetUserTimeLineListVisitor(context.Context, *GetUserTimeLineListReq) (*GetUserTimeLineListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserTimeLineListVisitor not implemented")
}
func (UnimplementedBffServer) CreateCollectionsDraft(context.Context, *emptypb.Empty) (*CreateCollectionsDraftReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCollectionsDraft not implemented")
}
func (UnimplementedBffServer) SendCollections(context.Context, *SendCollectionsReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendCollections not implemented")
}
func (UnimplementedBffServer) SendCollectionsEdit(context.Context, *SendCollectionsEditReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendCollectionsEdit not implemented")
}
func (UnimplementedBffServer) DeleteCollections(context.Context, *DeleteCollectionsReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCollections not implemented")
}
func (UnimplementedBffServer) GetArticleList(context.Context, *GetArticleListReq) (*GetArticleListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArticleList not implemented")
}
func (UnimplementedBffServer) GetArticleListHot(context.Context, *GetArticleListHotReq) (*GetArticleListHotReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArticleListHot not implemented")
}
func (UnimplementedBffServer) GetColumnArticleList(context.Context, *GetColumnArticleListReq) (*GetArticleListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetColumnArticleList not implemented")
}
func (UnimplementedBffServer) GetArticleCount(context.Context, *emptypb.Empty) (*GetArticleCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArticleCount not implemented")
}
func (UnimplementedBffServer) GetArticleCountVisitor(context.Context, *GetArticleCountVisitorReq) (*GetArticleCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArticleCountVisitor not implemented")
}
func (UnimplementedBffServer) GetUserArticleList(context.Context, *GetUserArticleListReq) (*GetArticleListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserArticleList not implemented")
}
func (UnimplementedBffServer) GetUserArticleListSimple(context.Context, *GetUserArticleListSimpleReq) (*GetArticleListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserArticleListSimple not implemented")
}
func (UnimplementedBffServer) GetUserArticleListVisitor(context.Context, *GetUserArticleListVisitorReq) (*GetArticleListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserArticleListVisitor not implemented")
}
func (UnimplementedBffServer) GetUserArticleListAll(context.Context, *emptypb.Empty) (*GetArticleListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserArticleListAll not implemented")
}
func (UnimplementedBffServer) GetArticleStatistic(context.Context, *GetArticleStatisticReq) (*GetArticleStatisticReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArticleStatistic not implemented")
}
func (UnimplementedBffServer) GetUserArticleAgree(context.Context, *emptypb.Empty) (*GetUserArticleAgreeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserArticleAgree not implemented")
}
func (UnimplementedBffServer) GetUserArticleCollect(context.Context, *emptypb.Empty) (*GetUserArticleCollectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserArticleCollect not implemented")
}
func (UnimplementedBffServer) GetArticleListStatistic(context.Context, *GetArticleListStatisticReq) (*GetArticleListStatisticReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArticleListStatistic not implemented")
}
func (UnimplementedBffServer) GetLastArticleDraft(context.Context, *emptypb.Empty) (*GetLastArticleDraftReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLastArticleDraft not implemented")
}
func (UnimplementedBffServer) GetArticleSearch(context.Context, *GetArticleSearchReq) (*GetArticleSearchReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArticleSearch not implemented")
}
func (UnimplementedBffServer) GetArticleImageReview(context.Context, *GetArticleImageReviewReq) (*GetArticleImageReviewReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArticleImageReview not implemented")
}
func (UnimplementedBffServer) GetArticleContentReview(context.Context, *GetArticleContentReviewReq) (*GetArticleContentReviewReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArticleContentReview not implemented")
}
func (UnimplementedBffServer) CreateArticleDraft(context.Context, *emptypb.Empty) (*CreateArticleDraftReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateArticleDraft not implemented")
}
func (UnimplementedBffServer) ArticleDraftMark(context.Context, *ArticleDraftMarkReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArticleDraftMark not implemented")
}
func (UnimplementedBffServer) GetArticleDraftList(context.Context, *emptypb.Empty) (*GetArticleDraftListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArticleDraftList not implemented")
}
func (UnimplementedBffServer) SendArticle(context.Context, *SendArticleReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendArticle not implemented")
}
func (UnimplementedBffServer) SendArticleEdit(context.Context, *SendArticleEditReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendArticleEdit not implemented")
}
func (UnimplementedBffServer) DeleteArticle(context.Context, *DeleteArticleReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteArticle not implemented")
}
func (UnimplementedBffServer) SetArticleAgree(context.Context, *SetArticleAgreeReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetArticleAgree not implemented")
}
func (UnimplementedBffServer) SetArticleView(context.Context, *SetArticleViewReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetArticleView not implemented")
}
func (UnimplementedBffServer) SetArticleCollect(context.Context, *SetArticleCollectReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetArticleCollect not implemented")
}
func (UnimplementedBffServer) CancelArticleAgree(context.Context, *CancelArticleAgreeReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelArticleAgree not implemented")
}
func (UnimplementedBffServer) CancelArticleCollect(context.Context, *CancelArticleCollectReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelArticleCollect not implemented")
}
func (UnimplementedBffServer) ArticleStatisticJudge(context.Context, *ArticleStatisticJudgeReq) (*ArticleStatisticJudgeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArticleStatisticJudge not implemented")
}
func (UnimplementedBffServer) GetTalkList(context.Context, *GetTalkListReq) (*GetTalkListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTalkList not implemented")
}
func (UnimplementedBffServer) GetTalkListHot(context.Context, *GetTalkListHotReq) (*GetTalkListHotReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTalkListHot not implemented")
}
func (UnimplementedBffServer) GetTalkListStatistic(context.Context, *GetTalkListStatisticReq) (*GetTalkListStatisticReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTalkListStatistic not implemented")
}
func (UnimplementedBffServer) GetUserTalkList(context.Context, *GetUserTalkListReq) (*GetTalkListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserTalkList not implemented")
}
func (UnimplementedBffServer) GetUserTalkListSimple(context.Context, *GetUserTalkListSimpleReq) (*GetTalkListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserTalkListSimple not implemented")
}
func (UnimplementedBffServer) GetUserTalkListVisitor(context.Context, *GetUserTalkListVisitorReq) (*GetTalkListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserTalkListVisitor not implemented")
}
func (UnimplementedBffServer) GetTalkCount(context.Context, *emptypb.Empty) (*GetTalkCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTalkCount not implemented")
}
func (UnimplementedBffServer) GetTalkCountVisitor(context.Context, *GetTalkCountVisitorReq) (*GetTalkCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTalkCountVisitor not implemented")
}
func (UnimplementedBffServer) GetTalkStatistic(context.Context, *GetTalkStatisticReq) (*GetTalkStatisticReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTalkStatistic not implemented")
}
func (UnimplementedBffServer) GetLastTalkDraft(context.Context, *emptypb.Empty) (*GetLastTalkDraftReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLastTalkDraft not implemented")
}
func (UnimplementedBffServer) GetTalkSearch(context.Context, *GetTalkSearchReq) (*GetTalkSearchReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTalkSearch not implemented")
}
func (UnimplementedBffServer) GetUserTalkAgree(context.Context, *emptypb.Empty) (*GetUserTalkAgreeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserTalkAgree not implemented")
}
func (UnimplementedBffServer) GetUserTalkCollect(context.Context, *emptypb.Empty) (*GetUserTalkCollectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserTalkCollect not implemented")
}
func (UnimplementedBffServer) GetTalkImageReview(context.Context, *GetTalkImageReviewReq) (*GetTalkImageReviewReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTalkImageReview not implemented")
}
func (UnimplementedBffServer) GetTalkContentReview(context.Context, *GetTalkContentReviewReq) (*GetTalkContentReviewReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTalkContentReview not implemented")
}
func (UnimplementedBffServer) CreateTalkDraft(context.Context, *emptypb.Empty) (*CreateTalkDraftReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTalkDraft not implemented")
}
func (UnimplementedBffServer) SendTalk(context.Context, *SendTalkReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendTalk not implemented")
}
func (UnimplementedBffServer) SendTalkEdit(context.Context, *SendTalkEditReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendTalkEdit not implemented")
}
func (UnimplementedBffServer) DeleteTalk(context.Context, *DeleteTalkReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTalk not implemented")
}
func (UnimplementedBffServer) SetTalkView(context.Context, *SetTalkViewReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTalkView not implemented")
}
func (UnimplementedBffServer) TalkStatisticJudge(context.Context, *TalkStatisticJudgeReq) (*TalkStatisticJudgeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TalkStatisticJudge not implemented")
}
func (UnimplementedBffServer) SetTalkAgree(context.Context, *SetTalkAgreeReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTalkAgree not implemented")
}
func (UnimplementedBffServer) SetTalkCollect(context.Context, *SetTalkCollectReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTalkCollect not implemented")
}
func (UnimplementedBffServer) CancelTalkAgree(context.Context, *CancelTalkAgreeReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelTalkAgree not implemented")
}
func (UnimplementedBffServer) CancelTalkCollect(context.Context, *CancelTalkCollectReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelTalkCollect not implemented")
}
func (UnimplementedBffServer) GetLastColumnDraft(context.Context, *emptypb.Empty) (*GetLastColumnDraftReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLastColumnDraft not implemented")
}
func (UnimplementedBffServer) CreateColumnDraft(context.Context, *emptypb.Empty) (*CreateColumnDraftReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateColumnDraft not implemented")
}
func (UnimplementedBffServer) SubscribeColumn(context.Context, *SubscribeColumnReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubscribeColumn not implemented")
}
func (UnimplementedBffServer) CancelSubscribeColumn(context.Context, *CancelSubscribeColumnReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelSubscribeColumn not implemented")
}
func (UnimplementedBffServer) SubscribeJudge(context.Context, *SubscribeJudgeReq) (*SubscribeJudgeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubscribeJudge not implemented")
}
func (UnimplementedBffServer) SendColumn(context.Context, *SendColumnReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendColumn not implemented")
}
func (UnimplementedBffServer) GetSubscribeList(context.Context, *GetSubscribeListReq) (*GetSubscribeListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubscribeList not implemented")
}
func (UnimplementedBffServer) GetSubscribeListCount(context.Context, *GetSubscribeListCountReq) (*GetSubscribeListCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubscribeListCount not implemented")
}
func (UnimplementedBffServer) GetColumnSubscribes(context.Context, *GetColumnSubscribesReq) (*GetColumnSubscribesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetColumnSubscribes not implemented")
}
func (UnimplementedBffServer) GetColumnList(context.Context, *GetColumnListReq) (*GetColumnListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetColumnList not implemented")
}
func (UnimplementedBffServer) GetColumnListHot(context.Context, *GetColumnListHotReq) (*GetColumnListHotReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetColumnListHot not implemented")
}
func (UnimplementedBffServer) GetColumnListStatistic(context.Context, *GetColumnListStatisticReq) (*GetColumnListStatisticReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetColumnListStatistic not implemented")
}
func (UnimplementedBffServer) GetUserColumnList(context.Context, *GetUserColumnListReq) (*GetColumnListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserColumnList not implemented")
}
func (UnimplementedBffServer) GetUserColumnListSimple(context.Context, *GetUserColumnListSimpleReq) (*GetColumnListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserColumnListSimple not implemented")
}
func (UnimplementedBffServer) GetUserColumnListVisitor(context.Context, *GetUserColumnListVisitorReq) (*GetColumnListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserColumnListVisitor not implemented")
}
func (UnimplementedBffServer) GetColumnCount(context.Context, *emptypb.Empty) (*GetColumnCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetColumnCount not implemented")
}
func (UnimplementedBffServer) GetColumnCountVisitor(context.Context, *GetColumnCountVisitorReq) (*GetColumnCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetColumnCountVisitor not implemented")
}
func (UnimplementedBffServer) GetColumnSearch(context.Context, *GetColumnSearchReq) (*GetColumnSearchReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetColumnSearch not implemented")
}
func (UnimplementedBffServer) SendColumnEdit(context.Context, *SendColumnEditReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendColumnEdit not implemented")
}
func (UnimplementedBffServer) DeleteColumn(context.Context, *DeleteColumnReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteColumn not implemented")
}
func (UnimplementedBffServer) GetColumnStatistic(context.Context, *GetColumnStatisticReq) (*GetColumnStatisticReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetColumnStatistic not implemented")
}
func (UnimplementedBffServer) GetUserColumnAgree(context.Context, *emptypb.Empty) (*GetUserColumnAgreeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserColumnAgree not implemented")
}
func (UnimplementedBffServer) GetUserColumnCollect(context.Context, *emptypb.Empty) (*GetUserColumnCollectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserColumnCollect not implemented")
}
func (UnimplementedBffServer) GetUserSubscribeColumn(context.Context, *emptypb.Empty) (*GetUserSubscribeColumnReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSubscribeColumn not implemented")
}
func (UnimplementedBffServer) GetColumnImageReview(context.Context, *GetColumnImageReviewReq) (*GetColumnImageReviewReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetColumnImageReview not implemented")
}
func (UnimplementedBffServer) GetColumnContentReview(context.Context, *GetColumnContentReviewReq) (*GetColumnContentReviewReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetColumnContentReview not implemented")
}
func (UnimplementedBffServer) ColumnStatisticJudge(context.Context, *ColumnStatisticJudgeReq) (*ColumnStatisticJudgeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ColumnStatisticJudge not implemented")
}
func (UnimplementedBffServer) SetColumnAgree(context.Context, *SetColumnAgreeReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetColumnAgree not implemented")
}
func (UnimplementedBffServer) CancelColumnAgree(context.Context, *CancelColumnAgreeReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelColumnAgree not implemented")
}
func (UnimplementedBffServer) SetColumnCollect(context.Context, *SetColumnCollectReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetColumnCollect not implemented")
}
func (UnimplementedBffServer) CancelColumnCollect(context.Context, *CancelColumnCollectReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelColumnCollect not implemented")
}
func (UnimplementedBffServer) SetColumnView(context.Context, *SetColumnViewReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetColumnView not implemented")
}
func (UnimplementedBffServer) AddColumnIncludes(context.Context, *AddColumnIncludesReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddColumnIncludes not implemented")
}
func (UnimplementedBffServer) DeleteColumnIncludes(context.Context, *DeleteColumnIncludesReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteColumnIncludes not implemented")
}
func (UnimplementedBffServer) GetNews(context.Context, *GetNewsReq) (*GetNewsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNews not implemented")
}
func (UnimplementedBffServer) GetAchievementList(context.Context, *GetAchievementListReq) (*GetAchievementListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAchievementList not implemented")
}
func (UnimplementedBffServer) GetUserAchievement(context.Context, *GetUserAchievementReq) (*GetUserAchievementReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserAchievement not implemented")
}
func (UnimplementedBffServer) GetUserMedal(context.Context, *GetUserMedalReq) (*GetUserMedalReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserMedal not implemented")
}
func (UnimplementedBffServer) AccessUserMedal(context.Context, *AccessUserMedalReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccessUserMedal not implemented")
}
func (UnimplementedBffServer) GetUserMedalProgress(context.Context, *emptypb.Empty) (*GetUserMedalProgressReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserMedalProgress not implemented")
}
func (UnimplementedBffServer) SetUserMedal(context.Context, *SetUserMedalReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserMedal not implemented")
}
func (UnimplementedBffServer) CancelUserMedalSet(context.Context, *CancelUserMedalSetReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelUserMedalSet not implemented")
}
func (UnimplementedBffServer) GetLastCommentDraft(context.Context, *emptypb.Empty) (*GetLastCommentDraftReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLastCommentDraft not implemented")
}
func (UnimplementedBffServer) GetUserCommentAgree(context.Context, *emptypb.Empty) (*GetUserCommentAgreeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserCommentAgree not implemented")
}
func (UnimplementedBffServer) GetCommentUser(context.Context, *emptypb.Empty) (*GetCommentUserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommentUser not implemented")
}
func (UnimplementedBffServer) GetCommentList(context.Context, *GetCommentListReq) (*GetCommentListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommentList not implemented")
}
func (UnimplementedBffServer) GetSubCommentList(context.Context, *GetSubCommentListReq) (*GetSubCommentListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubCommentList not implemented")
}
func (UnimplementedBffServer) GetCommentListHot(context.Context, *GetCommentListReq) (*GetCommentListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommentListHot not implemented")
}
func (UnimplementedBffServer) GetUserCommentArticleReplyList(context.Context, *GetUserCommentArticleReplyListReq) (*GetUserCommentArticleReplyListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserCommentArticleReplyList not implemented")
}
func (UnimplementedBffServer) GetUserSubCommentArticleReplyList(context.Context, *GetUserSubCommentArticleReplyListReq) (*GetUserSubCommentArticleReplyListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSubCommentArticleReplyList not implemented")
}
func (UnimplementedBffServer) GetUserCommentTalkReplyList(context.Context, *GetUserCommentTalkReplyListReq) (*GetUserCommentTalkReplyListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserCommentTalkReplyList not implemented")
}
func (UnimplementedBffServer) GetUserSubCommentTalkReplyList(context.Context, *GetUserSubCommentTalkReplyListReq) (*GetUserSubCommentTalkReplyListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSubCommentTalkReplyList not implemented")
}
func (UnimplementedBffServer) GetUserCommentArticleRepliedList(context.Context, *GetUserCommentArticleRepliedListReq) (*GetUserCommentArticleRepliedListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserCommentArticleRepliedList not implemented")
}
func (UnimplementedBffServer) GetUserSubCommentArticleRepliedList(context.Context, *GetUserSubCommentArticleRepliedListReq) (*GetUserSubCommentArticleRepliedListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSubCommentArticleRepliedList not implemented")
}
func (UnimplementedBffServer) GetUserCommentTalkRepliedList(context.Context, *GetUserCommentTalkRepliedListReq) (*GetUserCommentTalkRepliedListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserCommentTalkRepliedList not implemented")
}
func (UnimplementedBffServer) GetUserSubCommentTalkRepliedList(context.Context, *GetUserSubCommentTalkRepliedListReq) (*GetUserSubCommentTalkRepliedListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserSubCommentTalkRepliedList not implemented")
}
func (UnimplementedBffServer) GetCommentContentReview(context.Context, *GetCommentContentReviewReq) (*GetCommentContentReviewReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommentContentReview not implemented")
}
func (UnimplementedBffServer) CreateCommentDraft(context.Context, *emptypb.Empty) (*CreateCommentDraftReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCommentDraft not implemented")
}
func (UnimplementedBffServer) SendComment(context.Context, *SendCommentReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendComment not implemented")
}
func (UnimplementedBffServer) SendSubComment(context.Context, *SendSubCommentReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendSubComment not implemented")
}
func (UnimplementedBffServer) RemoveComment(context.Context, *RemoveCommentReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveComment not implemented")
}
func (UnimplementedBffServer) RemoveSubComment(context.Context, *RemoveSubCommentReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSubComment not implemented")
}
func (UnimplementedBffServer) SetCommentAgree(context.Context, *SetCommentAgreeReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCommentAgree not implemented")
}
func (UnimplementedBffServer) SetSubCommentAgree(context.Context, *SetSubCommentAgreeReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSubCommentAgree not implemented")
}
func (UnimplementedBffServer) CancelCommentAgree(context.Context, *CancelCommentAgreeReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelCommentAgree not implemented")
}
func (UnimplementedBffServer) CancelSubCommentAgree(context.Context, *CancelSubCommentAgreeReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelSubCommentAgree not implemented")
}
func (UnimplementedBffServer) mustEmbedUnimplementedBffServer() {}

// UnsafeBffServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BffServer will
// result in compilation errors.
type UnsafeBffServer interface {
	mustEmbedUnimplementedBffServer()
}

func RegisterBffServer(s grpc.ServiceRegistrar, srv BffServer) {
	s.RegisterService(&Bff_ServiceDesc, srv)
}

func _Bff_UserRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRegisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).UserRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/UserRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).UserRegister(ctx, req.(*UserRegisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_LoginByPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginByPasswordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).LoginByPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/LoginByPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).LoginByPassword(ctx, req.(*LoginByPasswordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_LoginByCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginByCodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).LoginByCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/LoginByCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).LoginByCode(ctx, req.(*LoginByCodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_LoginByWeChat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginByWeChatReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).LoginByWeChat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/LoginByWeChat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).LoginByWeChat(ctx, req.(*LoginByWeChatReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_LoginByGithub_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginByGithubReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).LoginByGithub(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/LoginByGithub",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).LoginByGithub(ctx, req.(*LoginByGithubReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_LoginPasswordReset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginPasswordResetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).LoginPasswordReset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/LoginPasswordReset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).LoginPasswordReset(ctx, req.(*LoginPasswordResetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SendPhoneCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendPhoneCodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SendPhoneCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SendPhoneCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SendPhoneCode(ctx, req.(*SendPhoneCodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SendEmailCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendEmailCodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SendEmailCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SendEmailCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SendEmailCode(ctx, req.(*SendEmailCodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCosSessionKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCosSessionKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCosSessionKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCosSessionKey(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetAvatarReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAvatarReviewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetAvatarReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetAvatarReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetAvatarReview(ctx, req.(*GetAvatarReviewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCoverReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCoverReviewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCoverReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCoverReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCoverReview(ctx, req.(*GetCoverReviewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetAccount(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetProfile(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetProfileList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProfileListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetProfileList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetProfileList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetProfileList(ctx, req.(*GetProfileListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserInfo(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserInfoVisitor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoVisitorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserInfoVisitor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserInfoVisitor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserInfoVisitor(ctx, req.(*GetUserInfoVisitorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserFollow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserFollowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserFollow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserFollow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserFollow(ctx, req.(*GetUserFollowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserFollows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserFollows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserFollows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserFollows(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetFollowList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFollowListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetFollowList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetFollowList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetFollowList(ctx, req.(*GetFollowListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetFollowListCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFollowListCountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetFollowListCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetFollowListCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetFollowListCount(ctx, req.(*GetFollowListCountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetFollowedList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFollowedListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetFollowedList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetFollowedList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetFollowedList(ctx, req.(*GetFollowedListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetFollowedListCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFollowedListCountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetFollowedListCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetFollowedListCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetFollowedListCount(ctx, req.(*GetFollowedListCountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetProfileUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetProfileUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetProfileUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetProfileUpdate(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserSearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserSearch(ctx, req.(*GetUserSearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetProfileUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetProfileUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetProfileUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetProfileUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetProfileUpdate(ctx, req.(*SetProfileUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetUserPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserPhoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetUserPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetUserPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetUserPhone(ctx, req.(*SetUserPhoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetUserEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserEmailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetUserEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetUserEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetUserEmail(ctx, req.(*SetUserEmailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetUserPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserPasswordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetUserPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetUserPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetUserPassword(ctx, req.(*SetUserPasswordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetUserFollow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserFollowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetUserFollow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetUserFollow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetUserFollow(ctx, req.(*SetUserFollowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_CancelUserFollow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelUserFollowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).CancelUserFollow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/CancelUserFollow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).CancelUserFollow(ctx, req.(*CancelUserFollowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_ChangeUserPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeUserPasswordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).ChangeUserPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/ChangeUserPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).ChangeUserPassword(ctx, req.(*ChangeUserPasswordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_UnbindUserPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnbindUserPhoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).UnbindUserPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/UnbindUserPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).UnbindUserPhone(ctx, req.(*UnbindUserPhoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_UnbindUserEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnbindUserEmailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).UnbindUserEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/UnbindUserEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).UnbindUserEmail(ctx, req.(*UnbindUserEmailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetLeaderBoard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetLeaderBoard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetLeaderBoard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetLeaderBoard(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCollectArticleList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectArticleListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCollectArticleList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCollectArticleList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCollectArticleList(ctx, req.(*GetCollectArticleListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCollectArticleCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectArticleCountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCollectArticleCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCollectArticleCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCollectArticleCount(ctx, req.(*GetCollectArticleCountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCollectTalkList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectTalkListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCollectTalkList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCollectTalkList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCollectTalkList(ctx, req.(*GetCollectTalkListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCollectTalkCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectTalkCountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCollectTalkCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCollectTalkCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCollectTalkCount(ctx, req.(*GetCollectTalkCountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCollectColumnList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectColumnListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCollectColumnList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCollectColumnList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCollectColumnList(ctx, req.(*GetCollectColumnListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCollectColumnCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectColumnCountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCollectColumnCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCollectColumnCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCollectColumnCount(ctx, req.(*GetCollectColumnCountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCollections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectionsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCollections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCollections",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCollections(ctx, req.(*GetCollectionsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCollectionsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectionsListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCollectionsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCollectionsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCollectionsList(ctx, req.(*GetCollectionsListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCollectionsListAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCollectionsListAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCollectionsListAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCollectionsListAll(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCollectionsCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCollectionsCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCollectionsCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCollectionsCount(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCollectionsListByVisitor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectionsListByVisitorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCollectionsListByVisitor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCollectionsListByVisitor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCollectionsListByVisitor(ctx, req.(*GetCollectionsListByVisitorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCollectionsVisitorCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectionsVisitorCountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCollectionsVisitorCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCollectionsVisitorCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCollectionsVisitorCount(ctx, req.(*GetCollectionsVisitorCountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetLastCollectionsDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetLastCollectionsDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetLastCollectionsDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetLastCollectionsDraft(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCollectionsContentReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectionsContentReviewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCollectionsContentReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCollectionsContentReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCollectionsContentReview(ctx, req.(*GetCollectionsContentReviewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserTimeLineListVisitor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserTimeLineListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserTimeLineListVisitor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserTimeLineListVisitor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserTimeLineListVisitor(ctx, req.(*GetUserTimeLineListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_CreateCollectionsDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).CreateCollectionsDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/CreateCollectionsDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).CreateCollectionsDraft(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SendCollections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendCollectionsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SendCollections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SendCollections",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SendCollections(ctx, req.(*SendCollectionsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SendCollectionsEdit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendCollectionsEditReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SendCollectionsEdit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SendCollectionsEdit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SendCollectionsEdit(ctx, req.(*SendCollectionsEditReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_DeleteCollections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCollectionsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).DeleteCollections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/DeleteCollections",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).DeleteCollections(ctx, req.(*DeleteCollectionsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetArticleList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArticleListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetArticleList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetArticleList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetArticleList(ctx, req.(*GetArticleListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetArticleListHot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArticleListHotReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetArticleListHot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetArticleListHot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetArticleListHot(ctx, req.(*GetArticleListHotReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetColumnArticleList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetColumnArticleListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetColumnArticleList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetColumnArticleList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetColumnArticleList(ctx, req.(*GetColumnArticleListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetArticleCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetArticleCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetArticleCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetArticleCount(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetArticleCountVisitor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArticleCountVisitorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetArticleCountVisitor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetArticleCountVisitor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetArticleCountVisitor(ctx, req.(*GetArticleCountVisitorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserArticleList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserArticleListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserArticleList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserArticleList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserArticleList(ctx, req.(*GetUserArticleListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserArticleListSimple_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserArticleListSimpleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserArticleListSimple(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserArticleListSimple",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserArticleListSimple(ctx, req.(*GetUserArticleListSimpleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserArticleListVisitor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserArticleListVisitorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserArticleListVisitor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserArticleListVisitor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserArticleListVisitor(ctx, req.(*GetUserArticleListVisitorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserArticleListAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserArticleListAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserArticleListAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserArticleListAll(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetArticleStatistic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArticleStatisticReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetArticleStatistic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetArticleStatistic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetArticleStatistic(ctx, req.(*GetArticleStatisticReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserArticleAgree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserArticleAgree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserArticleAgree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserArticleAgree(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserArticleCollect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserArticleCollect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserArticleCollect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserArticleCollect(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetArticleListStatistic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArticleListStatisticReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetArticleListStatistic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetArticleListStatistic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetArticleListStatistic(ctx, req.(*GetArticleListStatisticReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetLastArticleDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetLastArticleDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetLastArticleDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetLastArticleDraft(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetArticleSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArticleSearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetArticleSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetArticleSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetArticleSearch(ctx, req.(*GetArticleSearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetArticleImageReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArticleImageReviewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetArticleImageReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetArticleImageReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetArticleImageReview(ctx, req.(*GetArticleImageReviewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetArticleContentReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArticleContentReviewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetArticleContentReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetArticleContentReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetArticleContentReview(ctx, req.(*GetArticleContentReviewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_CreateArticleDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).CreateArticleDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/CreateArticleDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).CreateArticleDraft(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_ArticleDraftMark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArticleDraftMarkReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).ArticleDraftMark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/ArticleDraftMark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).ArticleDraftMark(ctx, req.(*ArticleDraftMarkReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetArticleDraftList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetArticleDraftList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetArticleDraftList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetArticleDraftList(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SendArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendArticleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SendArticle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SendArticle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SendArticle(ctx, req.(*SendArticleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SendArticleEdit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendArticleEditReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SendArticleEdit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SendArticleEdit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SendArticleEdit(ctx, req.(*SendArticleEditReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_DeleteArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteArticleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).DeleteArticle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/DeleteArticle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).DeleteArticle(ctx, req.(*DeleteArticleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetArticleAgree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetArticleAgreeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetArticleAgree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetArticleAgree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetArticleAgree(ctx, req.(*SetArticleAgreeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetArticleView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetArticleViewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetArticleView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetArticleView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetArticleView(ctx, req.(*SetArticleViewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetArticleCollect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetArticleCollectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetArticleCollect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetArticleCollect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetArticleCollect(ctx, req.(*SetArticleCollectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_CancelArticleAgree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelArticleAgreeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).CancelArticleAgree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/CancelArticleAgree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).CancelArticleAgree(ctx, req.(*CancelArticleAgreeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_CancelArticleCollect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelArticleCollectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).CancelArticleCollect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/CancelArticleCollect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).CancelArticleCollect(ctx, req.(*CancelArticleCollectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_ArticleStatisticJudge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArticleStatisticJudgeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).ArticleStatisticJudge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/ArticleStatisticJudge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).ArticleStatisticJudge(ctx, req.(*ArticleStatisticJudgeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetTalkList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTalkListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetTalkList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetTalkList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetTalkList(ctx, req.(*GetTalkListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetTalkListHot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTalkListHotReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetTalkListHot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetTalkListHot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetTalkListHot(ctx, req.(*GetTalkListHotReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetTalkListStatistic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTalkListStatisticReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetTalkListStatistic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetTalkListStatistic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetTalkListStatistic(ctx, req.(*GetTalkListStatisticReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserTalkList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserTalkListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserTalkList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserTalkList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserTalkList(ctx, req.(*GetUserTalkListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserTalkListSimple_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserTalkListSimpleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserTalkListSimple(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserTalkListSimple",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserTalkListSimple(ctx, req.(*GetUserTalkListSimpleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserTalkListVisitor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserTalkListVisitorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserTalkListVisitor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserTalkListVisitor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserTalkListVisitor(ctx, req.(*GetUserTalkListVisitorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetTalkCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetTalkCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetTalkCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetTalkCount(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetTalkCountVisitor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTalkCountVisitorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetTalkCountVisitor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetTalkCountVisitor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetTalkCountVisitor(ctx, req.(*GetTalkCountVisitorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetTalkStatistic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTalkStatisticReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetTalkStatistic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetTalkStatistic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetTalkStatistic(ctx, req.(*GetTalkStatisticReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetLastTalkDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetLastTalkDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetLastTalkDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetLastTalkDraft(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetTalkSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTalkSearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetTalkSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetTalkSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetTalkSearch(ctx, req.(*GetTalkSearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserTalkAgree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserTalkAgree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserTalkAgree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserTalkAgree(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserTalkCollect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserTalkCollect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserTalkCollect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserTalkCollect(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetTalkImageReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTalkImageReviewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetTalkImageReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetTalkImageReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetTalkImageReview(ctx, req.(*GetTalkImageReviewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetTalkContentReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTalkContentReviewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetTalkContentReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetTalkContentReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetTalkContentReview(ctx, req.(*GetTalkContentReviewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_CreateTalkDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).CreateTalkDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/CreateTalkDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).CreateTalkDraft(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SendTalk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTalkReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SendTalk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SendTalk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SendTalk(ctx, req.(*SendTalkReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SendTalkEdit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTalkEditReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SendTalkEdit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SendTalkEdit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SendTalkEdit(ctx, req.(*SendTalkEditReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_DeleteTalk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTalkReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).DeleteTalk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/DeleteTalk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).DeleteTalk(ctx, req.(*DeleteTalkReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetTalkView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTalkViewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetTalkView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetTalkView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetTalkView(ctx, req.(*SetTalkViewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_TalkStatisticJudge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TalkStatisticJudgeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).TalkStatisticJudge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/TalkStatisticJudge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).TalkStatisticJudge(ctx, req.(*TalkStatisticJudgeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetTalkAgree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTalkAgreeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetTalkAgree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetTalkAgree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetTalkAgree(ctx, req.(*SetTalkAgreeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetTalkCollect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTalkCollectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetTalkCollect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetTalkCollect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetTalkCollect(ctx, req.(*SetTalkCollectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_CancelTalkAgree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelTalkAgreeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).CancelTalkAgree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/CancelTalkAgree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).CancelTalkAgree(ctx, req.(*CancelTalkAgreeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_CancelTalkCollect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelTalkCollectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).CancelTalkCollect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/CancelTalkCollect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).CancelTalkCollect(ctx, req.(*CancelTalkCollectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetLastColumnDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetLastColumnDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetLastColumnDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetLastColumnDraft(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_CreateColumnDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).CreateColumnDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/CreateColumnDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).CreateColumnDraft(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SubscribeColumn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeColumnReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SubscribeColumn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SubscribeColumn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SubscribeColumn(ctx, req.(*SubscribeColumnReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_CancelSubscribeColumn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelSubscribeColumnReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).CancelSubscribeColumn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/CancelSubscribeColumn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).CancelSubscribeColumn(ctx, req.(*CancelSubscribeColumnReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SubscribeJudge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeJudgeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SubscribeJudge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SubscribeJudge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SubscribeJudge(ctx, req.(*SubscribeJudgeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SendColumn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendColumnReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SendColumn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SendColumn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SendColumn(ctx, req.(*SendColumnReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetSubscribeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubscribeListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetSubscribeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetSubscribeList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetSubscribeList(ctx, req.(*GetSubscribeListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetSubscribeListCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubscribeListCountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetSubscribeListCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetSubscribeListCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetSubscribeListCount(ctx, req.(*GetSubscribeListCountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetColumnSubscribes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetColumnSubscribesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetColumnSubscribes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetColumnSubscribes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetColumnSubscribes(ctx, req.(*GetColumnSubscribesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetColumnList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetColumnListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetColumnList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetColumnList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetColumnList(ctx, req.(*GetColumnListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetColumnListHot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetColumnListHotReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetColumnListHot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetColumnListHot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetColumnListHot(ctx, req.(*GetColumnListHotReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetColumnListStatistic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetColumnListStatisticReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetColumnListStatistic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetColumnListStatistic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetColumnListStatistic(ctx, req.(*GetColumnListStatisticReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserColumnList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserColumnListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserColumnList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserColumnList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserColumnList(ctx, req.(*GetUserColumnListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserColumnListSimple_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserColumnListSimpleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserColumnListSimple(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserColumnListSimple",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserColumnListSimple(ctx, req.(*GetUserColumnListSimpleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserColumnListVisitor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserColumnListVisitorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserColumnListVisitor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserColumnListVisitor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserColumnListVisitor(ctx, req.(*GetUserColumnListVisitorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetColumnCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetColumnCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetColumnCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetColumnCount(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetColumnCountVisitor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetColumnCountVisitorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetColumnCountVisitor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetColumnCountVisitor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetColumnCountVisitor(ctx, req.(*GetColumnCountVisitorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetColumnSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetColumnSearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetColumnSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetColumnSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetColumnSearch(ctx, req.(*GetColumnSearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SendColumnEdit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendColumnEditReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SendColumnEdit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SendColumnEdit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SendColumnEdit(ctx, req.(*SendColumnEditReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_DeleteColumn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteColumnReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).DeleteColumn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/DeleteColumn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).DeleteColumn(ctx, req.(*DeleteColumnReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetColumnStatistic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetColumnStatisticReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetColumnStatistic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetColumnStatistic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetColumnStatistic(ctx, req.(*GetColumnStatisticReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserColumnAgree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserColumnAgree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserColumnAgree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserColumnAgree(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserColumnCollect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserColumnCollect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserColumnCollect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserColumnCollect(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserSubscribeColumn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserSubscribeColumn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserSubscribeColumn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserSubscribeColumn(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetColumnImageReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetColumnImageReviewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetColumnImageReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetColumnImageReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetColumnImageReview(ctx, req.(*GetColumnImageReviewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetColumnContentReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetColumnContentReviewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetColumnContentReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetColumnContentReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetColumnContentReview(ctx, req.(*GetColumnContentReviewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_ColumnStatisticJudge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ColumnStatisticJudgeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).ColumnStatisticJudge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/ColumnStatisticJudge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).ColumnStatisticJudge(ctx, req.(*ColumnStatisticJudgeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetColumnAgree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetColumnAgreeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetColumnAgree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetColumnAgree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetColumnAgree(ctx, req.(*SetColumnAgreeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_CancelColumnAgree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelColumnAgreeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).CancelColumnAgree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/CancelColumnAgree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).CancelColumnAgree(ctx, req.(*CancelColumnAgreeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetColumnCollect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetColumnCollectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetColumnCollect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetColumnCollect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetColumnCollect(ctx, req.(*SetColumnCollectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_CancelColumnCollect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelColumnCollectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).CancelColumnCollect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/CancelColumnCollect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).CancelColumnCollect(ctx, req.(*CancelColumnCollectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetColumnView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetColumnViewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetColumnView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetColumnView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetColumnView(ctx, req.(*SetColumnViewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_AddColumnIncludes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddColumnIncludesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).AddColumnIncludes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/AddColumnIncludes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).AddColumnIncludes(ctx, req.(*AddColumnIncludesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_DeleteColumnIncludes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteColumnIncludesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).DeleteColumnIncludes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/DeleteColumnIncludes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).DeleteColumnIncludes(ctx, req.(*DeleteColumnIncludesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetNews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNewsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetNews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetNews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetNews(ctx, req.(*GetNewsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetAchievementList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAchievementListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetAchievementList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetAchievementList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetAchievementList(ctx, req.(*GetAchievementListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserAchievement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserAchievementReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserAchievement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserAchievement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserAchievement(ctx, req.(*GetUserAchievementReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserMedal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserMedalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserMedal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserMedal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserMedal(ctx, req.(*GetUserMedalReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_AccessUserMedal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccessUserMedalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).AccessUserMedal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/AccessUserMedal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).AccessUserMedal(ctx, req.(*AccessUserMedalReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserMedalProgress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserMedalProgress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserMedalProgress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserMedalProgress(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetUserMedal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserMedalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetUserMedal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetUserMedal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetUserMedal(ctx, req.(*SetUserMedalReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_CancelUserMedalSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelUserMedalSetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).CancelUserMedalSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/CancelUserMedalSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).CancelUserMedalSet(ctx, req.(*CancelUserMedalSetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetLastCommentDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetLastCommentDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetLastCommentDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetLastCommentDraft(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserCommentAgree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserCommentAgree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserCommentAgree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserCommentAgree(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCommentUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCommentUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCommentUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCommentUser(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCommentList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommentListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCommentList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCommentList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCommentList(ctx, req.(*GetCommentListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetSubCommentList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubCommentListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetSubCommentList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetSubCommentList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetSubCommentList(ctx, req.(*GetSubCommentListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCommentListHot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommentListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCommentListHot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCommentListHot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCommentListHot(ctx, req.(*GetCommentListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserCommentArticleReplyList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserCommentArticleReplyListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserCommentArticleReplyList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserCommentArticleReplyList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserCommentArticleReplyList(ctx, req.(*GetUserCommentArticleReplyListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserSubCommentArticleReplyList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserSubCommentArticleReplyListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserSubCommentArticleReplyList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserSubCommentArticleReplyList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserSubCommentArticleReplyList(ctx, req.(*GetUserSubCommentArticleReplyListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserCommentTalkReplyList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserCommentTalkReplyListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserCommentTalkReplyList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserCommentTalkReplyList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserCommentTalkReplyList(ctx, req.(*GetUserCommentTalkReplyListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserSubCommentTalkReplyList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserSubCommentTalkReplyListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserSubCommentTalkReplyList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserSubCommentTalkReplyList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserSubCommentTalkReplyList(ctx, req.(*GetUserSubCommentTalkReplyListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserCommentArticleRepliedList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserCommentArticleRepliedListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserCommentArticleRepliedList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserCommentArticleRepliedList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserCommentArticleRepliedList(ctx, req.(*GetUserCommentArticleRepliedListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserSubCommentArticleRepliedList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserSubCommentArticleRepliedListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserSubCommentArticleRepliedList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserSubCommentArticleRepliedList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserSubCommentArticleRepliedList(ctx, req.(*GetUserSubCommentArticleRepliedListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserCommentTalkRepliedList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserCommentTalkRepliedListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserCommentTalkRepliedList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserCommentTalkRepliedList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserCommentTalkRepliedList(ctx, req.(*GetUserCommentTalkRepliedListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetUserSubCommentTalkRepliedList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserSubCommentTalkRepliedListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetUserSubCommentTalkRepliedList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetUserSubCommentTalkRepliedList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetUserSubCommentTalkRepliedList(ctx, req.(*GetUserSubCommentTalkRepliedListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_GetCommentContentReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommentContentReviewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).GetCommentContentReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/GetCommentContentReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).GetCommentContentReview(ctx, req.(*GetCommentContentReviewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_CreateCommentDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).CreateCommentDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/CreateCommentDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).CreateCommentDraft(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SendComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendCommentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SendComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SendComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SendComment(ctx, req.(*SendCommentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SendSubComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendSubCommentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SendSubComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SendSubComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SendSubComment(ctx, req.(*SendSubCommentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_RemoveComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveCommentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).RemoveComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/RemoveComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).RemoveComment(ctx, req.(*RemoveCommentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_RemoveSubComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveSubCommentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).RemoveSubComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/RemoveSubComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).RemoveSubComment(ctx, req.(*RemoveSubCommentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetCommentAgree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetCommentAgreeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetCommentAgree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetCommentAgree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetCommentAgree(ctx, req.(*SetCommentAgreeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_SetSubCommentAgree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSubCommentAgreeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).SetSubCommentAgree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/SetSubCommentAgree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).SetSubCommentAgree(ctx, req.(*SetSubCommentAgreeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_CancelCommentAgree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelCommentAgreeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).CancelCommentAgree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/CancelCommentAgree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).CancelCommentAgree(ctx, req.(*CancelCommentAgreeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bff_CancelSubCommentAgree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelSubCommentAgreeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BffServer).CancelSubCommentAgree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bff.v1.Bff/CancelSubCommentAgree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BffServer).CancelSubCommentAgree(ctx, req.(*CancelSubCommentAgreeReq))
	}
	return interceptor(ctx, in, info, handler)
}

// Bff_ServiceDesc is the grpc.ServiceDesc for Bff service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Bff_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bff.v1.Bff",
	HandlerType: (*BffServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserRegister",
			Handler:    _Bff_UserRegister_Handler,
		},
		{
			MethodName: "LoginByPassword",
			Handler:    _Bff_LoginByPassword_Handler,
		},
		{
			MethodName: "LoginByCode",
			Handler:    _Bff_LoginByCode_Handler,
		},
		{
			MethodName: "LoginByWeChat",
			Handler:    _Bff_LoginByWeChat_Handler,
		},
		{
			MethodName: "LoginByGithub",
			Handler:    _Bff_LoginByGithub_Handler,
		},
		{
			MethodName: "LoginPasswordReset",
			Handler:    _Bff_LoginPasswordReset_Handler,
		},
		{
			MethodName: "SendPhoneCode",
			Handler:    _Bff_SendPhoneCode_Handler,
		},
		{
			MethodName: "SendEmailCode",
			Handler:    _Bff_SendEmailCode_Handler,
		},
		{
			MethodName: "GetCosSessionKey",
			Handler:    _Bff_GetCosSessionKey_Handler,
		},
		{
			MethodName: "GetAvatarReview",
			Handler:    _Bff_GetAvatarReview_Handler,
		},
		{
			MethodName: "GetCoverReview",
			Handler:    _Bff_GetCoverReview_Handler,
		},
		{
			MethodName: "GetAccount",
			Handler:    _Bff_GetAccount_Handler,
		},
		{
			MethodName: "GetProfile",
			Handler:    _Bff_GetProfile_Handler,
		},
		{
			MethodName: "GetProfileList",
			Handler:    _Bff_GetProfileList_Handler,
		},
		{
			MethodName: "GetUserInfo",
			Handler:    _Bff_GetUserInfo_Handler,
		},
		{
			MethodName: "GetUserInfoVisitor",
			Handler:    _Bff_GetUserInfoVisitor_Handler,
		},
		{
			MethodName: "GetUserFollow",
			Handler:    _Bff_GetUserFollow_Handler,
		},
		{
			MethodName: "GetUserFollows",
			Handler:    _Bff_GetUserFollows_Handler,
		},
		{
			MethodName: "GetFollowList",
			Handler:    _Bff_GetFollowList_Handler,
		},
		{
			MethodName: "GetFollowListCount",
			Handler:    _Bff_GetFollowListCount_Handler,
		},
		{
			MethodName: "GetFollowedList",
			Handler:    _Bff_GetFollowedList_Handler,
		},
		{
			MethodName: "GetFollowedListCount",
			Handler:    _Bff_GetFollowedListCount_Handler,
		},
		{
			MethodName: "GetProfileUpdate",
			Handler:    _Bff_GetProfileUpdate_Handler,
		},
		{
			MethodName: "GetUserSearch",
			Handler:    _Bff_GetUserSearch_Handler,
		},
		{
			MethodName: "SetProfileUpdate",
			Handler:    _Bff_SetProfileUpdate_Handler,
		},
		{
			MethodName: "SetUserPhone",
			Handler:    _Bff_SetUserPhone_Handler,
		},
		{
			MethodName: "SetUserEmail",
			Handler:    _Bff_SetUserEmail_Handler,
		},
		{
			MethodName: "SetUserPassword",
			Handler:    _Bff_SetUserPassword_Handler,
		},
		{
			MethodName: "SetUserFollow",
			Handler:    _Bff_SetUserFollow_Handler,
		},
		{
			MethodName: "CancelUserFollow",
			Handler:    _Bff_CancelUserFollow_Handler,
		},
		{
			MethodName: "ChangeUserPassword",
			Handler:    _Bff_ChangeUserPassword_Handler,
		},
		{
			MethodName: "UnbindUserPhone",
			Handler:    _Bff_UnbindUserPhone_Handler,
		},
		{
			MethodName: "UnbindUserEmail",
			Handler:    _Bff_UnbindUserEmail_Handler,
		},
		{
			MethodName: "GetLeaderBoard",
			Handler:    _Bff_GetLeaderBoard_Handler,
		},
		{
			MethodName: "GetCollectArticleList",
			Handler:    _Bff_GetCollectArticleList_Handler,
		},
		{
			MethodName: "GetCollectArticleCount",
			Handler:    _Bff_GetCollectArticleCount_Handler,
		},
		{
			MethodName: "GetCollectTalkList",
			Handler:    _Bff_GetCollectTalkList_Handler,
		},
		{
			MethodName: "GetCollectTalkCount",
			Handler:    _Bff_GetCollectTalkCount_Handler,
		},
		{
			MethodName: "GetCollectColumnList",
			Handler:    _Bff_GetCollectColumnList_Handler,
		},
		{
			MethodName: "GetCollectColumnCount",
			Handler:    _Bff_GetCollectColumnCount_Handler,
		},
		{
			MethodName: "GetCollections",
			Handler:    _Bff_GetCollections_Handler,
		},
		{
			MethodName: "GetCollectionsList",
			Handler:    _Bff_GetCollectionsList_Handler,
		},
		{
			MethodName: "GetCollectionsListAll",
			Handler:    _Bff_GetCollectionsListAll_Handler,
		},
		{
			MethodName: "GetCollectionsCount",
			Handler:    _Bff_GetCollectionsCount_Handler,
		},
		{
			MethodName: "GetCollectionsListByVisitor",
			Handler:    _Bff_GetCollectionsListByVisitor_Handler,
		},
		{
			MethodName: "GetCollectionsVisitorCount",
			Handler:    _Bff_GetCollectionsVisitorCount_Handler,
		},
		{
			MethodName: "GetLastCollectionsDraft",
			Handler:    _Bff_GetLastCollectionsDraft_Handler,
		},
		{
			MethodName: "GetCollectionsContentReview",
			Handler:    _Bff_GetCollectionsContentReview_Handler,
		},
		{
			MethodName: "GetUserTimeLineListVisitor",
			Handler:    _Bff_GetUserTimeLineListVisitor_Handler,
		},
		{
			MethodName: "CreateCollectionsDraft",
			Handler:    _Bff_CreateCollectionsDraft_Handler,
		},
		{
			MethodName: "SendCollections",
			Handler:    _Bff_SendCollections_Handler,
		},
		{
			MethodName: "SendCollectionsEdit",
			Handler:    _Bff_SendCollectionsEdit_Handler,
		},
		{
			MethodName: "DeleteCollections",
			Handler:    _Bff_DeleteCollections_Handler,
		},
		{
			MethodName: "GetArticleList",
			Handler:    _Bff_GetArticleList_Handler,
		},
		{
			MethodName: "GetArticleListHot",
			Handler:    _Bff_GetArticleListHot_Handler,
		},
		{
			MethodName: "GetColumnArticleList",
			Handler:    _Bff_GetColumnArticleList_Handler,
		},
		{
			MethodName: "GetArticleCount",
			Handler:    _Bff_GetArticleCount_Handler,
		},
		{
			MethodName: "GetArticleCountVisitor",
			Handler:    _Bff_GetArticleCountVisitor_Handler,
		},
		{
			MethodName: "GetUserArticleList",
			Handler:    _Bff_GetUserArticleList_Handler,
		},
		{
			MethodName: "GetUserArticleListSimple",
			Handler:    _Bff_GetUserArticleListSimple_Handler,
		},
		{
			MethodName: "GetUserArticleListVisitor",
			Handler:    _Bff_GetUserArticleListVisitor_Handler,
		},
		{
			MethodName: "GetUserArticleListAll",
			Handler:    _Bff_GetUserArticleListAll_Handler,
		},
		{
			MethodName: "GetArticleStatistic",
			Handler:    _Bff_GetArticleStatistic_Handler,
		},
		{
			MethodName: "GetUserArticleAgree",
			Handler:    _Bff_GetUserArticleAgree_Handler,
		},
		{
			MethodName: "GetUserArticleCollect",
			Handler:    _Bff_GetUserArticleCollect_Handler,
		},
		{
			MethodName: "GetArticleListStatistic",
			Handler:    _Bff_GetArticleListStatistic_Handler,
		},
		{
			MethodName: "GetLastArticleDraft",
			Handler:    _Bff_GetLastArticleDraft_Handler,
		},
		{
			MethodName: "GetArticleSearch",
			Handler:    _Bff_GetArticleSearch_Handler,
		},
		{
			MethodName: "GetArticleImageReview",
			Handler:    _Bff_GetArticleImageReview_Handler,
		},
		{
			MethodName: "GetArticleContentReview",
			Handler:    _Bff_GetArticleContentReview_Handler,
		},
		{
			MethodName: "CreateArticleDraft",
			Handler:    _Bff_CreateArticleDraft_Handler,
		},
		{
			MethodName: "ArticleDraftMark",
			Handler:    _Bff_ArticleDraftMark_Handler,
		},
		{
			MethodName: "GetArticleDraftList",
			Handler:    _Bff_GetArticleDraftList_Handler,
		},
		{
			MethodName: "SendArticle",
			Handler:    _Bff_SendArticle_Handler,
		},
		{
			MethodName: "SendArticleEdit",
			Handler:    _Bff_SendArticleEdit_Handler,
		},
		{
			MethodName: "DeleteArticle",
			Handler:    _Bff_DeleteArticle_Handler,
		},
		{
			MethodName: "SetArticleAgree",
			Handler:    _Bff_SetArticleAgree_Handler,
		},
		{
			MethodName: "SetArticleView",
			Handler:    _Bff_SetArticleView_Handler,
		},
		{
			MethodName: "SetArticleCollect",
			Handler:    _Bff_SetArticleCollect_Handler,
		},
		{
			MethodName: "CancelArticleAgree",
			Handler:    _Bff_CancelArticleAgree_Handler,
		},
		{
			MethodName: "CancelArticleCollect",
			Handler:    _Bff_CancelArticleCollect_Handler,
		},
		{
			MethodName: "ArticleStatisticJudge",
			Handler:    _Bff_ArticleStatisticJudge_Handler,
		},
		{
			MethodName: "GetTalkList",
			Handler:    _Bff_GetTalkList_Handler,
		},
		{
			MethodName: "GetTalkListHot",
			Handler:    _Bff_GetTalkListHot_Handler,
		},
		{
			MethodName: "GetTalkListStatistic",
			Handler:    _Bff_GetTalkListStatistic_Handler,
		},
		{
			MethodName: "GetUserTalkList",
			Handler:    _Bff_GetUserTalkList_Handler,
		},
		{
			MethodName: "GetUserTalkListSimple",
			Handler:    _Bff_GetUserTalkListSimple_Handler,
		},
		{
			MethodName: "GetUserTalkListVisitor",
			Handler:    _Bff_GetUserTalkListVisitor_Handler,
		},
		{
			MethodName: "GetTalkCount",
			Handler:    _Bff_GetTalkCount_Handler,
		},
		{
			MethodName: "GetTalkCountVisitor",
			Handler:    _Bff_GetTalkCountVisitor_Handler,
		},
		{
			MethodName: "GetTalkStatistic",
			Handler:    _Bff_GetTalkStatistic_Handler,
		},
		{
			MethodName: "GetLastTalkDraft",
			Handler:    _Bff_GetLastTalkDraft_Handler,
		},
		{
			MethodName: "GetTalkSearch",
			Handler:    _Bff_GetTalkSearch_Handler,
		},
		{
			MethodName: "GetUserTalkAgree",
			Handler:    _Bff_GetUserTalkAgree_Handler,
		},
		{
			MethodName: "GetUserTalkCollect",
			Handler:    _Bff_GetUserTalkCollect_Handler,
		},
		{
			MethodName: "GetTalkImageReview",
			Handler:    _Bff_GetTalkImageReview_Handler,
		},
		{
			MethodName: "GetTalkContentReview",
			Handler:    _Bff_GetTalkContentReview_Handler,
		},
		{
			MethodName: "CreateTalkDraft",
			Handler:    _Bff_CreateTalkDraft_Handler,
		},
		{
			MethodName: "SendTalk",
			Handler:    _Bff_SendTalk_Handler,
		},
		{
			MethodName: "SendTalkEdit",
			Handler:    _Bff_SendTalkEdit_Handler,
		},
		{
			MethodName: "DeleteTalk",
			Handler:    _Bff_DeleteTalk_Handler,
		},
		{
			MethodName: "SetTalkView",
			Handler:    _Bff_SetTalkView_Handler,
		},
		{
			MethodName: "TalkStatisticJudge",
			Handler:    _Bff_TalkStatisticJudge_Handler,
		},
		{
			MethodName: "SetTalkAgree",
			Handler:    _Bff_SetTalkAgree_Handler,
		},
		{
			MethodName: "SetTalkCollect",
			Handler:    _Bff_SetTalkCollect_Handler,
		},
		{
			MethodName: "CancelTalkAgree",
			Handler:    _Bff_CancelTalkAgree_Handler,
		},
		{
			MethodName: "CancelTalkCollect",
			Handler:    _Bff_CancelTalkCollect_Handler,
		},
		{
			MethodName: "GetLastColumnDraft",
			Handler:    _Bff_GetLastColumnDraft_Handler,
		},
		{
			MethodName: "CreateColumnDraft",
			Handler:    _Bff_CreateColumnDraft_Handler,
		},
		{
			MethodName: "SubscribeColumn",
			Handler:    _Bff_SubscribeColumn_Handler,
		},
		{
			MethodName: "CancelSubscribeColumn",
			Handler:    _Bff_CancelSubscribeColumn_Handler,
		},
		{
			MethodName: "SubscribeJudge",
			Handler:    _Bff_SubscribeJudge_Handler,
		},
		{
			MethodName: "SendColumn",
			Handler:    _Bff_SendColumn_Handler,
		},
		{
			MethodName: "GetSubscribeList",
			Handler:    _Bff_GetSubscribeList_Handler,
		},
		{
			MethodName: "GetSubscribeListCount",
			Handler:    _Bff_GetSubscribeListCount_Handler,
		},
		{
			MethodName: "GetColumnSubscribes",
			Handler:    _Bff_GetColumnSubscribes_Handler,
		},
		{
			MethodName: "GetColumnList",
			Handler:    _Bff_GetColumnList_Handler,
		},
		{
			MethodName: "GetColumnListHot",
			Handler:    _Bff_GetColumnListHot_Handler,
		},
		{
			MethodName: "GetColumnListStatistic",
			Handler:    _Bff_GetColumnListStatistic_Handler,
		},
		{
			MethodName: "GetUserColumnList",
			Handler:    _Bff_GetUserColumnList_Handler,
		},
		{
			MethodName: "GetUserColumnListSimple",
			Handler:    _Bff_GetUserColumnListSimple_Handler,
		},
		{
			MethodName: "GetUserColumnListVisitor",
			Handler:    _Bff_GetUserColumnListVisitor_Handler,
		},
		{
			MethodName: "GetColumnCount",
			Handler:    _Bff_GetColumnCount_Handler,
		},
		{
			MethodName: "GetColumnCountVisitor",
			Handler:    _Bff_GetColumnCountVisitor_Handler,
		},
		{
			MethodName: "GetColumnSearch",
			Handler:    _Bff_GetColumnSearch_Handler,
		},
		{
			MethodName: "SendColumnEdit",
			Handler:    _Bff_SendColumnEdit_Handler,
		},
		{
			MethodName: "DeleteColumn",
			Handler:    _Bff_DeleteColumn_Handler,
		},
		{
			MethodName: "GetColumnStatistic",
			Handler:    _Bff_GetColumnStatistic_Handler,
		},
		{
			MethodName: "GetUserColumnAgree",
			Handler:    _Bff_GetUserColumnAgree_Handler,
		},
		{
			MethodName: "GetUserColumnCollect",
			Handler:    _Bff_GetUserColumnCollect_Handler,
		},
		{
			MethodName: "GetUserSubscribeColumn",
			Handler:    _Bff_GetUserSubscribeColumn_Handler,
		},
		{
			MethodName: "GetColumnImageReview",
			Handler:    _Bff_GetColumnImageReview_Handler,
		},
		{
			MethodName: "GetColumnContentReview",
			Handler:    _Bff_GetColumnContentReview_Handler,
		},
		{
			MethodName: "ColumnStatisticJudge",
			Handler:    _Bff_ColumnStatisticJudge_Handler,
		},
		{
			MethodName: "SetColumnAgree",
			Handler:    _Bff_SetColumnAgree_Handler,
		},
		{
			MethodName: "CancelColumnAgree",
			Handler:    _Bff_CancelColumnAgree_Handler,
		},
		{
			MethodName: "SetColumnCollect",
			Handler:    _Bff_SetColumnCollect_Handler,
		},
		{
			MethodName: "CancelColumnCollect",
			Handler:    _Bff_CancelColumnCollect_Handler,
		},
		{
			MethodName: "SetColumnView",
			Handler:    _Bff_SetColumnView_Handler,
		},
		{
			MethodName: "AddColumnIncludes",
			Handler:    _Bff_AddColumnIncludes_Handler,
		},
		{
			MethodName: "DeleteColumnIncludes",
			Handler:    _Bff_DeleteColumnIncludes_Handler,
		},
		{
			MethodName: "GetNews",
			Handler:    _Bff_GetNews_Handler,
		},
		{
			MethodName: "GetAchievementList",
			Handler:    _Bff_GetAchievementList_Handler,
		},
		{
			MethodName: "GetUserAchievement",
			Handler:    _Bff_GetUserAchievement_Handler,
		},
		{
			MethodName: "GetUserMedal",
			Handler:    _Bff_GetUserMedal_Handler,
		},
		{
			MethodName: "AccessUserMedal",
			Handler:    _Bff_AccessUserMedal_Handler,
		},
		{
			MethodName: "GetUserMedalProgress",
			Handler:    _Bff_GetUserMedalProgress_Handler,
		},
		{
			MethodName: "SetUserMedal",
			Handler:    _Bff_SetUserMedal_Handler,
		},
		{
			MethodName: "CancelUserMedalSet",
			Handler:    _Bff_CancelUserMedalSet_Handler,
		},
		{
			MethodName: "GetLastCommentDraft",
			Handler:    _Bff_GetLastCommentDraft_Handler,
		},
		{
			MethodName: "GetUserCommentAgree",
			Handler:    _Bff_GetUserCommentAgree_Handler,
		},
		{
			MethodName: "GetCommentUser",
			Handler:    _Bff_GetCommentUser_Handler,
		},
		{
			MethodName: "GetCommentList",
			Handler:    _Bff_GetCommentList_Handler,
		},
		{
			MethodName: "GetSubCommentList",
			Handler:    _Bff_GetSubCommentList_Handler,
		},
		{
			MethodName: "GetCommentListHot",
			Handler:    _Bff_GetCommentListHot_Handler,
		},
		{
			MethodName: "GetUserCommentArticleReplyList",
			Handler:    _Bff_GetUserCommentArticleReplyList_Handler,
		},
		{
			MethodName: "GetUserSubCommentArticleReplyList",
			Handler:    _Bff_GetUserSubCommentArticleReplyList_Handler,
		},
		{
			MethodName: "GetUserCommentTalkReplyList",
			Handler:    _Bff_GetUserCommentTalkReplyList_Handler,
		},
		{
			MethodName: "GetUserSubCommentTalkReplyList",
			Handler:    _Bff_GetUserSubCommentTalkReplyList_Handler,
		},
		{
			MethodName: "GetUserCommentArticleRepliedList",
			Handler:    _Bff_GetUserCommentArticleRepliedList_Handler,
		},
		{
			MethodName: "GetUserSubCommentArticleRepliedList",
			Handler:    _Bff_GetUserSubCommentArticleRepliedList_Handler,
		},
		{
			MethodName: "GetUserCommentTalkRepliedList",
			Handler:    _Bff_GetUserCommentTalkRepliedList_Handler,
		},
		{
			MethodName: "GetUserSubCommentTalkRepliedList",
			Handler:    _Bff_GetUserSubCommentTalkRepliedList_Handler,
		},
		{
			MethodName: "GetCommentContentReview",
			Handler:    _Bff_GetCommentContentReview_Handler,
		},
		{
			MethodName: "CreateCommentDraft",
			Handler:    _Bff_CreateCommentDraft_Handler,
		},
		{
			MethodName: "SendComment",
			Handler:    _Bff_SendComment_Handler,
		},
		{
			MethodName: "SendSubComment",
			Handler:    _Bff_SendSubComment_Handler,
		},
		{
			MethodName: "RemoveComment",
			Handler:    _Bff_RemoveComment_Handler,
		},
		{
			MethodName: "RemoveSubComment",
			Handler:    _Bff_RemoveSubComment_Handler,
		},
		{
			MethodName: "SetCommentAgree",
			Handler:    _Bff_SetCommentAgree_Handler,
		},
		{
			MethodName: "SetSubCommentAgree",
			Handler:    _Bff_SetSubCommentAgree_Handler,
		},
		{
			MethodName: "CancelCommentAgree",
			Handler:    _Bff_CancelCommentAgree_Handler,
		},
		{
			MethodName: "CancelSubCommentAgree",
			Handler:    _Bff_CancelSubCommentAgree_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bff/interface/v1/bff.proto",
}
