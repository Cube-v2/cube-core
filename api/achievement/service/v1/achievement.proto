syntax = "proto3";

package achievement.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";

option go_package = "api/achievement/service/v1;v1";

service Achievement {
  rpc SetAchievementAgree(SetAchievementAgreeReq) returns (google.protobuf.Empty){}
  rpc CancelAchievementAgree(CancelAchievementAgreeReq) returns (google.protobuf.Empty){}
  rpc SetAchievementView(SetAchievementViewReq) returns (google.protobuf.Empty){}
  rpc SetAchievementCollect(SetAchievementCollectReq) returns (google.protobuf.Empty){}
  rpc CancelAchievementCollect(CancelAchievementCollectReq) returns (google.protobuf.Empty){}
  rpc SetAchievementFollow(SetAchievementFollowReq) returns (google.protobuf.Empty){}
  rpc CancelAchievementFollow(CancelAchievementFollowReq) returns (google.protobuf.Empty){}
  rpc CancelUserMedalSet(CancelUserMedalSetReq) returns (google.protobuf.Empty){}
  rpc SetUserMedal(SetUserMedalReq) returns (google.protobuf.Empty){}
  rpc SetUserMedalDbAndCache(SetUserMedalDbAndCacheReq) returns (google.protobuf.Empty){}
  rpc CancelUserMedalDbAndCache(CancelUserMedalDbAndCacheReq) returns (google.protobuf.Empty){}
  rpc AccessUserMedal(AccessUserMedalReq) returns (google.protobuf.Empty){}
  rpc AccessUserMedalDbAndCache(AccessUserMedalReq) returns (google.protobuf.Empty){}
  rpc GetAchievementList(GetAchievementListReq) returns (GetAchievementListReply){}
  rpc GetUserAchievement(GetUserAchievementReq) returns (GetUserAchievementReply){}
  rpc GetUserMedal(GetUserMedalReq) returns (GetUserMedalReply){}
  rpc GetUserActive(GetUserActiveReq) returns (GetUserActiveReply){}
  rpc AddAchievementScore(AddAchievementScoreReq) returns (google.protobuf.Empty){}
}

message SetAchievementAgreeReq{
  string uuid = 1;
  string userUuid = 2;
}

message CancelAchievementAgreeReq{
  string uuid = 1;
  string userUuid = 2;
}

message SetAchievementViewReq{
  string uuid = 1;
}

message SetAchievementCollectReq{
  string uuid = 1;
}

message CancelAchievementCollectReq{
  string uuid = 1;
}

message SetAchievementFollowReq{
  string follow = 1;
  string followed = 2;
}

message CancelAchievementFollowReq{
  string follow = 1;
  string followed = 2;
}

message SetUserMedalReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string medal = 2 [(validate.rules).string = {in: [
    "creation1", "creation2", "creation3", "creation4", "creation5", "creation6", "creation7",
    "agree1", "agree2", "agree3", "agree4", "agree5", "agree6",
    "view1", "view2", "view3",
    "comment1", "comment2", "comment3",
    "collect1", "collect2", "collect3"
  ]}];
}

message CancelUserMedalSetReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string medal = 2 [(validate.rules).string = {in: [
    "creation1", "creation2", "creation3", "creation4", "creation5", "creation6", "creation7",
    "agree1", "agree2", "agree3", "agree4", "agree5", "agree6",
    "view1", "view2", "view3",
    "comment1", "comment2", "comment3",
    "collect1", "collect2", "collect3"
  ]}];
}

message SetUserMedalDbAndCacheReq{
  string medal = 1;
  string uuid = 2;
}

message CancelUserMedalDbAndCacheReq{
  string medal = 1;
  string uuid = 2;
}

message AccessUserMedalReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string medal = 2 [(validate.rules).string = {in: [
    "creation1", "creation2", "creation3", "creation4", "creation5", "creation6", "creation7",
    "agree1", "agree2", "agree3", "agree4", "agree5", "agree6",
    "view1", "view2", "view3",
    "comment1", "comment2", "comment3",
    "collect1", "collect2", "collect3"
  ]}];
}

message GetAchievementListReq{
  repeated string uuids = 1 [(validate.rules).repeated.items.string.uuid = true];
}

message GetAchievementListReply{
  message Achievement{
    string uuid = 1;
    int32 view = 2;
    int32 agree = 3;
    int32 followed = 4;
    int32 follow = 5;
  }
  repeated Achievement achievement = 1;
}

message GetUserAchievementReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetUserAchievementReply{
  int32 agree = 1;
  int32 view = 2;
  int32 collect = 3;
  int32 follow = 4;
  int32 followed = 5;
  int32 score = 6;
}

message AddAchievementScoreReq{
  string uuid = 1;
  int32 score = 2;
}

message GetUserMedalReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetUserMedalReply{
  int32 creation1 = 1;
  int32 creation2 = 2;
  int32 creation3 = 3;
  int32 creation4 = 4;
  int32 creation5 = 5;
  int32 creation6 = 6;
  int32 creation7 = 7;
  int32 agree1 = 8;
  int32 agree2 = 9;
  int32 agree3 = 10;
  int32 agree4 = 11;
  int32 agree5 = 12;
  int32 agree6 = 13;
  int32 view1 = 14;
  int32 view2 = 15;
  int32 view3 = 16;
  int32 comment1 = 17;
  int32 comment2 = 18;
  int32 comment3 = 19;
  int32 collect1 = 20;
  int32 collect2 = 21;
  int32 collect3 = 22;
}

message GetUserActiveReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetUserActiveReply{
  int32 agree = 1;
  int32 view = 2;
}
