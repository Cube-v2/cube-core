syntax = "proto3";

package comment.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";

option go_package = "api/comment/service/v1;v1";

service Comment {
  rpc GetHealth(google.protobuf.Empty) returns (google.protobuf.Empty){
    option (google.api.http) = {
      get: "/v1/get/comment/health"
    };
  }

  rpc GetLastCommentDraft(GetLastCommentDraftReq) returns (GetLastCommentDraftReply){}

  rpc GetUserCommentAgree(GetUserCommentAgreeReq) returns (GetUserCommentAgreeReply){}

  rpc GetCommentUser(GetCommentUserReq) returns (GetCommentUserReply){}

  rpc GetCommentList(GetCommentListReq) returns (GetCommentListReply){}

  rpc GetSubCommentList(GetSubCommentListReq) returns (GetSubCommentListReply){}

  rpc GetCommentListHot(GetCommentListReq) returns (GetCommentListReply){}

  rpc GetCommentListStatistic(GetCommentListStatisticReq)returns (GetCommentListStatisticReply){}

  rpc GetSubCommentListStatistic(GetCommentListStatisticReq)returns (GetCommentListStatisticReply){}

  rpc GetUserCommentArticleReplyList(GetUserCommentArticleReplyListReq) returns (GetUserCommentArticleReplyListReply){}

  rpc GetUserSubCommentArticleReplyList(GetUserSubCommentArticleReplyListReq) returns (GetUserSubCommentArticleReplyListReply){}

  rpc GetUserCommentTalkReplyList(GetUserCommentTalkReplyListReq) returns (GetUserCommentTalkReplyListReply){}

  rpc GetUserSubCommentTalkReplyList(GetUserSubCommentTalkReplyListReq) returns (GetUserSubCommentTalkReplyListReply){}

  rpc GetUserCommentArticleRepliedList(GetUserCommentArticleRepliedListReq) returns (GetUserCommentArticleRepliedListReply){}

  rpc GetUserSubCommentArticleRepliedList(GetUserSubCommentArticleRepliedListReq) returns (GetUserSubCommentArticleRepliedListReply){}

  rpc GetUserCommentTalkRepliedList(GetUserCommentTalkRepliedListReq) returns (GetUserCommentTalkRepliedListReply){}

  rpc GetUserSubCommentTalkRepliedList(GetUserSubCommentTalkRepliedListReq) returns (GetUserSubCommentTalkRepliedListReply){}

  rpc GetUserCommentRepliedList(GetUserCommentRepliedListReq) returns (GetUserCommentRepliedListReply){}

  rpc GetUserSubCommentRepliedList(GetUserSubCommentRepliedListReq) returns (GetUserSubCommentRepliedListReply){}

  rpc GetCommentContentReview (GetCommentContentReviewReq) returns (GetCommentContentReviewReply) {}

  rpc CommentContentIrregular(CommentContentIrregularReq)returns (google.protobuf.Empty){}

  rpc CreateCommentDraft(CreateCommentDraftReq) returns (CreateCommentDraftReply){}

  rpc CreateComment(CreateCommentReq) returns (google.protobuf.Empty){}

  rpc CreateSubComment(CreateSubCommentReq) returns (google.protobuf.Empty){}

  rpc CreateCommentDbAndCache(CreateCommentDbAndCacheReq) returns (CreateCommentDbAndCacheReply){}

  rpc CreateSubCommentDbAndCache(CreateSubCommentDbAndCacheReq) returns (CreateSubCommentDbAndCacheReply){}

  rpc SendComment(SendCommentReq) returns (google.protobuf.Empty){}

  rpc SendSubComment(SendSubCommentReq) returns (google.protobuf.Empty){}

  rpc SetCommentAgree(SetCommentAgreeReq) returns (google.protobuf.Empty){}

  rpc SetSubCommentAgree(SetSubCommentAgreeReq) returns (google.protobuf.Empty){}

  rpc SetCommentAgreeDbAndCache(SetCommentAgreeReq) returns (google.protobuf.Empty){}

  rpc SetSubCommentAgreeDbAndCache(SetSubCommentAgreeReq) returns (google.protobuf.Empty){}

  rpc CancelCommentAgree(CancelCommentAgreeReq) returns (google.protobuf.Empty){}

  rpc CancelSubCommentAgree(CancelSubCommentAgreeReq) returns (google.protobuf.Empty){}

  rpc CancelCommentAgreeDbAndCache(CancelCommentAgreeReq) returns (google.protobuf.Empty){}

  rpc CancelSubCommentAgreeDbAndCache(CancelSubCommentAgreeReq) returns (google.protobuf.Empty){}

  rpc AddCommentContentReviewDbAndCache(AddCommentContentReviewDbAndCacheReq)returns (google.protobuf.Empty){}

  rpc RemoveComment(RemoveCommentReq) returns (google.protobuf.Empty){}

  rpc RemoveSubComment(RemoveSubCommentReq) returns (google.protobuf.Empty){}

  rpc RemoveCommentDbAndCache(RemoveCommentDbAndCacheReq) returns (google.protobuf.Empty){}

  rpc RemoveSubCommentDbAndCache(RemoveSubCommentDbAndCacheReq) returns (google.protobuf.Empty){}

}

message CreateCommentDraftReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message CreateCommentDraftReply{
  int32 id = 1;
}

message GetLastCommentDraftReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetLastCommentDraftReply{
  int32 id = 1;
  int32 status = 2;
}

message GetUserCommentAgreeReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetUserCommentAgreeReply{
  map<int32, bool> agree = 1;
}

message GetCommentUserReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetCommentUserReply{
  int32 comment = 1;
  int32 article_reply = 2;
  int32 article_reply_sub = 3;
  int32 talk_reply = 4;
  int32 talk_reply_sub = 5;
  int32 article_replied = 6;
  int32 article_replied_sub = 7;
  int32 talk_replied = 8;
  int32 talk_replied_sub = 9;
}

message SendCommentReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string ip = 3 [(validate.rules).string.ip = true];
}

message SendSubCommentReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string ip = 3 [(validate.rules).string.ip = true];
}

message CreateCommentReq{
  int32 id = 1;
  int32 creationId = 2;
  int32 creationType = 3;
  string uuid = 4 [(validate.rules).string.uuid = true];
}

message CreateSubCommentReq{
  int32 id = 1;
  int32 rootId = 2;
  int32 parentId = 3;
  string uuid = 4 [(validate.rules).string.uuid = true];
}

message CreateCommentDbAndCacheReq{
  int32 id = 1;
  int32 creationId = 2;
  int32 creationType = 3;
  string uuid = 4 [(validate.rules).string.uuid = true];
}

message CreateCommentDbAndCacheReply{
  string author = 1;
}

message CreateSubCommentDbAndCacheReq{
  int32 id = 1;
  int32 rootId = 2;
  int32 parentId = 3;
  string uuid = 4 [(validate.rules).string.uuid = true];
}

message CreateSubCommentDbAndCacheReply{
  string root = 1;
  string parent = 2;
}

message GetCommentListReq{
  int32 page = 1;
  int32 creationId = 2;
  int32 creationType = 3;
}

message GetSubCommentListReq{
  int32 page = 1;
  int32 id = 2;
}

message GetCommentListReply{
  message Comment{
    int32 id = 1;
    string uuid = 2;
  }
  repeated Comment comment = 1;
}

message GetSubCommentListReply{
  message Comment{
    int32 id = 1;
    string uuid = 2;
    string reply = 3;
  }
  repeated Comment comment = 1;
}

message RemoveCommentDbAndCacheReq{
  int32 id = 1;
  int32 creationId = 2;
  int32 creationType = 3;
  string uuid = 4 [(validate.rules).string.uuid = true];
}

message RemoveSubCommentDbAndCacheReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetCommentListStatisticReq{
  repeated int32 ids = 1;
}

message GetUserCommentArticleReplyListReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}


message GetUserCommentArticleReplyListReply{
  message List{
    int32 id = 1;
    int32 creation_id = 2;
    string creation_author = 3;
  }
  repeated List list = 1;
}

message GetUserSubCommentArticleReplyListReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetUserSubCommentArticleReplyListReply{
  message List{
    int32 id = 1;
    int32 creation_id = 2;
    string creation_author = 3;
    int32 root_id = 4;
    string root_user = 5;
    int32 parent_id = 6;
    string reply = 7;
    string user_name = 8;
    string reply_name = 9;
    string root_name = 10;
  }
  repeated List list = 1;
}

message GetUserCommentTalkReplyListReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetUserCommentTalkReplyListReply{
  message List{
    int32 id = 1;
    int32 creation_id = 2;
    string creation_author = 3;
  }
  repeated List list = 1;
}

message GetUserSubCommentTalkReplyListReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetUserSubCommentTalkReplyListReply{
  message List{
    int32 id = 1;
    int32 creation_id = 2;
    string creation_author = 3;
    int32 root_id = 4;
    string root_user = 5;
    int32 parent_id = 6;
    string reply = 7;
    string user_name = 8;
    string reply_name = 9;
    string root_name = 10;
  }
  repeated List list = 1;
}

message GetUserCommentArticleRepliedListReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetUserCommentArticleRepliedListReply{
  message List{
    int32 id = 1;
    int32 creation_id = 2;
    string uuid = 3;
  }
  repeated List list = 1;
}

message GetUserSubCommentArticleRepliedListReq{
  int32 page = 1;
  string uuid = 2;
}

message GetUserSubCommentArticleRepliedListReply{
  message List{
    int32 id = 1;
    string uuid = 2;
    int32 creation_id = 3;
    string creation_author = 4;
    int32 root_id = 5;
    string root_user = 6;
    int32 parent_id = 7;
    string reply = 8;
    string user_name = 9;
    string reply_name = 10;
    string root_name = 11;
  }
  repeated List list = 1;
}

message GetUserCommentTalkRepliedListReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetUserCommentTalkRepliedListReply{
  message List{
    int32 id = 1;
    int32 creation_id = 2;
    string uuid = 3;
  }
  repeated List list = 1;
}

message GetUserSubCommentTalkRepliedListReq{
  int32 page = 1;
  string uuid = 2;
}

message GetUserSubCommentTalkRepliedListReply{
  message List{
    int32 id = 1;
    string uuid = 2;
    int32 creation_id = 3;
    string creation_author = 4;
    int32 root_id = 5;
    string root_user = 6;
    int32 parent_id = 7;
    string reply = 8;
    string user_name = 9;
    string reply_name = 10;
    string root_name = 11;
  }
  repeated List list = 1;
}

message GetUserCommentRepliedListReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetUserCommentRepliedListReply{
  message List{
    int32 id = 1;
    int32 creation_id = 2;
    int32 creation_type = 3;
    string uuid = 4;
  }
  repeated List list = 1;
}

message GetUserSubCommentRepliedListReq{
  int32 page = 1;
  string uuid = 2;
}

message GetUserSubCommentRepliedListReply{
  message List{
    int32 id = 1;
    string uuid = 2;
    int32 creation_id = 3;
    int32 creation_type = 4;
    string creation_author = 5;
    int32 root_id = 6;
    string root_user = 7;
    int32 parent_id = 8;
    string reply = 9;
    string user_name = 10;
    string reply_name = 11;
    string root_name = 12;
  }
  repeated List list = 1;
}

message GetCommentContentReviewReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetCommentContentReviewReply{
  message Review {
    int32 id = 1;
    int32 comment_id = 2;
    string comment = 3;
    string kind = 4;
    string uuid = 5;
    string create_at = 6;
    string job_id = 7;
    string label = 8;
    int32 result = 9;
    string section = 10;
  }
  repeated Review review = 1;
}

message CommentContentIrregularReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string job_id = 2 [(validate.rules).string = {max_len: 1000}];
  string label = 3 [(validate.rules).string = {max_len: 1000}];
  string kind = 4 [(validate.rules).string = {in: ["comment", "sub_comment"]}];
  string comment = 5 [(validate.rules).string = {max_len: 1000}];
  int32 result = 6;
  int32 id = 7;
  string section = 8;
}

message GetCommentListStatisticReply{
  message Count{
    int32 id = 1;
    int32 agree = 2;
    int32 comment = 5;
  }
  repeated Count count = 1;
}

message SetCommentAgreeReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string user_uuid = 3 [(validate.rules).string.uuid = true];
  int32 creationId = 4;
  int32 creationType = 5;
}

message SetSubCommentAgreeReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string user_uuid = 3 [(validate.rules).string.uuid = true];
}

message CancelCommentAgreeReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string user_uuid = 3 [(validate.rules).string.uuid = true];
  int32 creationId = 4;
  int32 creationType = 5;
}

message CancelSubCommentAgreeReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
  string user_uuid = 3 [(validate.rules).string.uuid = true];
}


message AddCommentContentReviewDbAndCacheReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string job_id = 2 [(validate.rules).string = {max_len: 1000}];
  string label = 3 [(validate.rules).string = {max_len: 1000}];
  string kind = 4 [(validate.rules).string = {in: ["comment", "sub_comment"]}];
  string comment = 5 [(validate.rules).string = {max_len: 50}];
  int32 result = 6;
  int32 comment_id = 7;
  string section = 8;
}

message RemoveCommentReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message RemoveSubCommentReq{
  int32 id = 1;
  string uuid = 3 [(validate.rules).string.uuid = true];
}