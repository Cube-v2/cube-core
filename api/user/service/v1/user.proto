syntax = "proto3";

package user.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "api/user/service/v1;v1";

service User {
  rpc LoginByPassword (LoginByPasswordReq) returns (LoginReply) {
    option (google.api.http) = {
      post: "/v1/login/password"
      body: "*"
    };
  }
  rpc LoginByCode (LoginByCodeReq) returns (LoginReply) {
    option (google.api.http) = {
      post: "/v1/login/code"
      body: "*"
    };
  }
  rpc LoginByWeChat (LoginByWeChatReq) returns (LoginReply) {
    option (google.api.http) = {
      post: "/v1/login/wechat"
      body: "*"
    };
  }
  rpc LoginByGithub (LoginByGithubReq) returns (LoginReply) {
    option (google.api.http) = {
      post: "/v1/login/github"
      body: "*"
    };
  }
  rpc LoginPassWordForget (LoginPassWordForgetReq) returns (LoginReply) {
    option (google.api.http) = {
      post: "/v1/login/modify/password"
      body: "*"
    };
  }
  rpc SendCode (SendCodeReq) returns (SendCodeReply) {
    option (google.api.http) = {
      post: "/v1/user/code"
      body: "*"
    };
  }
  rpc GetUser (GetUserReq) returns (GetUserReply) {
    option (google.api.http) = {
      post: "/v1/user/get"
      body: "*"
    };
  }
  rpc getUserProfile (GetUserProfileReq) returns (GetUserProfileReply) {
    option (google.api.http) = {
      post: "/v1/user/profile"
      body: "*"
    };
  }
  rpc getUserAchievement (GetUserAchievementReq) returns (GetUserAchievementReply) {
    option (google.api.http) = {
      post: "/v1/user/achieve"
      body: "*"
    };
  }
}


message LoginByPasswordReq {
  string account = 1 [(validate.rules).string = {email:true, pattern:"^[0-9]+$"}];
  string password = 2 [(validate.rules).string.min_len = 1];
  string mode = 3 [(validate.rules).string = {in: ["phone", "email"]}];
}

message LoginByCodeReq {
  string account = 1;
  string code = 2;
  string mode = 3 [(validate.rules).string = {in: ["phone", "email"]}];
}

message LoginReply {
  int64 id = 1;
  string token = 2;
}

message LoginByWeChatReq{
  string wechat = 1;
}

message LoginByGithubReq{
  string github = 1;
}

message LoginPassWordForgetReq{
  string account = 1;
  string code = 2;
  string password = 3;
  string mode = 4;
}

message SendCodeReq{
  string account = 1;
  string mode = 2;
  int64 template = 3;
}

message SendCodeReply{
  string code = 3;
}

message GetUserReq{
  int64 id = 1;
}

message GetUserReply{
  string phone = 1;
  string email = 2;
  string wechat = 3;
  string github = 4;
}

message GetUserProfileReq{
  int64 id = 1;
}

message GetUserProfileReply{
  string sex = 1;
  string introduce = 2;
  string address = 3;
  string industry = 4;
  string profile = 5;
  string tag = 6;
  string background = 7;
  string image = 8;
  string username = 9;
}

message GetUserAchievementReq{
  int64 id = 1;
}

message GetUserAchievementReply{
  int64 follow = 1;
  int64 followed = 2;
  int64 agree = 3;
  int64 collect = 4;
  int64 view = 5;
}
