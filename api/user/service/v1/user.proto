syntax = "proto3";

package user.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";

option go_package = "api/user/service/v1;v1";

service User {

  rpc GetHealth(google.protobuf.Empty) returns (google.protobuf.Empty){
    option (google.api.http) = {
      get: "/v1/get/user/healthz"
    };
  }

  rpc UserRegister (UserRegisterReq) returns (google.protobuf.Empty){}

  rpc AvatarIrregular (AvatarIrregularReq) returns (google.protobuf.Empty){}

  rpc AddAvatarReviewDbAndCache (AddAvatarReviewDbAndCacheReq) returns (google.protobuf.Empty){}

  rpc CoverIrregular (CoverIrregularReq) returns (google.protobuf.Empty){}

  rpc AddCoverReviewDbAndCache (AddCoverReviewDbAndCacheReq) returns (google.protobuf.Empty){}

  rpc LoginByPassword (LoginByPasswordReq) returns (LoginReply) {}

  rpc LoginByCode (LoginByCodeReq) returns (LoginReply) {}

  rpc LoginByWeChat (LoginByWeChatReq) returns (LoginReply) {}

  rpc LoginByGithub (LoginByGithubReq) returns (LoginReply) {}

  rpc LoginPasswordReset(LoginPasswordResetReq) returns (google.protobuf.Empty){}

  rpc SendPhoneCode (SendPhoneCodeReq) returns (google.protobuf.Empty){}

  rpc SendEmailCode (SendEmailCodeReq) returns (google.protobuf.Empty) {}

  rpc GetCosSessionKey (GetCosSessionKeyReq) returns (GetCosSessionKeyReply) {}

  rpc SetUserPhone (SetUserPhoneReq) returns (google.protobuf.Empty) {}

  rpc SetUserEmail (SetUserEmailReq) returns (google.protobuf.Empty) {}

  rpc SetUserPassword (SetUserPasswordReq) returns (google.protobuf.Empty) {}

  rpc SetUserFollow (SetUserFollowReq) returns (google.protobuf.Empty) {}

  rpc SetFollowDbAndCache (SetFollowDbAndCacheReq) returns (google.protobuf.Empty) {}

  rpc CancelUserFollow (CancelUserFollowReq) returns (google.protobuf.Empty) {}

  rpc CancelFollowDbAndCache (CancelFollowDbAndCacheReq) returns (google.protobuf.Empty) {}

  rpc GetAccount (GetAccountReq) returns (GetAccountReply) {}

  rpc GetProfile (GetProfileReq) returns (GetProfileReply) {}

  rpc GetProfileList (GetProfileListReq) returns (GetProfileListReply) {}

  rpc GetProfileUpdate (GetProfileUpdateReq) returns (GetProfileUpdateReply) {}

  rpc GetUserFollow (GetUserFollowReq) returns (GetUserFollowReply) {}

  rpc GetFollowList (GetFollowListReq) returns (GetFollowListReply) {}

  rpc GetFollowListCount (GetFollowListCountReq) returns (GetFollowListCountReply) {}

  rpc GetFollowedList (GetFollowedListReq) returns (GetFollowedListReply) {}

  rpc GetFollowedListCount (GetFollowedListCountReq) returns (GetFollowedListCountReply) {}

  rpc GetUserFollows (GetUserFollowsReq) returns (GetUserFollowsReply) {}

  rpc GetUserSearch (GetUserSearchReq)returns (GetUserSearchReply){}

  rpc GetAvatarReview (GetAvatarReviewReq)returns (GetAvatarReviewReply){}

  rpc GetCoverReview (GetCoverReviewReq) returns (GetCoverReviewReply) {}

  rpc SetProfileUpdate (SetProfileUpdateReq) returns (google.protobuf.Empty) {}

  rpc ProfileReviewPass (ProfileReviewPassReq) returns (google.protobuf.Empty) {}

  rpc ProfileReviewNotPass (ProfileReviewNotPassReq) returns (google.protobuf.Empty){}

  rpc ChangeUserPassword (ChangeUserPasswordReq) returns (google.protobuf.Empty) {}

  rpc UnbindUserPhone (UnbindUserPhoneReq) returns (google.protobuf.Empty){}

  rpc UnbindUserEmail (UnbindUserEmailReq) returns (google.protobuf.Empty){}
}

message UserRegisterReq{
  string email = 1 [(validate.rules).string = {pattern: "\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*", max_len: 50}];
  string password = 2 [(validate.rules).string = {min_len:1, max_len: 20}];
  string code = 3 [(validate.rules).string.pattern = "^[0-9]+$"];
}

message AvatarIrregularReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string job_id = 2 [(validate.rules).string = {max_len: 1000}];
  string url = 3 [(validate.rules).string = {max_len: 1000}];
  string label = 4 [(validate.rules).string = {max_len: 1000}];
  int32 result = 5;
  int32 score = 6;
  string category = 7 [(validate.rules).string = {max_len: 1000}];
  string subLabel = 8 [(validate.rules).string = {max_len: 1000}];
}

message AddAvatarReviewDbAndCacheReq{
  string uuid = 1;
  string job_id = 2;
  string url = 3;
  string label = 4;
  int32 result = 5;
  int32 score = 6;
  string category = 7;
  string subLabel = 8;
}

message CoverIrregularReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string job_id = 2 [(validate.rules).string = {max_len: 1000}];
  string url = 3 [(validate.rules).string = {max_len: 1000}];
  string label = 4 [(validate.rules).string = {max_len: 1000}];
  int32 result = 5;
  int32 score = 6;
  string category = 7 [(validate.rules).string = {max_len: 1000}];
  string subLabel = 8 [(validate.rules).string = {max_len: 1000}];
}

message AddCoverReviewDbAndCacheReq{
  string uuid = 1;
  string job_id = 2;
  string url = 3;
  string label = 4;
  int32 result = 5;
  int32 score = 6;
  string category = 7;
  string subLabel = 8;
}

message LoginByPasswordReq {
  string account = 1 [(validate.rules).string = {pattern: "^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\\d{8}$|\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*", max_len:50}];
  string password = 2 [(validate.rules).string = {min_len:1, max_len: 20}];
  string mode = 3 [(validate.rules).string = {in: ["phone", "email"]}];
}

message LoginByCodeReq {
  string phone = 1 [(validate.rules).string.pattern = "^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\\d{8}$"];
  string code = 2 [(validate.rules).string.pattern = "^[0-9]{6}$"];
}

message LoginReply {
  string token = 1;
}

message LoginByWeChatReq{
  string wechat = 1;
}

message LoginByGithubReq{
  string github = 1;
}

message LoginPasswordResetReq{
  string account = 1 [(validate.rules).string = {pattern: "^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\\d{8}$|\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*", max_len:50}];
  string code = 2 [(validate.rules).string.pattern = "^[0-9]{6}$"];
  string password = 3 [(validate.rules).string = {min_len:1, max_len: 20}];
  string mode = 4 [(validate.rules).string = {in: ["phone", "email"]}];
}

message SendPhoneCodeReq{
  string phone = 1 [(validate.rules).string = {pattern: "^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\\d{8}$", min_len:1, max_len:50}];
  string template = 2 [(validate.rules).string = {in: ["1", "2", "3", "4"]}];
}

message SendEmailCodeReq{
  string email = 1 [(validate.rules).string = {pattern: "\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*", max_len: 50}];
  string template = 2 [(validate.rules).string = {in: ["1", "2", "3", "4", "5"]}];
}

message GetCosSessionKeyReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetCosSessionKeyReply{
  string tmp_secret_id = 1;
  string tmp_secret_key = 2;
  string session_token = 3;
  int64 start_time = 4;
  int64 expired_time = 5;
}

message SetUserPhoneReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string phone = 2 [(validate.rules).string = {pattern: "^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\\d{8}$", min_len:1, max_len:50}];
  string code = 3 [(validate.rules).string.pattern = "^[0-9]{6}$"];
}

message SetUserEmailReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string email = 2 [(validate.rules).string = {pattern: "\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*", max_len: 50}];
  string code = 3 [(validate.rules).string.pattern = "^[0-9]{6}$"];
}

message SetUserPasswordReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string password = 2 [(validate.rules).string = {min_len:1, max_len: 20}];
}

message SetUserFollowReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string user_uuid = 2 [(validate.rules).string.uuid = true];
}

message SetFollowDbAndCacheReq{
  string uuid = 1[(validate.rules).string.uuid = true];
  string user_uuid = 2 [(validate.rules).string.uuid = true];
}

message CancelUserFollowReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string user_uuid = 2 [(validate.rules).string.uuid = true];
}

message CancelFollowDbAndCacheReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string user_uuid = 2 [(validate.rules).string.uuid = true];
}

message ChangeUserPasswordReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string oldpassword = 2 [(validate.rules).string = {min_len:1, max_len: 20}];
  string password = 3 [(validate.rules).string = {min_len:1, max_len: 20}];
}

message UnbindUserPhoneReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string phone = 2 [(validate.rules).string = {pattern: "^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\\d{8}$", min_len:1, max_len:50}];
  string code = 3 [(validate.rules).string.pattern = "^[0-9]{6}$"];
}

message UnbindUserEmailReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string email = 2 [(validate.rules).string = {pattern: "\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*", max_len: 50}];
  string code = 3 [(validate.rules).string.pattern = "^[0-9]{6}$"];
}

message GetAccountReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetAccountReply{
  string phone = 1;
  string email = 2;
  string qq = 3;
  string wechat = 4;
  string weibo = 5;
  string github = 6;
  string password = 7;
}

message GetProfileReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetProfileReply{
  string uuid = 1;
  string username = 2;
  string avatar = 3;
  string school = 4;
  string company = 5;
  string job = 6;
  string homepage = 7;
  string introduce = 8;
  string created = 9;
}

message GetProfileListReq{
  repeated string uuids = 1;
}

message GetProfileListReply{
  message Profile{
    string uuid = 1;
    string username = 2;
    string introduce = 3;
  }
  repeated Profile profile = 1;
}

message GetProfileUpdateReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetProfileUpdateReply{
  string username = 1;
  string avatar = 2;
  string school = 3;
  string company = 4;
  string job = 5;
  string homepage = 6;
  string introduce = 7;
  int32 status = 8;
}

message GetUserFollowReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string user_uuid = 2 [(validate.rules).string.uuid = true];
}

message GetUserFollowReply{
  bool follow = 1;
}

message GetFollowListReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetFollowListReply{
  message Follow{
    string uuid = 1;
  }
  repeated Follow follow = 1;
}

message GetFollowListCountReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetFollowListCountReply{
  int32 count = 1;
}

message GetFollowedListReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetFollowedListReply{
  message Follow{
    string uuid = 1;
  }
  repeated Follow follow = 1;
}

message GetFollowedListCountReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetFollowedListCountReply{
  int32 count = 1;
}

message GetUserFollowsReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetUserFollowsReply{
  map<string, bool> follows = 1;
}

message GetUserSearchReq{
  int32 page = 1;
  string search = 2;
}

message GetUserSearchReply{
  message List{
    string uuid = 1;
    string username = 2;
    string introduce = 3;
  }
  repeated List list = 1;
  int32 total = 2;
}

message GetAvatarReviewReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetAvatarReviewReply{
  message Review {
    int32 id = 1;
    string uuid = 2;
    string create_at = 3;
    string job_id = 4;
    string url = 5;
    string label = 6;
    int32 result = 7;
    int32 score = 8;
    string category = 9;
    string subLabel = 10;
  }
  repeated Review review = 1;
}

message GetCoverReviewReq{
  int32 page = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetCoverReviewReply{
  message Review {
    int32 id = 1;
    string uuid = 2;
    string create_at = 3;
    string job_id = 4;
    string url = 5;
    string label = 6;
    int32 result = 7;
    int32 score = 8;
    string category = 9;
    string subLabel = 10;
  }
  repeated Review review = 1;
}

message SetProfileUpdateReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string username = 2 [(validate.rules).string = {min_len:1, max_len: 20}];
  string school = 3 [(validate.rules).string = {min_len:0, max_len: 50}];
  string company = 4 [(validate.rules).string = {min_len:0, max_len: 50}];
  string job = 5 [(validate.rules).string = {min_len:0, max_len: 50}];
  string homepage = 6 [(validate.rules).string = {min_len:0, max_len: 100}];
  string introduce = 7 [(validate.rules).string = {min_len:0, max_len: 100}];
}

message ProfileReviewPassReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
  string update = 2 [(validate.rules).string = {max_len: 20}];
}

message ProfileReviewNotPassReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}
