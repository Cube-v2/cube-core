syntax = "proto3";

package bff.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

option go_package = "api/bff/interface/v1;v1";

service Bff{
  // --------------------user service------------------------

  rpc UserRegister(UserRegisterReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/user/register"
      body: "*"
    };
  }

  rpc LoginByPassword (LoginByPasswordReq) returns (LoginReply) {
    option (google.api.http) = {
      post: "/v1/user/login/password"
      body: "*"
    };
  }

  rpc LoginByCode (LoginByCodeReq) returns (LoginReply) {
    option (google.api.http) = {
      post: "/v1/user/login/code"
      body: "*"
    };
  }

  rpc LoginByWeChat (LoginByWeChatReq) returns (LoginReply) {
    option (google.api.http) = {
      post: "/v1/user/login/wechat"
      body: "*"
    };
  }

  rpc LoginByGithub (LoginByGithubReq) returns (LoginReply) {
    option (google.api.http) = {
      post: "/v1/user/login/github"
      body: "*"
    };
  }

  rpc LoginPasswordReset(LoginPasswordResetReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/user/login/password/reset"
      body: "*"
    };
  }

  rpc SendPhoneCode (SendPhoneCodeReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/user/code/phone"
      body: "*"
    };
  }

  rpc SendEmailCode (SendEmailCodeReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/user/code/email"
      body: "*"
    };
  }

  rpc GetCosSessionKey (google.protobuf.Empty) returns (GetCosSessionKeyReply) {
    option (google.api.http) = {
      get: "/v1/get/cos/session/key",
    };
  }

  rpc GetAccount (google.protobuf.Empty) returns (GetAccountReply) {
    option (google.api.http) = {
      get: "/v1/get/user/account",
    };
  }

  rpc GetProfile (google.protobuf.Empty) returns (GetProfileReply) {
    option (google.api.http) = {
      get: "/v1/get/user/profile",
    };
  }

  rpc GetUserInfo (GetUserInfoReq) returns (GetUserInfoReply) {
    option (google.api.http) = {
      get: "/v1/get/user/info",
    };
  }

  rpc GetProfileUpdate (google.protobuf.Empty) returns (GetProfileUpdateReply) {
    option (google.api.http) = {
      get: "/v1/get/user/profile/update",
    };
  }

  rpc SetProfileUpdate (SetProfileUpdateReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/set/user/profile/update"
      body: "*"
    };
  }

  rpc SetUserPhone (SetUserPhoneReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/set/user/phone"
      body: "*"
    };
  }

  rpc SetUserEmail (SetUserEmailReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/set/user/email"
      body: "*"
    };
  }

  rpc SetUserPassword (SetUserPasswordReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/set/user/password"
      body: "*"
    };
  }

  rpc ChangeUserPassword (ChangeUserPasswordReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/change/user/password"
      body: "*"
    };
  }

  rpc UnbindUserPhone(UnbindUserPhoneReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/unbind/user/phone"
      body: "*"
    };
  }

  rpc UnbindUserEmail(UnbindUserEmailReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/unbind/user/email"
      body: "*"
    };
  }

  // --------------------creation service------------------------

  // -------------------------creation----------------------------
  rpc GetLeaderBoard(google.protobuf.Empty) returns (GetLeaderBoardReply){
    option (google.api.http) = {
      get: "/v1/get/leaderboard"
    };
  }

  rpc GetCollectArticle(GetCollectArticleReq) returns (GetArticleListReply){
    option (google.api.http) = {
      get: "/v1/get/collect/article"
    };
  }

  rpc GetCollectArticleCount(GetCollectArticleCountReq) returns (GetCollectArticleCountReply){
    option (google.api.http) = {
      get: "/v1/get/collect/article/count"
    };
  }

  rpc GetCollectTalk(GetCollectTalkReq) returns (GetTalkListReply){
    option (google.api.http) = {
      get: "/v1/get/collect/talk"
    };
  }

  rpc GetCollectTalkCount(GetCollectTalkCountReq) returns (GetCollectTalkCountReply){
    option (google.api.http) = {
      get: "/v1/get/collect/talk/count"
    };
  }

  rpc GetCollection(GetCollectionReq) returns (GetCollectionReply){
    option (google.api.http) = {
      get: "/v1/get/collection"
    };
  }

  rpc GetCollections(GetCollectionsReq) returns (GetCollectionsReply){
    option (google.api.http) = {
      post: "/v1/get/collections"
      body: "*"
    };
  }

  rpc GetCollectionsCount(google.protobuf.Empty) returns (GetCollectionsCountReply){
    option (google.api.http) = {
      post: "/v1/get/collections/count"
      body: "*"
    };
  }

  rpc GetCollectionsByVisitor(GetCollectionsByVisitorReq) returns (GetCollectionsReply){
    option (google.api.http) = {
      get: "/v1/get/collections/visitor"
    };
  }

  rpc GetCollectionsVisitorCount(GetCollectionsVisitorCountReq) returns (GetCollectionsCountReply){
    option (google.api.http) = {
      get: "/v1/get/collections/visitor/count"
    };
  }

  rpc CreateCollections(CreateCollectionsReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/create/collections"
      body: "*"
    };
  }

  rpc EditCollections(EditCollectionsReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/edit/collections"
      body: "*"
    };
  }

  rpc DeleteCollections(DeleteCollectionsReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/delete/collections"
      body: "*"
    };
  }

  // -------------------------article----------------------------

  rpc GetArticleList(GetArticleListReq) returns (GetArticleListReply){
    option (google.api.http) = {
      get: "/v1/get/article/list"
    };
  }

  rpc GetArticleListHot(GetArticleListHotReq) returns (GetArticleListHotReply){
    option (google.api.http) = {
      get: "/v1/get/article/list/hot"
    };
  }

  rpc GetArticleCount(google.protobuf.Empty) returns (GetArticleCountReply){
    option (google.api.http) = {
      post: "/v1/get/article/count"
      body: "*"
    };
  }

  rpc GetArticleCountVisitor(GetArticleCountVisitorReq) returns (GetArticleCountReply){
    option (google.api.http) = {
      post: "/v1/get/article/count/visitor"
      body: "*"
    };
  }

  rpc GetUserArticleList(GetUserArticleListReq) returns (GetArticleListReply){
    option (google.api.http) = {
      post: "/v1/get/user/article/list",
      body: "*"
    };
  }

  rpc GetUserArticleListVisitor(GetUserArticleListVisitorReq) returns (GetArticleListReply){
    option (google.api.http) = {
      get: "/v1/get/user/article/list/visitor"
    };
  }

  rpc GetArticleStatistic(GetArticleStatisticReq)returns (GetArticleStatisticReply){
    option (google.api.http) = {
      get: "/v1/get/article/statistic"
    };
  }

  rpc GetArticleListStatistic(GetArticleListStatisticReq)returns (GetArticleListStatisticReply){
    option (google.api.http) = {
      get: "/v1/get/article/list/statistic"
    };
  }

  rpc GetLastArticleDraft(google.protobuf.Empty) returns (GetLastArticleDraftReply){
    option (google.api.http) = {
      get: "/v1/get/last/article/draft"
    };
  }

  rpc CreateArticleDraft(google.protobuf.Empty) returns (CreateArticleDraftReply){
    option (google.api.http) = {
      post: "/v1/create/article/draft"
      body: "*"
    };
  }

  rpc ArticleDraftMark(ArticleDraftMarkReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/article/draft/mark"
      body: "*"
    };
  }

  rpc GetArticleDraftList(google.protobuf.Empty) returns (GetArticleDraftListReply){
    option (google.api.http) = {
      get: "/v1/get/article/draft/list"
    };
  }

  rpc SendArticle(SendArticleReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/send/article"
      body: "*"
    };
  }

  rpc SendArticleEdit(SendArticleEditReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/send/article/edit"
      body: "*"
    };
  }

  rpc DeleteArticle(DeleteArticleReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/delete/article"
      body: "*"
    };
  }

  rpc SetArticleAgree(SetArticleAgreeReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/set/article/agree"
      body: "*"
    };
  }

  rpc SetArticleView(SetArticleViewReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/set/article/view"
      body: "*"
    };
  }

  rpc SetArticleCollect(SetArticleCollectReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/set/article/collect"
      body: "*"
    };
  }

  rpc CancelArticleAgree(CancelArticleAgreeReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/cancel/article/agree"
      body: "*"
    };
  }

  rpc CancelArticleCollect(CancelArticleCollectReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/cancel/article/collect"
      body: "*"
    };
  }

  rpc ArticleStatisticJudge(ArticleStatisticJudgeReq) returns (ArticleStatisticJudgeReply){
    option (google.api.http) = {
      post: "/v1/article/statistic/judge"
      body: "*"
    };
  }

  // -------------------------talk----------------------------

  rpc GetTalkList(GetTalkListReq) returns (GetTalkListReply){
    option (google.api.http) = {
      get: "/v1/get/talk/list"
    };
  }

  rpc GetTalkListHot(GetTalkListHotReq) returns (GetTalkListHotReply){
    option (google.api.http) = {
      get: "/v1/get/talk/list/hot"
    };
  }

  rpc GetTalkListStatistic(GetTalkListStatisticReq)returns (GetTalkListStatisticReply){
    option (google.api.http) = {
      get: "/v1/get/talk/list/statistic"
    };
  }

  rpc GetUserTalkList(GetUserTalkListReq) returns (GetTalkListReply){
    option (google.api.http) = {
      post: "/v1/get/user/talk/list",
      body: "*"
    };
  }

  rpc GetUserTalkListVisitor(GetUserTalkListVisitorReq) returns (GetTalkListReply){
    option (google.api.http) = {
      get: "/v1/get/user/talk/list/visitor"
    };
  }

  rpc GetTalkCount(google.protobuf.Empty) returns (GetTalkCountReply){
    option (google.api.http) = {
      post: "/v1/get/talk/count"
      body: "*"
    };
  }

  rpc GetTalkCountVisitor(GetTalkCountVisitorReq) returns (GetTalkCountReply){
    option (google.api.http) = {
      post: "/v1/get/talk/count/visitor"
      body: "*"
    };
  }

  rpc GetTalkStatistic(GetTalkStatisticReq)returns (GetTalkStatisticReply){
    option (google.api.http) = {
      get: "/v1/get/talk/statistic"
    };
  }

  rpc GetLastTalkDraft(google.protobuf.Empty) returns (GetLastTalkDraftReply){
    option (google.api.http) = {
      get: "/v1/get/last/talk/draft"
    };
  }

  rpc CreateTalkDraft(google.protobuf.Empty) returns (CreateTalkDraftReply){
    option (google.api.http) = {
      post: "/v1/create/talk/draft"
      body: "*"
    };
  }

  rpc SendTalk(SendTalkReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/send/talk"
      body: "*"
    };
  }

  rpc SendTalkEdit(SendTalkEditReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/send/talk/edit"
      body: "*"
    };
  }

  rpc DeleteTalk(DeleteTalkReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/delete/talk"
      body: "*"
    };
  }

  rpc SetTalkView(SetTalkViewReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/set/talk/view"
      body: "*"
    };
  }

  rpc TalkStatisticJudge(TalkStatisticJudgeReq) returns (TalkStatisticJudgeReply){
    option (google.api.http) = {
      post: "/v1/talk/statistic/judge"
      body: "*"
    };
  }

  rpc SetTalkAgree(SetTalkAgreeReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/set/talk/agree"
      body: "*"
    };
  }

  rpc SetTalkCollect(SetTalkCollectReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/set/talk/collect"
      body: "*"
    };
  }

  rpc CancelTalkAgree(CancelTalkAgreeReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/cancel/talk/agree"
      body: "*"
    };
  }

  rpc CancelTalkCollect(CancelTalkCollectReq) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/cancel/talk/collect"
      body: "*"
    };
  }
}

// --------------------user service-------------------------

message UserRegisterReq{
  string email = 1;
  string password = 2;
  string code = 3;
}

message LoginByPasswordReq {
  string account = 1;
  string password = 2;
  string mode = 3;
}

message LoginByCodeReq {
  string phone = 1;
  string code = 2;
}

message LoginByWeChatReq{
  string wechat = 1;
}

message LoginByGithubReq{
  string github = 1;
}

message LoginReply {
  string token = 1;
}

message LoginPasswordResetReq{
  string account = 1;
  string code = 2;
  string password = 3;
  string mode = 4;
}

message SendPhoneCodeReq{
  string phone = 1;
  string template = 2;
}

message SendEmailCodeReq{
  string email = 1;
  string template = 2;
}

message GetCosSessionKeyReply{
  string tmp_secret_id = 1;
  string tmp_secret_key = 2;
  string session_token = 3;
  int64 start_time = 4;
  int64 expired_time = 5;
}

message GetAccountReply{
  string phone = 1;
  string email = 2;
  string qq = 3;
  string wechat = 4;
  string weibo = 5;
  string github = 6;
  string password = 7;
}

message GetProfileReply{
  string uuid = 1;
  string username = 2;
  string avatar = 3;
  string school = 4;
  string company = 5;
  string job = 6;
  string homepage = 7;
  string introduce = 8;
}

message GetUserInfoReq{
  string uuid = 1;
}

message GetUserInfoReply{
  string username = 2;
  string avatar = 3;
  string school = 4;
  string company = 5;
  string job = 6;
  string homepage = 7;
  string introduce = 8;
  string created = 9;
}

message GetProfileUpdateReply{
  string username = 1;
  string avatar = 2;
  string school = 3;
  string company = 4;
  string job = 5;
  string homepage = 6;
  string introduce = 7;
  int32 status = 8;
}

message SetProfileUpdateReq{
  string username = 1;
  string school = 2;
  string company = 3;
  string job = 4;
  string homepage = 5;
  string introduce = 6;
}

message SetUserPhoneReq{
  string phone = 1;
  string code = 2;
}

message SetUserEmailReq{
  string email = 1;
  string code = 2;
}

message SetUserPasswordReq{
  string password = 1;
}

message ChangeUserPasswordReq{
  string oldpassword = 1;
  string password = 2;
}

message UnbindUserPhoneReq{
  string phone = 1;
  string code = 2;
}

message UnbindUserEmailReq{
  string email = 1;
  string code = 2;
}


// --------------------creation service-------------------------

message GetLeaderBoardReply{
  message Board{
    int32 id = 1;
    string uuid = 2;
    string mode = 3;
  }
  repeated Board board = 1;
}

message GetCollectArticleReq{
  int32 id = 1;
  int32 page = 2;
}

message GetCollectArticleCountReq{
  int32 id = 1;
}

message GetCollectArticleCountReply{
  int32 count = 1;
}

message GetCollectTalkReq{
  int32 id = 1;
  int32 page = 2;
}

message GetCollectTalkCountReq{
  int32 id = 1;
}

message GetCollectTalkCountReply{
  int32 count = 1;
}

message GetCollectionReq{
  int32 id = 1;
  string uuid = 2;
}

message GetCollectionReply{
  string uuid = 1;
  string name = 2;
  string introduce = 3;
  int32 auth = 4;
}

message GetArticleListReq{
  int32 page = 1;
}

message GetArticleListReply{
  message Article{
    int32 id = 1;
    string uuid = 2;
  }
  repeated Article article = 1;
}

message GetArticleCountReply{
  int32 count = 1;
}

message GetArticleCountVisitorReq{
  string uuid = 1;
}

message GetArticleListHotReq{
  int32 page = 1;
}

message GetArticleListHotReply{
  message Article{
    int32 id = 1;
    string uuid = 2;
  }
  repeated Article article = 1;
}

message GetUserArticleListReq{
  int32 page = 1;
}

message GetUserArticleListVisitorReq{
  int32 page = 1;
  string uuid = 2;
}

message GetArticleStatisticReq{
  int32 id = 1;
}

message GetArticleStatisticReply{
  string uuid = 1;
  int32 agree = 2;
  int32 collect = 3;
  int32 view = 4;
  int32  comment = 5;
}

message GetArticleListStatisticReq{
  repeated int32 ids = 1;
}

message GetArticleListStatisticReply{
  message Count{
    int32 id = 1;
    int32 agree = 2;
    int32 collect = 3;
    int32 view = 4;
    int32 comment = 5;
  }
  repeated Count count = 1;
}

message GetLastArticleDraftReply{
  int32 id = 1;
  int32 status = 2;
}

message CreateArticleDraftReply{
  int32 id = 1;
}

message GetCollectionsReq{
  int32 page = 1;
}

message GetCollectionsReply{
  message Collections {
    int32 id = 1;
    string name = 2;
    string introduce = 3;
  }
  repeated Collections collections = 1;
}

message GetCollectionsVisitorCountReq{
  string uuid = 1;
}

message GetCollectionsCountReply{
  int32 count = 1;
}

message GetCollectionsByVisitorReq{
  string uuid = 1;
  int32 page = 2;
}

message CreateCollectionsReq{
  string name = 1;
  string introduce = 2;
  int32 auth = 3;
}

message EditCollectionsReq{
  int32 id = 1;
  string name = 2;
  string introduce = 3;
  int32 auth = 4;
}

message DeleteCollectionsReq{
  int32 id = 1;
}

message ArticleDraftMarkReq{
  int32 id = 1;
}

message GetArticleDraftListReply{
  message Draft{
    int32 id = 1;
  }
  repeated Draft draft = 1;
}

message SendArticleReq{
  int32 id = 1;
}

message SendArticleEditReq{
  int32 id = 1;
}

message DeleteArticleReq{
  int32 id = 1;
}

message SetArticleAgreeReq{
  int32 id = 1;
  string uuid = 2;
}

message SetArticleViewReq{
  int32 id = 1;
  string uuid = 2;
}

message SetArticleCollectReq{
  int32 id = 1;
  int32 collections_id = 2;
  string uuid = 3;
}

message CancelArticleAgreeReq{
  int32 id = 1;
  string uuid = 2;
}

message CancelArticleCollectReq{
  int32 id = 1;
  string uuid = 2;
}

message ArticleStatisticJudgeReq{
  int32 id = 1;
}

message ArticleStatisticJudgeReply{
  bool agree = 1;
  bool collect = 2;
}

message GetTalkListReq{
  int32 page = 1;
}

message GetTalkListReply{
  message Talk{
    int32 id = 1;
    string uuid = 2;
  }
  repeated Talk talk = 1;
}

message GetTalkCountReply{
  int32 count = 1;
}

message GetTalkCountVisitorReq{
  string uuid = 1;
}

message GetTalkListHotReq{
  int32 page = 1;
}

message GetTalkListHotReply{
  message Talk{
    int32 id = 1;
    string uuid = 2;
  }
  repeated Talk talk = 1;
}

message GetTalkListStatisticReq{
  repeated int32 ids = 1;
}

message GetTalkListStatisticReply{
  message Count{
    int32 id = 1;
    int32 agree = 2;
    int32 collect = 3;
    int32 view = 4;
    int32 comment = 5;
  }
  repeated Count count = 1;
}

message GetUserTalkListReq{
  int32 page = 1;
}

message GetUserTalkListVisitorReq{
  int32 page = 1;
  string uuid = 2;
}

message GetTalkStatisticReq{
  int32 id = 1;
}

message GetTalkStatisticReply{
  string uuid = 1;
  int32 agree = 2;
  int32 collect = 3;
  int32 view = 4;
  int32  comment = 5;
}

message GetLastTalkDraftReply{
  int32 id = 1;
  int32 status = 2;
}

message CreateTalkDraftReply{
  int32 id = 1;
}

message SendTalkReq{
  int32 id = 1;
}

message SendTalkEditReq{
  int32 id = 1;
}

message DeleteTalkReq{
  int32 id = 1;
}

message SetTalkViewReq{
  int32 id = 1;
  string uuid = 2;
}

message TalkStatisticJudgeReq{
  int32 id = 1;
}

message TalkStatisticJudgeReply{
  bool agree = 1;
  bool collect = 2;
}

message SetTalkAgreeReq{
  int32 id = 1;
  string uuid = 2;
}

message SetTalkCollectReq{
  int32 id = 1;
  int32 collections_id = 2;
  string uuid = 3;
}

message CancelTalkAgreeReq{
  int32 id = 1;
  string uuid = 2;
}

message CancelTalkCollectReq{
  int32 id = 1;
  string uuid = 2;
}