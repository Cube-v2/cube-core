// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package biz

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz(in *jlexer.Lexer, out *TextReview) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = int32(in.Int32())
		case "creationId":
			out.CreationId = int32(in.Int32())
		case "createAt":
			out.CreateAt = string(in.String())
		case "title":
			out.Title = string(in.String())
		case "kind":
			out.Kind = string(in.String())
		case "jobId":
			out.JobId = string(in.String())
		case "label":
			out.Label = string(in.String())
		case "result":
			out.Result = int32(in.Int32())
		case "uuid":
			out.Uuid = string(in.String())
		case "mode":
			out.Mode = string(in.String())
		case "section":
			out.Section = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz(out *jwriter.Writer, in TextReview) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int32(int32(in.Id))
	}
	{
		const prefix string = ",\"creationId\":"
		out.RawString(prefix)
		out.Int32(int32(in.CreationId))
	}
	{
		const prefix string = ",\"createAt\":"
		out.RawString(prefix)
		out.String(string(in.CreateAt))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"kind\":"
		out.RawString(prefix)
		out.String(string(in.Kind))
	}
	{
		const prefix string = ",\"jobId\":"
		out.RawString(prefix)
		out.String(string(in.JobId))
	}
	{
		const prefix string = ",\"label\":"
		out.RawString(prefix)
		out.String(string(in.Label))
	}
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix)
		out.Int32(int32(in.Result))
	}
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix)
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	{
		const prefix string = ",\"section\":"
		out.RawString(prefix)
		out.String(string(in.Section))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TextReview) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TextReview) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TextReview) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TextReview) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz1(in *jlexer.Lexer, out *TalkReview) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "uuid":
			out.Uuid = string(in.String())
		case "id":
			out.Id = int32(in.Int32())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz1(out *jwriter.Writer, in TalkReview) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix[1:])
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Int32(int32(in.Id))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TalkReview) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TalkReview) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TalkReview) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TalkReview) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz1(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz2(in *jlexer.Lexer, out *SendTalkStatisticMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "uuid":
			out.Uuid = string(in.String())
		case "userUuid":
			out.UserUuid = string(in.String())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz2(out *jwriter.Writer, in SendTalkStatisticMap) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix[1:])
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"userUuid\":"
		out.RawString(prefix)
		out.String(string(in.UserUuid))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SendTalkStatisticMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SendTalkStatisticMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SendTalkStatisticMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SendTalkStatisticMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz2(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz3(in *jlexer.Lexer, out *SendTalkMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "uuid":
			out.Uuid = string(in.String())
		case "id":
			out.Id = int32(in.Int32())
		case "auth":
			out.Auth = int32(in.Int32())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz3(out *jwriter.Writer, in SendTalkMap) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix[1:])
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Int32(int32(in.Id))
	}
	{
		const prefix string = ",\"auth\":"
		out.RawString(prefix)
		out.Int32(int32(in.Auth))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SendTalkMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SendTalkMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SendTalkMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SendTalkMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz3(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz4(in *jlexer.Lexer, out *SendStatisticMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = int32(in.Int32())
		case "collectionsId":
			out.CollectionsId = int32(in.Int32())
		case "uuid":
			out.Uuid = string(in.String())
		case "userUuid":
			out.UserUuid = string(in.String())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz4(out *jwriter.Writer, in SendStatisticMap) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int32(int32(in.Id))
	}
	{
		const prefix string = ",\"collectionsId\":"
		out.RawString(prefix)
		out.Int32(int32(in.CollectionsId))
	}
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix)
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"userUuid\":"
		out.RawString(prefix)
		out.String(string(in.UserUuid))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SendStatisticMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SendStatisticMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SendStatisticMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SendStatisticMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz4(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz5(in *jlexer.Lexer, out *SendScoreMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "uuid":
			out.Uuid = string(in.String())
		case "score":
			out.Score = int32(in.Int32())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz5(out *jwriter.Writer, in SendScoreMap) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix[1:])
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"score\":"
		out.RawString(prefix)
		out.Int32(int32(in.Score))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SendScoreMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SendScoreMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SendScoreMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SendScoreMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz5(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz6(in *jlexer.Lexer, out *SendColumnSubscribeMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = int32(in.Int32())
		case "uuid":
			out.Uuid = string(in.String())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz6(out *jwriter.Writer, in SendColumnSubscribeMap) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int32(int32(in.Id))
	}
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix)
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SendColumnSubscribeMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SendColumnSubscribeMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SendColumnSubscribeMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SendColumnSubscribeMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz6(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz7(in *jlexer.Lexer, out *SendColumnStatisticMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "uuid":
			out.Uuid = string(in.String())
		case "userUuid":
			out.UserUuid = string(in.String())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz7(out *jwriter.Writer, in SendColumnStatisticMap) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix[1:])
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"userUuid\":"
		out.RawString(prefix)
		out.String(string(in.UserUuid))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SendColumnStatisticMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SendColumnStatisticMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SendColumnStatisticMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SendColumnStatisticMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz7(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz8(in *jlexer.Lexer, out *SendColumnMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "uuid":
			out.Uuid = string(in.String())
		case "id":
			out.Id = int32(in.Int32())
		case "auth":
			out.Auth = int32(in.Int32())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz8(out *jwriter.Writer, in SendColumnMap) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix[1:])
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Int32(int32(in.Id))
	}
	{
		const prefix string = ",\"auth\":"
		out.RawString(prefix)
		out.Int32(int32(in.Auth))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SendColumnMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SendColumnMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SendColumnMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SendColumnMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz8(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz9(in *jlexer.Lexer, out *SendColumnIncludesMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = int32(in.Int32())
		case "articleId":
			out.ArticleId = int32(in.Int32())
		case "uuid":
			out.Uuid = string(in.String())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz9(out *jwriter.Writer, in SendColumnIncludesMap) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int32(int32(in.Id))
	}
	{
		const prefix string = ",\"articleId\":"
		out.RawString(prefix)
		out.Int32(int32(in.ArticleId))
	}
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix)
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SendColumnIncludesMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SendColumnIncludesMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SendColumnIncludesMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SendColumnIncludesMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz9(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz10(in *jlexer.Lexer, out *SendCollectionMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "uuid":
			out.Uuid = string(in.String())
		case "id":
			out.Id = int32(in.Int32())
		case "auth":
			out.Auth = int32(in.Int32())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz10(out *jwriter.Writer, in SendCollectionMap) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix[1:])
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Int32(int32(in.Id))
	}
	{
		const prefix string = ",\"auth\":"
		out.RawString(prefix)
		out.Int32(int32(in.Auth))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SendCollectionMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SendCollectionMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SendCollectionMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SendCollectionMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz10(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz11(in *jlexer.Lexer, out *SendArticleStatisticMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "uuid":
			out.Uuid = string(in.String())
		case "userUuid":
			out.UserUuid = string(in.String())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz11(out *jwriter.Writer, in SendArticleStatisticMap) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix[1:])
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"userUuid\":"
		out.RawString(prefix)
		out.String(string(in.UserUuid))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SendArticleStatisticMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SendArticleStatisticMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SendArticleStatisticMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SendArticleStatisticMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz11(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz12(in *jlexer.Lexer, out *SendArticleMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "uuid":
			out.Uuid = string(in.String())
		case "id":
			out.Id = int32(in.Int32())
		case "auth":
			out.Auth = int32(in.Int32())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz12(out *jwriter.Writer, in SendArticleMap) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix[1:])
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Int32(int32(in.Id))
	}
	{
		const prefix string = ",\"auth\":"
		out.RawString(prefix)
		out.Int32(int32(in.Auth))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SendArticleMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SendArticleMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SendArticleMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SendArticleMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz12(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz13(in *jlexer.Lexer, out *ImageReview) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = int32(in.Int32())
		case "creationId":
			out.CreationId = int32(in.Int32())
		case "kind":
			out.Kind = string(in.String())
		case "uid":
			out.Uid = string(in.String())
		case "createAt":
			out.CreateAt = string(in.String())
		case "uuid":
			out.Uuid = string(in.String())
		case "jobId":
			out.JobId = string(in.String())
		case "url":
			out.Url = string(in.String())
		case "label":
			out.Label = string(in.String())
		case "result":
			out.Result = int32(in.Int32())
		case "category":
			out.Category = string(in.String())
		case "subLabel":
			out.SubLabel = string(in.String())
		case "mode":
			out.Mode = string(in.String())
		case "score":
			out.Score = int32(in.Int32())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz13(out *jwriter.Writer, in ImageReview) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int32(int32(in.Id))
	}
	{
		const prefix string = ",\"creationId\":"
		out.RawString(prefix)
		out.Int32(int32(in.CreationId))
	}
	{
		const prefix string = ",\"kind\":"
		out.RawString(prefix)
		out.String(string(in.Kind))
	}
	{
		const prefix string = ",\"uid\":"
		out.RawString(prefix)
		out.String(string(in.Uid))
	}
	{
		const prefix string = ",\"createAt\":"
		out.RawString(prefix)
		out.String(string(in.CreateAt))
	}
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix)
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"jobId\":"
		out.RawString(prefix)
		out.String(string(in.JobId))
	}
	{
		const prefix string = ",\"url\":"
		out.RawString(prefix)
		out.String(string(in.Url))
	}
	{
		const prefix string = ",\"label\":"
		out.RawString(prefix)
		out.String(string(in.Label))
	}
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix)
		out.Int32(int32(in.Result))
	}
	{
		const prefix string = ",\"category\":"
		out.RawString(prefix)
		out.String(string(in.Category))
	}
	{
		const prefix string = ",\"subLabel\":"
		out.RawString(prefix)
		out.String(string(in.SubLabel))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	{
		const prefix string = ",\"score\":"
		out.RawString(prefix)
		out.Int32(int32(in.Score))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ImageReview) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ImageReview) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ImageReview) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ImageReview) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz13(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz14(in *jlexer.Lexer, out *ColumnReview) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "uuid":
			out.Uuid = string(in.String())
		case "id":
			out.Id = int32(in.Int32())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz14(out *jwriter.Writer, in ColumnReview) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix[1:])
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Int32(int32(in.Id))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ColumnReview) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz14(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ColumnReview) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz14(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ColumnReview) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz14(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ColumnReview) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz14(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz15(in *jlexer.Lexer, out *CollectionsReview) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "uuid":
			out.Uuid = string(in.String())
		case "id":
			out.Id = int32(in.Int32())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz15(out *jwriter.Writer, in CollectionsReview) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix[1:])
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Int32(int32(in.Id))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CollectionsReview) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz15(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CollectionsReview) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz15(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CollectionsReview) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz15(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CollectionsReview) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz15(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz16(in *jlexer.Lexer, out *ArticleReview) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "uuid":
			out.Uuid = string(in.String())
		case "id":
			out.Id = int32(in.Int32())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz16(out *jwriter.Writer, in ArticleReview) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix[1:])
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Int32(int32(in.Id))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ArticleReview) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ArticleReview) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ArticleReview) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ArticleReview) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppCreationServiceInternalBiz16(l, v)
}
