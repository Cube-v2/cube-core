syntax = "proto3";

package user.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "api/user/service/v1;v1";

service User {
  rpc UserRegister(UserRegisterReq) returns (UserRegisterReply){}

  rpc LoginByPassword (LoginByPasswordReq) returns (LoginReply) {}

  rpc LoginByCode (LoginByCodeReq) returns (LoginReply) {}

  rpc LoginByWeChat (LoginByWeChatReq) returns (LoginReply) {}

  rpc LoginByGithub (LoginByGithubReq) returns (LoginReply) {}

  rpc LoginPasswordReset(LoginPasswordResetReq) returns (LoginPasswordResetReply){}

  rpc SendPhoneCode (SendPhoneCodeReq) returns (SendPhoneCodeReply){}

  rpc SendEmailCode (SendEmailCodeReq) returns (SendEmailCodeReply) {}

  rpc GetUser (GetUserReq) returns (GetUserReply) {
    option (google.api.http) = {
      post: "/v1/user/get"
      body: "*"
    };
  }
  rpc SetUserPhone (SetUserPhoneReq) returns (SetUserPhoneReply) {
    option (google.api.http) = {
      post: "/v1/user/set/phone"
      body: "*"
    };
  }
  rpc SetUserEmail (SetUserEmailReq) returns (SetUserEmailReply) {
    option (google.api.http) = {
      post: "/v1/user/set/email"
      body: "*"
    };
  }
  rpc GetUserProfile (GetUserProfileReq) returns (GetUserProfileReply) {}

  rpc SetUserProfile (SetUserProfileReq) returns (SetUserProfileReply) {
    option (google.api.http) = {
      post: "/v1/user/set/profile"
      body: "*"
    };
  }
  rpc SetUserName (SetUserNameReq) returns (SetUserNameReply) {
    option (google.api.http) = {
      post: "/v1/user/set/name"
      body: "*"
    };
  }
}

message UserRegisterReq{
  string email = 1 [(validate.rules).string = {pattern: "\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*", max_len: 50}];
  string password = 2 [(validate.rules).string = {min_len:1, max_len: 20}];
  string code = 3 [(validate.rules).string.pattern = "^[0-9]+$"];
}

message UserRegisterReply{}


message LoginByPasswordReq {
  string account = 1 [(validate.rules).string = {pattern: "^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\\d{8}$|\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*", max_len:50}];
  string password = 2 [(validate.rules).string = {min_len:1, max_len: 20}];
  string mode = 3 [(validate.rules).string = {in: ["phone", "email"]}];
}

message LoginByCodeReq {
  string phone = 1 [(validate.rules).string.pattern = "^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\\d{8}$"];
  string code = 2 [(validate.rules).string.pattern = "^[0-9]{6}$"];
}

message LoginReply {
  string token = 1;
}

message LoginByWeChatReq{
  string wechat = 1;
}

message LoginByGithubReq{
  string github = 1;
}

message LoginPasswordResetReq{
  string account = 1 [(validate.rules).string = {pattern: "^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\\d{8}$|\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*", max_len:50}];
  string code = 2 [(validate.rules).string.pattern = "^[0-9]{6}$"];
  string password = 3 [(validate.rules).string = {min_len:1, max_len: 20}];
  string mode = 4 [(validate.rules).string = {in: ["phone", "email"]}];
}

message LoginPasswordResetReply{}

message SendPhoneCodeReq{
  string phone = 1 [(validate.rules).string = {pattern: "^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\\d{8}$", min_len:1, max_len:50}];
  string template = 2 [(validate.rules).string = {in: ["1", "2", "3", "4"]}];
}

message SendPhoneCodeReply{}

message SendEmailCodeReq{
  string email = 1 [(validate.rules).string = {pattern: "\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*", max_len: 50}];
  string template = 2 [(validate.rules).string = {in: ["1", "2", "3", "4", "5"]}];
}

message SendEmailCodeReply{}

message GetUserReq{
  int64 id = 1 [(validate.rules).int64.gte = 0];
}

message GetUserReply{
  string phone = 1;
  string email = 2;
  string wechat = 3;
  string github = 4;
}

message SetUserPhoneReq{
  string phone = 1 [(validate.rules).string.pattern = "^\\+[1-9]?[0-9]{7,14}$"];
  string password = 2 [(validate.rules).string.min_len = 1];
  string code = 3 [(validate.rules).string.pattern = "^[0-9]+$"];
}

message SetUserPhoneReply{
  bool success = 1;
}

message SetUserEmailReq{
  string email = 1 [(validate.rules).string.pattern = "^(?:(?:(?:(?:[a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])+(?:\\.([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])+)*)|(?:(?:\\x22)(?:(?:(?:(?:\\x20|\\x09)*(?:\\x0d\\x0a))?(?:\\x20|\\x09)+)?(?:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])|(?:(?:[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}]))))*(?:(?:(?:\\x20|\\x09)*(?:\\x0d\\x0a))?(\\x20|\\x09)+)?(?:\\x22))))@(?:(?:(?:[a-zA-Z]|\\d|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])|(?:(?:[a-zA-Z]|\\d|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])(?:[a-zA-Z]|\\d|-|\\.|~|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])*(?:[a-zA-Z]|\\d|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])))\\.)+(?:(?:[a-zA-Z]|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])|(?:(?:[a-zA-Z]|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])(?:[a-zA-Z]|\\d|-|\\.|~|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])*(?:[a-zA-Z]|[\\x{00A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}])))\\.?$"];
  string password = 2 [(validate.rules).string.min_len = 1];
  string code = 3 [(validate.rules).string.pattern = "^[0-9]+$"];
}

message SetUserEmailReply{
  bool success = 1;
}

message GetUserProfileReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetUserProfileReply{
  string uuid = 1;
  string username = 2;
  string avatar = 3;
  string school = 4;
  string company = 5;
  string homepage = 6;
  string introduce = 7;
}

message SetUserProfileReq{
  string sex = 1 [(validate.rules).string = {in: ["male", "female"], min_len:0}];
  string introduce = 2 [(validate.rules).string = {min_len:0, max_len: 30}];
  string address = 3 [(validate.rules).string = {min_len:0, max_len: 15}];
  string industry = 4 [(validate.rules).string = {min_len:0, max_len: 10}];
  string profile = 5 [(validate.rules).string = {min_len:0, max_len: 100}];
  string tag = 6 [(validate.rules).string = {min_len:0, max_len: 100}];
}

message SetUserProfileReply{
  bool success = 1;
}

message SetUserNameReq{
  string name = 1 [(validate.rules).string = {min_len:1, max_len: 10}];
}

message SetUserNameReply{
  bool success = 1;
}
