// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: user/service/v1/user.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserRegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *UserRegisterReq) Reset() {
	*x = UserRegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterReq) ProtoMessage() {}

func (x *UserRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterReq.ProtoReflect.Descriptor instead.
func (*UserRegisterReq) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{0}
}

func (x *UserRegisterReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserRegisterReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserRegisterReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type LoginByPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Mode     string `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *LoginByPasswordReq) Reset() {
	*x = LoginByPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginByPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByPasswordReq) ProtoMessage() {}

func (x *LoginByPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByPasswordReq.ProtoReflect.Descriptor instead.
func (*LoginByPasswordReq) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{1}
}

func (x *LoginByPasswordReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginByPasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginByPasswordReq) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type LoginByCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *LoginByCodeReq) Reset() {
	*x = LoginByCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginByCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByCodeReq) ProtoMessage() {}

func (x *LoginByCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByCodeReq.ProtoReflect.Descriptor instead.
func (*LoginByCodeReq) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{2}
}

func (x *LoginByCodeReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *LoginByCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type LoginReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LoginReply) Reset() {
	*x = LoginReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReply) ProtoMessage() {}

func (x *LoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReply.ProtoReflect.Descriptor instead.
func (*LoginReply) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{3}
}

func (x *LoginReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type LoginByWeChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wechat string `protobuf:"bytes,1,opt,name=wechat,proto3" json:"wechat,omitempty"`
}

func (x *LoginByWeChatReq) Reset() {
	*x = LoginByWeChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginByWeChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByWeChatReq) ProtoMessage() {}

func (x *LoginByWeChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByWeChatReq.ProtoReflect.Descriptor instead.
func (*LoginByWeChatReq) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{4}
}

func (x *LoginByWeChatReq) GetWechat() string {
	if x != nil {
		return x.Wechat
	}
	return ""
}

type LoginByGithubReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Github string `protobuf:"bytes,1,opt,name=github,proto3" json:"github,omitempty"`
}

func (x *LoginByGithubReq) Reset() {
	*x = LoginByGithubReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginByGithubReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByGithubReq) ProtoMessage() {}

func (x *LoginByGithubReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByGithubReq.ProtoReflect.Descriptor instead.
func (*LoginByGithubReq) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{5}
}

func (x *LoginByGithubReq) GetGithub() string {
	if x != nil {
		return x.Github
	}
	return ""
}

type LoginPasswordResetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Code     string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Mode     string `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *LoginPasswordResetReq) Reset() {
	*x = LoginPasswordResetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginPasswordResetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginPasswordResetReq) ProtoMessage() {}

func (x *LoginPasswordResetReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginPasswordResetReq.ProtoReflect.Descriptor instead.
func (*LoginPasswordResetReq) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{6}
}

func (x *LoginPasswordResetReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginPasswordResetReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LoginPasswordResetReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginPasswordResetReq) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type SendPhoneCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone    string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Template string `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
}

func (x *SendPhoneCodeReq) Reset() {
	*x = SendPhoneCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPhoneCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPhoneCodeReq) ProtoMessage() {}

func (x *SendPhoneCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPhoneCodeReq.ProtoReflect.Descriptor instead.
func (*SendPhoneCodeReq) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{7}
}

func (x *SendPhoneCodeReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SendPhoneCodeReq) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

type SendEmailCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Template string `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
}

func (x *SendEmailCodeReq) Reset() {
	*x = SendEmailCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmailCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailCodeReq) ProtoMessage() {}

func (x *SendEmailCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailCodeReq.ProtoReflect.Descriptor instead.
func (*SendEmailCodeReq) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{8}
}

func (x *SendEmailCodeReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SendEmailCodeReq) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

type GetCosSessionKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TmpSecretId  string `protobuf:"bytes,1,opt,name=tmp_secret_id,json=tmpSecretId,proto3" json:"tmp_secret_id,omitempty"`
	TmpSecretKey string `protobuf:"bytes,2,opt,name=tmp_secret_key,json=tmpSecretKey,proto3" json:"tmp_secret_key,omitempty"`
	SessionToken string `protobuf:"bytes,3,opt,name=session_token,json=sessionToken,proto3" json:"session_token,omitempty"`
	StartTime    int64  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	ExpiredTime  int64  `protobuf:"varint,5,opt,name=expired_time,json=expiredTime,proto3" json:"expired_time,omitempty"`
}

func (x *GetCosSessionKeyReply) Reset() {
	*x = GetCosSessionKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCosSessionKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCosSessionKeyReply) ProtoMessage() {}

func (x *GetCosSessionKeyReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCosSessionKeyReply.ProtoReflect.Descriptor instead.
func (*GetCosSessionKeyReply) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{9}
}

func (x *GetCosSessionKeyReply) GetTmpSecretId() string {
	if x != nil {
		return x.TmpSecretId
	}
	return ""
}

func (x *GetCosSessionKeyReply) GetTmpSecretKey() string {
	if x != nil {
		return x.TmpSecretKey
	}
	return ""
}

func (x *GetCosSessionKeyReply) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *GetCosSessionKeyReply) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetCosSessionKeyReply) GetExpiredTime() int64 {
	if x != nil {
		return x.ExpiredTime
	}
	return 0
}

type GetUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetUserReq) Reset() {
	*x = GetUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReq) ProtoMessage() {}

func (x *GetUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReq.ProtoReflect.Descriptor instead.
func (*GetUserReq) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone  string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Email  string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Wechat string `protobuf:"bytes,3,opt,name=wechat,proto3" json:"wechat,omitempty"`
	Github string `protobuf:"bytes,4,opt,name=github,proto3" json:"github,omitempty"`
}

func (x *GetUserReply) Reset() {
	*x = GetUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReply) ProtoMessage() {}

func (x *GetUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReply.ProtoReflect.Descriptor instead.
func (*GetUserReply) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserReply) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetUserReply) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetUserReply) GetWechat() string {
	if x != nil {
		return x.Wechat
	}
	return ""
}

func (x *GetUserReply) GetGithub() string {
	if x != nil {
		return x.Github
	}
	return ""
}

type SetUserPhoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone    string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SetUserPhoneReq) Reset() {
	*x = SetUserPhoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserPhoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserPhoneReq) ProtoMessage() {}

func (x *SetUserPhoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserPhoneReq.ProtoReflect.Descriptor instead.
func (*SetUserPhoneReq) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{12}
}

func (x *SetUserPhoneReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SetUserPhoneReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SetUserPhoneReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SetUserPhoneReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SetUserPhoneReply) Reset() {
	*x = SetUserPhoneReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserPhoneReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserPhoneReply) ProtoMessage() {}

func (x *SetUserPhoneReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserPhoneReply.ProtoReflect.Descriptor instead.
func (*SetUserPhoneReply) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{13}
}

func (x *SetUserPhoneReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SetUserEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SetUserEmailReq) Reset() {
	*x = SetUserEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserEmailReq) ProtoMessage() {}

func (x *SetUserEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserEmailReq.ProtoReflect.Descriptor instead.
func (*SetUserEmailReq) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{14}
}

func (x *SetUserEmailReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SetUserEmailReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SetUserEmailReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SetUserEmailReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SetUserEmailReply) Reset() {
	*x = SetUserEmailReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserEmailReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserEmailReply) ProtoMessage() {}

func (x *SetUserEmailReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserEmailReply.ProtoReflect.Descriptor instead.
func (*SetUserEmailReply) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{15}
}

func (x *SetUserEmailReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetUserProfileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetUserProfileReq) Reset() {
	*x = GetUserProfileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProfileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfileReq) ProtoMessage() {}

func (x *GetUserProfileReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfileReq.ProtoReflect.Descriptor instead.
func (*GetUserProfileReq) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserProfileReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetUserProfileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Avatar    string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	School    string `protobuf:"bytes,4,opt,name=school,proto3" json:"school,omitempty"`
	Company   string `protobuf:"bytes,5,opt,name=company,proto3" json:"company,omitempty"`
	Job       string `protobuf:"bytes,6,opt,name=job,proto3" json:"job,omitempty"`
	Homepage  string `protobuf:"bytes,7,opt,name=homepage,proto3" json:"homepage,omitempty"`
	Introduce string `protobuf:"bytes,8,opt,name=introduce,proto3" json:"introduce,omitempty"`
}

func (x *GetUserProfileReply) Reset() {
	*x = GetUserProfileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProfileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfileReply) ProtoMessage() {}

func (x *GetUserProfileReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfileReply.ProtoReflect.Descriptor instead.
func (*GetUserProfileReply) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserProfileReply) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetUserProfileReply) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetUserProfileReply) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GetUserProfileReply) GetSchool() string {
	if x != nil {
		return x.School
	}
	return ""
}

func (x *GetUserProfileReply) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *GetUserProfileReply) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *GetUserProfileReply) GetHomepage() string {
	if x != nil {
		return x.Homepage
	}
	return ""
}

func (x *GetUserProfileReply) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

type GetUserProfileUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetUserProfileUpdateReq) Reset() {
	*x = GetUserProfileUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProfileUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfileUpdateReq) ProtoMessage() {}

func (x *GetUserProfileUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfileUpdateReq.ProtoReflect.Descriptor instead.
func (*GetUserProfileUpdateReq) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserProfileUpdateReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetUserProfileUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username  string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Avatar    string `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
	School    string `protobuf:"bytes,3,opt,name=school,proto3" json:"school,omitempty"`
	Company   string `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
	Job       string `protobuf:"bytes,5,opt,name=job,proto3" json:"job,omitempty"`
	Homepage  string `protobuf:"bytes,6,opt,name=homepage,proto3" json:"homepage,omitempty"`
	Introduce string `protobuf:"bytes,7,opt,name=introduce,proto3" json:"introduce,omitempty"`
	Status    int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetUserProfileUpdateReply) Reset() {
	*x = GetUserProfileUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProfileUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProfileUpdateReply) ProtoMessage() {}

func (x *GetUserProfileUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProfileUpdateReply.ProtoReflect.Descriptor instead.
func (*GetUserProfileUpdateReply) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{19}
}

func (x *GetUserProfileUpdateReply) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetUserProfileUpdateReply) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GetUserProfileUpdateReply) GetSchool() string {
	if x != nil {
		return x.School
	}
	return ""
}

func (x *GetUserProfileUpdateReply) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *GetUserProfileUpdateReply) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *GetUserProfileUpdateReply) GetHomepage() string {
	if x != nil {
		return x.Homepage
	}
	return ""
}

func (x *GetUserProfileUpdateReply) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *GetUserProfileUpdateReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SetUserProfileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	School    string `protobuf:"bytes,3,opt,name=school,proto3" json:"school,omitempty"`
	Company   string `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
	Job       string `protobuf:"bytes,5,opt,name=job,proto3" json:"job,omitempty"`
	Homepage  string `protobuf:"bytes,6,opt,name=homepage,proto3" json:"homepage,omitempty"`
	Introduce string `protobuf:"bytes,7,opt,name=introduce,proto3" json:"introduce,omitempty"`
}

func (x *SetUserProfileReq) Reset() {
	*x = SetUserProfileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_service_v1_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserProfileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserProfileReq) ProtoMessage() {}

func (x *SetUserProfileReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_v1_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserProfileReq.ProtoReflect.Descriptor instead.
func (*SetUserProfileReq) Descriptor() ([]byte, []int) {
	return file_user_service_v1_user_proto_rawDescGZIP(), []int{20}
}

func (x *SetUserProfileReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SetUserProfileReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetUserProfileReq) GetSchool() string {
	if x != nil {
		return x.School
	}
	return ""
}

func (x *SetUserProfileReq) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *SetUserProfileReq) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *SetUserProfileReq) GetHomepage() string {
	if x != nil {
		return x.Homepage
	}
	return ""
}

func (x *SetUserProfileReq) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

var File_user_service_v1_user_proto protoreflect.FileDescriptor

var file_user_service_v1_user_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x0f, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x4a, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x34, 0xfa, 0x42,
	0x31, 0x72, 0x2f, 0x18, 0x32, 0x32, 0x2b, 0x5c, 0x77, 0x2b, 0x28, 0x5b, 0x2d, 0x2b, 0x2e, 0x5d,
	0x5c, 0x77, 0x2b, 0x29, 0x2a, 0x40, 0x5c, 0x77, 0x2b, 0x28, 0x5b, 0x2d, 0x2e, 0x5d, 0x5c, 0x77,
	0x2b, 0x29, 0x2a, 0x5c, 0x2e, 0x5c, 0x77, 0x2b, 0x28, 0x5b, 0x2d, 0x2e, 0x5d, 0x5c, 0x77, 0x2b,
	0x29, 0x2a, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06,
	0x72, 0x04, 0x10, 0x01, 0x18, 0x14, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x23, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f,
	0xfa, 0x42, 0x0c, 0x72, 0x0a, 0x32, 0x08, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x8e, 0x02, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42,
	0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0xa7, 0x01, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x8c,
	0x01, 0xfa, 0x42, 0x88, 0x01, 0x72, 0x85, 0x01, 0x18, 0x32, 0x32, 0x80, 0x01, 0x5e, 0x28, 0x28,
	0x31, 0x33, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x7c, 0x28, 0x31, 0x34, 0x5b, 0x35, 0x2c, 0x37,
	0x5d, 0x29, 0x7c, 0x28, 0x31, 0x35, 0x5b, 0x30, 0x2d, 0x33, 0x2c, 0x35, 0x2d, 0x39, 0x5d, 0x29,
	0x7c, 0x28, 0x31, 0x37, 0x5b, 0x30, 0x2c, 0x33, 0x2c, 0x35, 0x2d, 0x38, 0x5d, 0x29, 0x7c, 0x28,
	0x31, 0x38, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x7c, 0x31, 0x36, 0x36, 0x7c, 0x31, 0x39, 0x38,
	0x7c, 0x31, 0x39, 0x39, 0x7c, 0x28, 0x31, 0x34, 0x37, 0x29, 0x29, 0x5c, 0x64, 0x7b, 0x38, 0x7d,
	0x24, 0x7c, 0x5c, 0x77, 0x2b, 0x28, 0x5b, 0x2d, 0x2b, 0x2e, 0x5d, 0x5c, 0x77, 0x2b, 0x29, 0x2a,
	0x40, 0x5c, 0x77, 0x2b, 0x28, 0x5b, 0x2d, 0x2e, 0x5d, 0x5c, 0x77, 0x2b, 0x29, 0x2a, 0x5c, 0x2e,
	0x5c, 0x77, 0x2b, 0x28, 0x5b, 0x2d, 0x2e, 0x5d, 0x5c, 0x77, 0x2b, 0x29, 0x2a, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x01, 0x18, 0x14, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x27, 0x0a,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x10,
	0x72, 0x0e, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x71, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x5b, 0xfa, 0x42, 0x58, 0x72, 0x56, 0x32,
	0x54, 0x5e, 0x28, 0x28, 0x31, 0x33, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x7c, 0x28, 0x31, 0x34,
	0x5b, 0x35, 0x2c, 0x37, 0x5d, 0x29, 0x7c, 0x28, 0x31, 0x35, 0x5b, 0x30, 0x2d, 0x33, 0x2c, 0x35,
	0x2d, 0x39, 0x5d, 0x29, 0x7c, 0x28, 0x31, 0x37, 0x5b, 0x30, 0x2c, 0x33, 0x2c, 0x35, 0x2d, 0x38,
	0x5d, 0x29, 0x7c, 0x28, 0x31, 0x38, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x7c, 0x31, 0x36, 0x36,
	0x7c, 0x31, 0x39, 0x38, 0x7c, 0x31, 0x39, 0x39, 0x7c, 0x28, 0x31, 0x34, 0x37, 0x29, 0x29, 0x5c,
	0x64, 0x7b, 0x38, 0x7d, 0x24, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x25, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x72,
	0x0c, 0x32, 0x0a, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x7b, 0x36, 0x7d, 0x24, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x22, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2a, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x42, 0x79, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x22, 0x2a, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x47, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x22,
	0xb8, 0x02, 0x0a, 0x15, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0xa7, 0x01, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x8c, 0x01, 0xfa, 0x42,
	0x88, 0x01, 0x72, 0x85, 0x01, 0x18, 0x32, 0x32, 0x80, 0x01, 0x5e, 0x28, 0x28, 0x31, 0x33, 0x5b,
	0x30, 0x2d, 0x39, 0x5d, 0x29, 0x7c, 0x28, 0x31, 0x34, 0x5b, 0x35, 0x2c, 0x37, 0x5d, 0x29, 0x7c,
	0x28, 0x31, 0x35, 0x5b, 0x30, 0x2d, 0x33, 0x2c, 0x35, 0x2d, 0x39, 0x5d, 0x29, 0x7c, 0x28, 0x31,
	0x37, 0x5b, 0x30, 0x2c, 0x33, 0x2c, 0x35, 0x2d, 0x38, 0x5d, 0x29, 0x7c, 0x28, 0x31, 0x38, 0x5b,
	0x30, 0x2d, 0x39, 0x5d, 0x29, 0x7c, 0x31, 0x36, 0x36, 0x7c, 0x31, 0x39, 0x38, 0x7c, 0x31, 0x39,
	0x39, 0x7c, 0x28, 0x31, 0x34, 0x37, 0x29, 0x29, 0x5c, 0x64, 0x7b, 0x38, 0x7d, 0x24, 0x7c, 0x5c,
	0x77, 0x2b, 0x28, 0x5b, 0x2d, 0x2b, 0x2e, 0x5d, 0x5c, 0x77, 0x2b, 0x29, 0x2a, 0x40, 0x5c, 0x77,
	0x2b, 0x28, 0x5b, 0x2d, 0x2e, 0x5d, 0x5c, 0x77, 0x2b, 0x29, 0x2a, 0x5c, 0x2e, 0x5c, 0x77, 0x2b,
	0x28, 0x5b, 0x2d, 0x2e, 0x5d, 0x5c, 0x77, 0x2b, 0x29, 0x2a, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x72, 0x0c, 0x32, 0x0a, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x5d,
	0x7b, 0x36, 0x7d, 0x24, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x14, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x27, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x13, 0xfa, 0x42, 0x10, 0x72, 0x0e, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x10, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x75, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x5f,
	0xfa, 0x42, 0x5c, 0x72, 0x5a, 0x10, 0x01, 0x18, 0x32, 0x32, 0x54, 0x5e, 0x28, 0x28, 0x31, 0x33,
	0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x7c, 0x28, 0x31, 0x34, 0x5b, 0x35, 0x2c, 0x37, 0x5d, 0x29,
	0x7c, 0x28, 0x31, 0x35, 0x5b, 0x30, 0x2d, 0x33, 0x2c, 0x35, 0x2d, 0x39, 0x5d, 0x29, 0x7c, 0x28,
	0x31, 0x37, 0x5b, 0x30, 0x2c, 0x33, 0x2c, 0x35, 0x2d, 0x38, 0x5d, 0x29, 0x7c, 0x28, 0x31, 0x38,
	0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x29, 0x7c, 0x31, 0x36, 0x36, 0x7c, 0x31, 0x39, 0x38, 0x7c, 0x31,
	0x39, 0x39, 0x7c, 0x28, 0x31, 0x34, 0x37, 0x29, 0x29, 0x5c, 0x64, 0x7b, 0x38, 0x7d, 0x24, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x72, 0x0c, 0x52,
	0x01, 0x31, 0x52, 0x01, 0x32, 0x52, 0x01, 0x33, 0x52, 0x01, 0x34, 0x52, 0x08, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x4a, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x34, 0xfa, 0x42, 0x31, 0x72, 0x2f,
	0x18, 0x32, 0x32, 0x2b, 0x5c, 0x77, 0x2b, 0x28, 0x5b, 0x2d, 0x2b, 0x2e, 0x5d, 0x5c, 0x77, 0x2b,
	0x29, 0x2a, 0x40, 0x5c, 0x77, 0x2b, 0x28, 0x5b, 0x2d, 0x2e, 0x5d, 0x5c, 0x77, 0x2b, 0x29, 0x2a,
	0x5c, 0x2e, 0x5c, 0x77, 0x2b, 0x28, 0x5b, 0x2d, 0x2e, 0x5d, 0x5c, 0x77, 0x2b, 0x29, 0x2a, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x11, 0x72, 0x0f, 0x52,
	0x01, 0x31, 0x52, 0x01, 0x32, 0x52, 0x01, 0x33, 0x52, 0x01, 0x34, 0x52, 0x01, 0x35, 0x52, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0xc8, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x73, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x6d, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6d, 0x70, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6d, 0x70, 0x5f, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x6d, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6a, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x22, 0x8f, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0xfa, 0x42, 0x19, 0x72, 0x17,
	0x32, 0x15, 0x5e, 0x5c, 0x2b, 0x5b, 0x31, 0x2d, 0x39, 0x5d, 0x3f, 0x5b, 0x30, 0x2d, 0x39, 0x5d,
	0x7b, 0x37, 0x2c, 0x31, 0x34, 0x7d, 0x24, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x23,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0f, 0xfa, 0x42, 0x0c, 0x72, 0x0a, 0x32, 0x08, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x5d,
	0x2b, 0x24, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2d, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xf8, 0x09, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x9a, 0x09, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x83, 0x09, 0xfa, 0x42,
	0xff, 0x08, 0x72, 0xfc, 0x08, 0x32, 0xf9, 0x08, 0x5e, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x28,
	0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x5d, 0x7c, 0x5c, 0x64,
	0x7c, 0x5b, 0x21, 0x23, 0x5c, 0x24, 0x25, 0x26, 0x27, 0x5c, 0x2a, 0x5c, 0x2b, 0x5c, 0x2d, 0x5c,
	0x2f, 0x3d, 0x5c, 0x3f, 0x5c, 0x5e, 0x5f, 0x60, 0x7b, 0x5c, 0x7c, 0x7d, 0x7e, 0x5d, 0x7c, 0x5b,
	0x5c, 0x78, 0x7b, 0x30, 0x30, 0x41, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x44, 0x37, 0x46, 0x46,
	0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x39, 0x30, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x43,
	0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x46, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x46, 0x46,
	0x45, 0x46, 0x7d, 0x5d, 0x29, 0x2b, 0x28, 0x3f, 0x3a, 0x5c, 0x2e, 0x28, 0x5b, 0x61, 0x2d, 0x7a,
	0x41, 0x2d, 0x5a, 0x5d, 0x7c, 0x5c, 0x64, 0x7c, 0x5b, 0x21, 0x23, 0x5c, 0x24, 0x25, 0x26, 0x27,
	0x5c, 0x2a, 0x5c, 0x2b, 0x5c, 0x2d, 0x5c, 0x2f, 0x3d, 0x5c, 0x3f, 0x5c, 0x5e, 0x5f, 0x60, 0x7b,
	0x5c, 0x7c, 0x7d, 0x7e, 0x5d, 0x7c, 0x5b, 0x5c, 0x78, 0x7b, 0x30, 0x30, 0x41, 0x30, 0x7d, 0x2d,
	0x5c, 0x78, 0x7b, 0x44, 0x37, 0x46, 0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x39, 0x30, 0x30, 0x7d,
	0x2d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x43, 0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x46, 0x30,
	0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x46, 0x46, 0x45, 0x46, 0x7d, 0x5d, 0x29, 0x2b, 0x29, 0x2a, 0x29,
	0x7c, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5c, 0x78, 0x32, 0x32, 0x29, 0x28, 0x3f, 0x3a, 0x28,
	0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5c, 0x78, 0x32, 0x30, 0x7c, 0x5c, 0x78, 0x30,
	0x39, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5c, 0x78, 0x30, 0x64, 0x5c, 0x78, 0x30, 0x61, 0x29, 0x29,
	0x3f, 0x28, 0x3f, 0x3a, 0x5c, 0x78, 0x32, 0x30, 0x7c, 0x5c, 0x78, 0x30, 0x39, 0x29, 0x2b, 0x29,
	0x3f, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x5c, 0x78, 0x30, 0x31, 0x2d, 0x5c, 0x78, 0x30,
	0x38, 0x5c, 0x78, 0x30, 0x62, 0x5c, 0x78, 0x30, 0x63, 0x5c, 0x78, 0x30, 0x65, 0x2d, 0x5c, 0x78,
	0x31, 0x66, 0x5c, 0x78, 0x37, 0x66, 0x5d, 0x7c, 0x5c, 0x78, 0x32, 0x31, 0x7c, 0x5b, 0x5c, 0x78,
	0x32, 0x33, 0x2d, 0x5c, 0x78, 0x35, 0x62, 0x5d, 0x7c, 0x5b, 0x5c, 0x78, 0x35, 0x64, 0x2d, 0x5c,
	0x78, 0x37, 0x65, 0x5d, 0x7c, 0x5b, 0x5c, 0x78, 0x7b, 0x30, 0x30, 0x41, 0x30, 0x7d, 0x2d, 0x5c,
	0x78, 0x7b, 0x44, 0x37, 0x46, 0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x39, 0x30, 0x30, 0x7d, 0x2d,
	0x5c, 0x78, 0x7b, 0x46, 0x44, 0x43, 0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x46, 0x30, 0x7d,
	0x2d, 0x5c, 0x78, 0x7b, 0x46, 0x46, 0x45, 0x46, 0x7d, 0x5d, 0x29, 0x7c, 0x28, 0x3f, 0x3a, 0x28,
	0x3f, 0x3a, 0x5b, 0x5c, 0x78, 0x30, 0x31, 0x2d, 0x5c, 0x78, 0x30, 0x39, 0x5c, 0x78, 0x30, 0x62,
	0x5c, 0x78, 0x30, 0x63, 0x5c, 0x78, 0x30, 0x64, 0x2d, 0x5c, 0x78, 0x37, 0x66, 0x5d, 0x7c, 0x5b,
	0x5c, 0x78, 0x7b, 0x30, 0x30, 0x41, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x44, 0x37, 0x46, 0x46,
	0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x39, 0x30, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x43,
	0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x46, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x46, 0x46,
	0x45, 0x46, 0x7d, 0x5d, 0x29, 0x29, 0x29, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x28,
	0x3f, 0x3a, 0x5c, 0x78, 0x32, 0x30, 0x7c, 0x5c, 0x78, 0x30, 0x39, 0x29, 0x2a, 0x28, 0x3f, 0x3a,
	0x5c, 0x78, 0x30, 0x64, 0x5c, 0x78, 0x30, 0x61, 0x29, 0x29, 0x3f, 0x28, 0x5c, 0x78, 0x32, 0x30,
	0x7c, 0x5c, 0x78, 0x30, 0x39, 0x29, 0x2b, 0x29, 0x3f, 0x28, 0x3f, 0x3a, 0x5c, 0x78, 0x32, 0x32,
	0x29, 0x29, 0x29, 0x29, 0x40, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61,
	0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x5d, 0x7c, 0x5c, 0x64, 0x7c, 0x5b, 0x5c, 0x78, 0x7b, 0x30, 0x30,
	0x41, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x44, 0x37, 0x46, 0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46,
	0x39, 0x30, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x43, 0x46, 0x7d, 0x5c, 0x78, 0x7b,
	0x46, 0x44, 0x46, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x46, 0x46, 0x45, 0x46, 0x7d, 0x5d, 0x29,
	0x7c, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x5d, 0x7c,
	0x5c, 0x64, 0x7c, 0x5b, 0x5c, 0x78, 0x7b, 0x30, 0x30, 0x41, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b,
	0x44, 0x37, 0x46, 0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x39, 0x30, 0x30, 0x7d, 0x2d, 0x5c, 0x78,
	0x7b, 0x46, 0x44, 0x43, 0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x46, 0x30, 0x7d, 0x2d, 0x5c,
	0x78, 0x7b, 0x46, 0x46, 0x45, 0x46, 0x7d, 0x5d, 0x29, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a,
	0x41, 0x2d, 0x5a, 0x5d, 0x7c, 0x5c, 0x64, 0x7c, 0x2d, 0x7c, 0x5c, 0x2e, 0x7c, 0x7e, 0x7c, 0x5b,
	0x5c, 0x78, 0x7b, 0x30, 0x30, 0x41, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x44, 0x37, 0x46, 0x46,
	0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x39, 0x30, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x43,
	0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x46, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x46, 0x46,
	0x45, 0x46, 0x7d, 0x5d, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a,
	0x5d, 0x7c, 0x5c, 0x64, 0x7c, 0x5b, 0x5c, 0x78, 0x7b, 0x30, 0x30, 0x41, 0x30, 0x7d, 0x2d, 0x5c,
	0x78, 0x7b, 0x44, 0x37, 0x46, 0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x39, 0x30, 0x30, 0x7d, 0x2d,
	0x5c, 0x78, 0x7b, 0x46, 0x44, 0x43, 0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x46, 0x30, 0x7d,
	0x2d, 0x5c, 0x78, 0x7b, 0x46, 0x46, 0x45, 0x46, 0x7d, 0x5d, 0x29, 0x29, 0x29, 0x5c, 0x2e, 0x29,
	0x2b, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x5d, 0x7c,
	0x5b, 0x5c, 0x78, 0x7b, 0x30, 0x30, 0x41, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x44, 0x37, 0x46,
	0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x39, 0x30, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x46, 0x44,
	0x43, 0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x46, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x46,
	0x46, 0x45, 0x46, 0x7d, 0x5d, 0x29, 0x7c, 0x28, 0x3f, 0x3a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d,
	0x7a, 0x41, 0x2d, 0x5a, 0x5d, 0x7c, 0x5b, 0x5c, 0x78, 0x7b, 0x30, 0x30, 0x41, 0x30, 0x7d, 0x2d,
	0x5c, 0x78, 0x7b, 0x44, 0x37, 0x46, 0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x39, 0x30, 0x30, 0x7d,
	0x2d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x43, 0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x46, 0x30,
	0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x46, 0x46, 0x45, 0x46, 0x7d, 0x5d, 0x29, 0x28, 0x3f, 0x3a, 0x5b,
	0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x5d, 0x7c, 0x5c, 0x64, 0x7c, 0x2d, 0x7c, 0x5c, 0x2e, 0x7c,
	0x7e, 0x7c, 0x5b, 0x5c, 0x78, 0x7b, 0x30, 0x30, 0x41, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b, 0x44,
	0x37, 0x46, 0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x39, 0x30, 0x30, 0x7d, 0x2d, 0x5c, 0x78, 0x7b,
	0x46, 0x44, 0x43, 0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x46, 0x30, 0x7d, 0x2d, 0x5c, 0x78,
	0x7b, 0x46, 0x46, 0x45, 0x46, 0x7d, 0x5d, 0x29, 0x2a, 0x28, 0x3f, 0x3a, 0x5b, 0x61, 0x2d, 0x7a,
	0x41, 0x2d, 0x5a, 0x5d, 0x7c, 0x5b, 0x5c, 0x78, 0x7b, 0x30, 0x30, 0x41, 0x30, 0x7d, 0x2d, 0x5c,
	0x78, 0x7b, 0x44, 0x37, 0x46, 0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x39, 0x30, 0x30, 0x7d, 0x2d,
	0x5c, 0x78, 0x7b, 0x46, 0x44, 0x43, 0x46, 0x7d, 0x5c, 0x78, 0x7b, 0x46, 0x44, 0x46, 0x30, 0x7d,
	0x2d, 0x5c, 0x78, 0x7b, 0x46, 0x46, 0x45, 0x46, 0x7d, 0x5d, 0x29, 0x29, 0x29, 0x5c, 0x2e, 0x3f,
	0x24, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x23, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xfa, 0x42, 0x0c,
	0x72, 0x0a, 0x32, 0x08, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x2d, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x31, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x22, 0xdb, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x22, 0x37, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xe5, 0x01, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f,
	0x62, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x8d, 0x02, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04,
	0x10, 0x01, 0x18, 0x14, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x00, 0x18, 0x32, 0x52, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x12, 0x23, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x00, 0x18, 0x32, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1b, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x00, 0x18, 0x32, 0x52, 0x03,
	0x6a, 0x6f, 0x62, 0x12, 0x25, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x00, 0x18, 0x64,
	0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x10, 0x00, 0x18, 0x64, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x32, 0xaf, 0x09, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0c,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42,
	0x79, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x57, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x42, 0x79, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x47, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x12,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d,
	0x53, 0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x73, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x73, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x67, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x63, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x73,
	0x65, 0x74, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x63, 0x0a, 0x0c, 0x53,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x74, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x3a, 0x01, 0x2a,
	0x12, 0x4c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5e,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x65,
	0x0a, 0x0e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0x18, 0x5a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_service_v1_user_proto_rawDescOnce sync.Once
	file_user_service_v1_user_proto_rawDescData = file_user_service_v1_user_proto_rawDesc
)

func file_user_service_v1_user_proto_rawDescGZIP() []byte {
	file_user_service_v1_user_proto_rawDescOnce.Do(func() {
		file_user_service_v1_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_service_v1_user_proto_rawDescData)
	})
	return file_user_service_v1_user_proto_rawDescData
}

var file_user_service_v1_user_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_user_service_v1_user_proto_goTypes = []interface{}{
	(*UserRegisterReq)(nil),           // 0: user.v1.UserRegisterReq
	(*LoginByPasswordReq)(nil),        // 1: user.v1.LoginByPasswordReq
	(*LoginByCodeReq)(nil),            // 2: user.v1.LoginByCodeReq
	(*LoginReply)(nil),                // 3: user.v1.LoginReply
	(*LoginByWeChatReq)(nil),          // 4: user.v1.LoginByWeChatReq
	(*LoginByGithubReq)(nil),          // 5: user.v1.LoginByGithubReq
	(*LoginPasswordResetReq)(nil),     // 6: user.v1.LoginPasswordResetReq
	(*SendPhoneCodeReq)(nil),          // 7: user.v1.SendPhoneCodeReq
	(*SendEmailCodeReq)(nil),          // 8: user.v1.SendEmailCodeReq
	(*GetCosSessionKeyReply)(nil),     // 9: user.v1.GetCosSessionKeyReply
	(*GetUserReq)(nil),                // 10: user.v1.GetUserReq
	(*GetUserReply)(nil),              // 11: user.v1.GetUserReply
	(*SetUserPhoneReq)(nil),           // 12: user.v1.SetUserPhoneReq
	(*SetUserPhoneReply)(nil),         // 13: user.v1.SetUserPhoneReply
	(*SetUserEmailReq)(nil),           // 14: user.v1.SetUserEmailReq
	(*SetUserEmailReply)(nil),         // 15: user.v1.SetUserEmailReply
	(*GetUserProfileReq)(nil),         // 16: user.v1.GetUserProfileReq
	(*GetUserProfileReply)(nil),       // 17: user.v1.GetUserProfileReply
	(*GetUserProfileUpdateReq)(nil),   // 18: user.v1.GetUserProfileUpdateReq
	(*GetUserProfileUpdateReply)(nil), // 19: user.v1.GetUserProfileUpdateReply
	(*SetUserProfileReq)(nil),         // 20: user.v1.SetUserProfileReq
	(*emptypb.Empty)(nil),             // 21: google.protobuf.Empty
}
var file_user_service_v1_user_proto_depIdxs = []int32{
	0,  // 0: user.v1.User.UserRegister:input_type -> user.v1.UserRegisterReq
	1,  // 1: user.v1.User.LoginByPassword:input_type -> user.v1.LoginByPasswordReq
	2,  // 2: user.v1.User.LoginByCode:input_type -> user.v1.LoginByCodeReq
	4,  // 3: user.v1.User.LoginByWeChat:input_type -> user.v1.LoginByWeChatReq
	5,  // 4: user.v1.User.LoginByGithub:input_type -> user.v1.LoginByGithubReq
	6,  // 5: user.v1.User.LoginPasswordReset:input_type -> user.v1.LoginPasswordResetReq
	7,  // 6: user.v1.User.SendPhoneCode:input_type -> user.v1.SendPhoneCodeReq
	8,  // 7: user.v1.User.SendEmailCode:input_type -> user.v1.SendEmailCodeReq
	21, // 8: user.v1.User.GetCosSessionKey:input_type -> google.protobuf.Empty
	10, // 9: user.v1.User.GetUser:input_type -> user.v1.GetUserReq
	12, // 10: user.v1.User.SetUserPhone:input_type -> user.v1.SetUserPhoneReq
	14, // 11: user.v1.User.SetUserEmail:input_type -> user.v1.SetUserEmailReq
	16, // 12: user.v1.User.GetUserProfile:input_type -> user.v1.GetUserProfileReq
	18, // 13: user.v1.User.GetUserProfileUpdate:input_type -> user.v1.GetUserProfileUpdateReq
	20, // 14: user.v1.User.SetUserProfile:input_type -> user.v1.SetUserProfileReq
	21, // 15: user.v1.User.UserRegister:output_type -> google.protobuf.Empty
	3,  // 16: user.v1.User.LoginByPassword:output_type -> user.v1.LoginReply
	3,  // 17: user.v1.User.LoginByCode:output_type -> user.v1.LoginReply
	3,  // 18: user.v1.User.LoginByWeChat:output_type -> user.v1.LoginReply
	3,  // 19: user.v1.User.LoginByGithub:output_type -> user.v1.LoginReply
	21, // 20: user.v1.User.LoginPasswordReset:output_type -> google.protobuf.Empty
	21, // 21: user.v1.User.SendPhoneCode:output_type -> google.protobuf.Empty
	21, // 22: user.v1.User.SendEmailCode:output_type -> google.protobuf.Empty
	9,  // 23: user.v1.User.GetCosSessionKey:output_type -> user.v1.GetCosSessionKeyReply
	11, // 24: user.v1.User.GetUser:output_type -> user.v1.GetUserReply
	13, // 25: user.v1.User.SetUserPhone:output_type -> user.v1.SetUserPhoneReply
	15, // 26: user.v1.User.SetUserEmail:output_type -> user.v1.SetUserEmailReply
	17, // 27: user.v1.User.GetUserProfile:output_type -> user.v1.GetUserProfileReply
	19, // 28: user.v1.User.GetUserProfileUpdate:output_type -> user.v1.GetUserProfileUpdateReply
	21, // 29: user.v1.User.SetUserProfile:output_type -> google.protobuf.Empty
	15, // [15:30] is the sub-list for method output_type
	0,  // [0:15] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_user_service_v1_user_proto_init() }
func file_user_service_v1_user_proto_init() {
	if File_user_service_v1_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_service_v1_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginByPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginByCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginByWeChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginByGithubReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginPasswordResetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPhoneCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmailCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCosSessionKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserPhoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserPhoneReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserEmailReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserProfileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserProfileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserProfileUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserProfileUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_service_v1_user_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserProfileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_service_v1_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_service_v1_user_proto_goTypes,
		DependencyIndexes: file_user_service_v1_user_proto_depIdxs,
		MessageInfos:      file_user_service_v1_user_proto_msgTypes,
	}.Build()
	File_user_service_v1_user_proto = out.File
	file_user_service_v1_user_proto_rawDesc = nil
	file_user_service_v1_user_proto_goTypes = nil
	file_user_service_v1_user_proto_depIdxs = nil
}
