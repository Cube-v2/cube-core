// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: message/service/v1/message.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AvatarReviewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobsDetail *AvatarReviewReq_JobsDetailStruct `protobuf:"bytes,1,opt,name=JobsDetail,proto3" json:"JobsDetail,omitempty"`
	EventName  string                            `protobuf:"bytes,2,opt,name=EventName,proto3" json:"EventName,omitempty"`
}

func (x *AvatarReviewReq) Reset() {
	*x = AvatarReviewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_service_v1_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarReviewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarReviewReq) ProtoMessage() {}

func (x *AvatarReviewReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_service_v1_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarReviewReq.ProtoReflect.Descriptor instead.
func (*AvatarReviewReq) Descriptor() ([]byte, []int) {
	return file_message_service_v1_message_proto_rawDescGZIP(), []int{0}
}

func (x *AvatarReviewReq) GetJobsDetail() *AvatarReviewReq_JobsDetailStruct {
	if x != nil {
		return x.JobsDetail
	}
	return nil
}

func (x *AvatarReviewReq) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

type ProfileReviewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobsDetail *ProfileReviewReq_JobsDetailStruct `protobuf:"bytes,1,opt,name=JobsDetail,proto3" json:"JobsDetail,omitempty"`
	EventName  string                             `protobuf:"bytes,2,opt,name=EventName,proto3" json:"EventName,omitempty"`
}

func (x *ProfileReviewReq) Reset() {
	*x = ProfileReviewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_service_v1_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileReviewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileReviewReq) ProtoMessage() {}

func (x *ProfileReviewReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_service_v1_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileReviewReq.ProtoReflect.Descriptor instead.
func (*ProfileReviewReq) Descriptor() ([]byte, []int) {
	return file_message_service_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *ProfileReviewReq) GetJobsDetail() *ProfileReviewReq_JobsDetailStruct {
	if x != nil {
		return x.JobsDetail
	}
	return nil
}

func (x *ProfileReviewReq) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

type AvatarReviewReq_JobsDetailStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string            `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message    string            `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	JobId      string            `protobuf:"bytes,3,opt,name=JobId,proto3" json:"JobId,omitempty"`
	State      string            `protobuf:"bytes,4,opt,name=State,proto3" json:"State,omitempty"`
	Object     string            `protobuf:"bytes,5,opt,name=Object,proto3" json:"Object,omitempty"`
	Label      string            `protobuf:"bytes,6,opt,name=Label,proto3" json:"Label,omitempty"`
	Result     int32             `protobuf:"varint,7,opt,name=Result,proto3" json:"Result,omitempty"`
	Category   string            `protobuf:"bytes,8,opt,name=Category,proto3" json:"Category,omitempty"`
	BucketId   string            `protobuf:"bytes,9,opt,name=BucketId,proto3" json:"BucketId,omitempty"`
	Region     string            `protobuf:"bytes,10,opt,name=Region,proto3" json:"Region,omitempty"`
	CosHeaders map[string]string `protobuf:"bytes,11,rep,name=CosHeaders,proto3" json:"CosHeaders,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AvatarReviewReq_JobsDetailStruct) Reset() {
	*x = AvatarReviewReq_JobsDetailStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_service_v1_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarReviewReq_JobsDetailStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarReviewReq_JobsDetailStruct) ProtoMessage() {}

func (x *AvatarReviewReq_JobsDetailStruct) ProtoReflect() protoreflect.Message {
	mi := &file_message_service_v1_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarReviewReq_JobsDetailStruct.ProtoReflect.Descriptor instead.
func (*AvatarReviewReq_JobsDetailStruct) Descriptor() ([]byte, []int) {
	return file_message_service_v1_message_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AvatarReviewReq_JobsDetailStruct) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AvatarReviewReq_JobsDetailStruct) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AvatarReviewReq_JobsDetailStruct) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *AvatarReviewReq_JobsDetailStruct) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AvatarReviewReq_JobsDetailStruct) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *AvatarReviewReq_JobsDetailStruct) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *AvatarReviewReq_JobsDetailStruct) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *AvatarReviewReq_JobsDetailStruct) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *AvatarReviewReq_JobsDetailStruct) GetBucketId() string {
	if x != nil {
		return x.BucketId
	}
	return ""
}

func (x *AvatarReviewReq_JobsDetailStruct) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AvatarReviewReq_JobsDetailStruct) GetCosHeaders() map[string]string {
	if x != nil {
		return x.CosHeaders
	}
	return nil
}

type ProfileReviewReq_SectionPornInfoStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HitFlag  int32  `protobuf:"varint,1,opt,name=HitFlag,proto3" json:"HitFlag,omitempty"`
	Score    int32  `protobuf:"varint,2,opt,name=Score,proto3" json:"Score,omitempty"`
	Keywords string `protobuf:"bytes,3,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
}

func (x *ProfileReviewReq_SectionPornInfoStruct) Reset() {
	*x = ProfileReviewReq_SectionPornInfoStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_service_v1_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileReviewReq_SectionPornInfoStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileReviewReq_SectionPornInfoStruct) ProtoMessage() {}

func (x *ProfileReviewReq_SectionPornInfoStruct) ProtoReflect() protoreflect.Message {
	mi := &file_message_service_v1_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileReviewReq_SectionPornInfoStruct.ProtoReflect.Descriptor instead.
func (*ProfileReviewReq_SectionPornInfoStruct) Descriptor() ([]byte, []int) {
	return file_message_service_v1_message_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ProfileReviewReq_SectionPornInfoStruct) GetHitFlag() int32 {
	if x != nil {
		return x.HitFlag
	}
	return 0
}

func (x *ProfileReviewReq_SectionPornInfoStruct) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ProfileReviewReq_SectionPornInfoStruct) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

type ProfileReviewReq_SectionAdsInfoStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HitFlag  int32  `protobuf:"varint,1,opt,name=HitFlag,proto3" json:"HitFlag,omitempty"`
	Score    int32  `protobuf:"varint,2,opt,name=Score,proto3" json:"Score,omitempty"`
	Keywords string `protobuf:"bytes,3,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
}

func (x *ProfileReviewReq_SectionAdsInfoStruct) Reset() {
	*x = ProfileReviewReq_SectionAdsInfoStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_service_v1_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileReviewReq_SectionAdsInfoStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileReviewReq_SectionAdsInfoStruct) ProtoMessage() {}

func (x *ProfileReviewReq_SectionAdsInfoStruct) ProtoReflect() protoreflect.Message {
	mi := &file_message_service_v1_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileReviewReq_SectionAdsInfoStruct.ProtoReflect.Descriptor instead.
func (*ProfileReviewReq_SectionAdsInfoStruct) Descriptor() ([]byte, []int) {
	return file_message_service_v1_message_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ProfileReviewReq_SectionAdsInfoStruct) GetHitFlag() int32 {
	if x != nil {
		return x.HitFlag
	}
	return 0
}

func (x *ProfileReviewReq_SectionAdsInfoStruct) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ProfileReviewReq_SectionAdsInfoStruct) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

type ProfileReviewReq_SectionIllegalInfoStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HitFlag  int32  `protobuf:"varint,1,opt,name=HitFlag,proto3" json:"HitFlag,omitempty"`
	Score    int32  `protobuf:"varint,2,opt,name=Score,proto3" json:"Score,omitempty"`
	Keywords string `protobuf:"bytes,3,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
}

func (x *ProfileReviewReq_SectionIllegalInfoStruct) Reset() {
	*x = ProfileReviewReq_SectionIllegalInfoStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_service_v1_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileReviewReq_SectionIllegalInfoStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileReviewReq_SectionIllegalInfoStruct) ProtoMessage() {}

func (x *ProfileReviewReq_SectionIllegalInfoStruct) ProtoReflect() protoreflect.Message {
	mi := &file_message_service_v1_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileReviewReq_SectionIllegalInfoStruct.ProtoReflect.Descriptor instead.
func (*ProfileReviewReq_SectionIllegalInfoStruct) Descriptor() ([]byte, []int) {
	return file_message_service_v1_message_proto_rawDescGZIP(), []int{1, 2}
}

func (x *ProfileReviewReq_SectionIllegalInfoStruct) GetHitFlag() int32 {
	if x != nil {
		return x.HitFlag
	}
	return 0
}

func (x *ProfileReviewReq_SectionIllegalInfoStruct) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ProfileReviewReq_SectionIllegalInfoStruct) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

type ProfileReviewReq_SectionAbuseInfoStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HitFlag  int32  `protobuf:"varint,1,opt,name=HitFlag,proto3" json:"HitFlag,omitempty"`
	Score    int32  `protobuf:"varint,2,opt,name=Score,proto3" json:"Score,omitempty"`
	Keywords string `protobuf:"bytes,3,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
}

func (x *ProfileReviewReq_SectionAbuseInfoStruct) Reset() {
	*x = ProfileReviewReq_SectionAbuseInfoStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_service_v1_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileReviewReq_SectionAbuseInfoStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileReviewReq_SectionAbuseInfoStruct) ProtoMessage() {}

func (x *ProfileReviewReq_SectionAbuseInfoStruct) ProtoReflect() protoreflect.Message {
	mi := &file_message_service_v1_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileReviewReq_SectionAbuseInfoStruct.ProtoReflect.Descriptor instead.
func (*ProfileReviewReq_SectionAbuseInfoStruct) Descriptor() ([]byte, []int) {
	return file_message_service_v1_message_proto_rawDescGZIP(), []int{1, 3}
}

func (x *ProfileReviewReq_SectionAbuseInfoStruct) GetHitFlag() int32 {
	if x != nil {
		return x.HitFlag
	}
	return 0
}

func (x *ProfileReviewReq_SectionAbuseInfoStruct) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ProfileReviewReq_SectionAbuseInfoStruct) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

type ProfileReviewReq_SectionStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label       string                                     `protobuf:"bytes,1,opt,name=Label,proto3" json:"Label,omitempty"`
	Result      int32                                      `protobuf:"varint,2,opt,name=Result,proto3" json:"Result,omitempty"`
	PornInfo    *ProfileReviewReq_SectionPornInfoStruct    `protobuf:"bytes,3,opt,name=PornInfo,proto3" json:"PornInfo,omitempty"`
	AdsInfo     *ProfileReviewReq_SectionAdsInfoStruct     `protobuf:"bytes,4,opt,name=AdsInfo,proto3" json:"AdsInfo,omitempty"`
	IllegalInfo *ProfileReviewReq_SectionIllegalInfoStruct `protobuf:"bytes,5,opt,name=IllegalInfo,proto3" json:"IllegalInfo,omitempty"`
	AbuseInfo   *ProfileReviewReq_SectionAbuseInfoStruct   `protobuf:"bytes,6,opt,name=AbuseInfo,proto3" json:"AbuseInfo,omitempty"`
}

func (x *ProfileReviewReq_SectionStruct) Reset() {
	*x = ProfileReviewReq_SectionStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_service_v1_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileReviewReq_SectionStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileReviewReq_SectionStruct) ProtoMessage() {}

func (x *ProfileReviewReq_SectionStruct) ProtoReflect() protoreflect.Message {
	mi := &file_message_service_v1_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileReviewReq_SectionStruct.ProtoReflect.Descriptor instead.
func (*ProfileReviewReq_SectionStruct) Descriptor() ([]byte, []int) {
	return file_message_service_v1_message_proto_rawDescGZIP(), []int{1, 4}
}

func (x *ProfileReviewReq_SectionStruct) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ProfileReviewReq_SectionStruct) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *ProfileReviewReq_SectionStruct) GetPornInfo() *ProfileReviewReq_SectionPornInfoStruct {
	if x != nil {
		return x.PornInfo
	}
	return nil
}

func (x *ProfileReviewReq_SectionStruct) GetAdsInfo() *ProfileReviewReq_SectionAdsInfoStruct {
	if x != nil {
		return x.AdsInfo
	}
	return nil
}

func (x *ProfileReviewReq_SectionStruct) GetIllegalInfo() *ProfileReviewReq_SectionIllegalInfoStruct {
	if x != nil {
		return x.IllegalInfo
	}
	return nil
}

func (x *ProfileReviewReq_SectionStruct) GetAbuseInfo() *ProfileReviewReq_SectionAbuseInfoStruct {
	if x != nil {
		return x.AbuseInfo
	}
	return nil
}

type ProfileReviewReq_JobsDetailStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string                            `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message      string                            `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	JobId        string                            `protobuf:"bytes,3,opt,name=JobId,proto3" json:"JobId,omitempty"`
	DataId       string                            `protobuf:"bytes,4,opt,name=DataId,proto3" json:"DataId,omitempty"`
	State        string                            `protobuf:"bytes,5,opt,name=State,proto3" json:"State,omitempty"`
	CreationTime string                            `protobuf:"bytes,6,opt,name=CreationTime,proto3" json:"CreationTime,omitempty"`
	Object       string                            `protobuf:"bytes,7,opt,name=Object,proto3" json:"Object,omitempty"`
	Label        string                            `protobuf:"bytes,8,opt,name=Label,proto3" json:"Label,omitempty"`
	Result       int32                             `protobuf:"varint,9,opt,name=Result,proto3" json:"Result,omitempty"`
	BucketId     string                            `protobuf:"bytes,10,opt,name=BucketId,proto3" json:"BucketId,omitempty"`
	Region       string                            `protobuf:"bytes,11,opt,name=Region,proto3" json:"Region,omitempty"`
	CosHeaders   map[string]string                 `protobuf:"bytes,12,rep,name=CosHeaders,proto3" json:"CosHeaders,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Section      []*ProfileReviewReq_SectionStruct `protobuf:"bytes,13,rep,name=Section,proto3" json:"Section,omitempty"`
}

func (x *ProfileReviewReq_JobsDetailStruct) Reset() {
	*x = ProfileReviewReq_JobsDetailStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_service_v1_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileReviewReq_JobsDetailStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileReviewReq_JobsDetailStruct) ProtoMessage() {}

func (x *ProfileReviewReq_JobsDetailStruct) ProtoReflect() protoreflect.Message {
	mi := &file_message_service_v1_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileReviewReq_JobsDetailStruct.ProtoReflect.Descriptor instead.
func (*ProfileReviewReq_JobsDetailStruct) Descriptor() ([]byte, []int) {
	return file_message_service_v1_message_proto_rawDescGZIP(), []int{1, 5}
}

func (x *ProfileReviewReq_JobsDetailStruct) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProfileReviewReq_JobsDetailStruct) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProfileReviewReq_JobsDetailStruct) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ProfileReviewReq_JobsDetailStruct) GetDataId() string {
	if x != nil {
		return x.DataId
	}
	return ""
}

func (x *ProfileReviewReq_JobsDetailStruct) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ProfileReviewReq_JobsDetailStruct) GetCreationTime() string {
	if x != nil {
		return x.CreationTime
	}
	return ""
}

func (x *ProfileReviewReq_JobsDetailStruct) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *ProfileReviewReq_JobsDetailStruct) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ProfileReviewReq_JobsDetailStruct) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *ProfileReviewReq_JobsDetailStruct) GetBucketId() string {
	if x != nil {
		return x.BucketId
	}
	return ""
}

func (x *ProfileReviewReq_JobsDetailStruct) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ProfileReviewReq_JobsDetailStruct) GetCosHeaders() map[string]string {
	if x != nil {
		return x.CosHeaders
	}
	return nil
}

func (x *ProfileReviewReq_JobsDetailStruct) GetSection() []*ProfileReviewReq_SectionStruct {
	if x != nil {
		return x.Section
	}
	return nil
}

var File_message_service_v1_message_proto protoreflect.FileDescriptor

var file_message_service_v1_message_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x9f, 0x05, 0x0a, 0x0f, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x4c, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x2e, 0x4a, 0x6f, 0x62, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x4a, 0x6f, 0x62, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x26, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xe8,
	0x07, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x95, 0x04, 0x0a,
	0x10, 0x4a, 0x6f, 0x62, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x12, 0x1c, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x22, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07, 0x52, 0x05, 0x4a, 0x6f,
	0x62, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07, 0x52, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07, 0x52, 0x06, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07, 0x52, 0x05,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a,
	0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x08, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07, 0x52,
	0x08, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x06, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0x18, 0xe8, 0x07, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x78, 0x0a, 0x0a, 0x43,
	0x6f, 0x73, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x2e, 0x4a, 0x6f, 0x62,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x6f,
	0x73, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x1a, 0xfa,
	0x42, 0x0a, 0x9a, 0x01, 0x07, 0x2a, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07, 0xfa, 0x42, 0x0a, 0x9a,
	0x01, 0x07, 0x22, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07, 0x52, 0x0a, 0x43, 0x6f, 0x73, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x43, 0x6f, 0x73, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xe4, 0x0c, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x4d, 0x0a, 0x0a, 0x4a, 0x6f, 0x62,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x2e, 0x4a, 0x6f, 0x62, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x4a, 0x6f,
	0x62, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x26, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0x18, 0xe8, 0x07, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x1a, 0x6d, 0x0a, 0x15, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x72, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x69, 0x74,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x48, 0x69, 0x74, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x08, 0x4b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0x18, 0xe8, 0x07, 0x52, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x1a,
	0x6c, 0x0a, 0x14, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x69, 0x74, 0x46, 0x6c,
	0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x48, 0x69, 0x74, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0x18, 0xe8, 0x07, 0x52, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x1a, 0x70, 0x0a,
	0x18, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x69, 0x74,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x48, 0x69, 0x74, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x08, 0x4b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0x18, 0xe8, 0x07, 0x52, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x1a,
	0x6e, 0x0a, 0x16, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x62, 0x75, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x69, 0x74,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x48, 0x69, 0x74, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x08, 0x4b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0x18, 0xe8, 0x07, 0x52, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x1a,
	0x90, 0x03, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x12, 0x1e, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07, 0x52, 0x05, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4e, 0x0a, 0x08, 0x50, 0x6f, 0x72,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x08, 0x50, 0x6f, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x07, 0x41, 0x64, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x41,
	0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x57, 0x0a, 0x0b, 0x49, 0x6c, 0x6c, 0x65, 0x67, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x0b, 0x49, 0x6c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x51, 0x0a, 0x09, 0x41, 0x62, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x62, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x09, 0x41, 0x62, 0x75, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x86, 0x05, 0x0a, 0x10, 0x4a, 0x6f, 0x62, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07, 0x52,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07,
	0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x05, 0x4a, 0x6f, 0x62,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18,
	0xe8, 0x07, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x06, 0x44, 0x61, 0x74,
	0x61, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0x18, 0xe8, 0x07, 0x52, 0x06, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72,
	0x03, 0x18, 0xe8, 0x07, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07, 0x52, 0x0c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x06, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0x18, 0xe8, 0x07, 0x52, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x05, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72,
	0x03, 0x18, 0xe8, 0x07, 0x52, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07, 0x52,
	0x08, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x06, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0x18, 0xe8, 0x07, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x79, 0x0a, 0x0a, 0x43,
	0x6f, 0x73, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x2e, 0x4a, 0x6f,
	0x62, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x43,
	0x6f, 0x73, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x1a,
	0xfa, 0x42, 0x0a, 0x9a, 0x01, 0x07, 0x2a, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07, 0xfa, 0x42, 0x0a,
	0x9a, 0x01, 0x07, 0x22, 0x05, 0x72, 0x03, 0x18, 0xe8, 0x07, 0x52, 0x0a, 0x43, 0x6f, 0x73, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x71, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x07, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3d, 0x0a, 0x0f,
	0x43, 0x6f, 0x73, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xe2, 0x01, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x69, 0x0a, 0x0c, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x24, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x74, 0x78, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x3a,
	0x01, 0x2a, 0x12, 0x6c, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1f, 0x22, 0x1a, 0x2f, 0x74, 0x78, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x3a, 0x01, 0x2a,
	0x42, 0x1b, 0x5a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_service_v1_message_proto_rawDescOnce sync.Once
	file_message_service_v1_message_proto_rawDescData = file_message_service_v1_message_proto_rawDesc
)

func file_message_service_v1_message_proto_rawDescGZIP() []byte {
	file_message_service_v1_message_proto_rawDescOnce.Do(func() {
		file_message_service_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_service_v1_message_proto_rawDescData)
	})
	return file_message_service_v1_message_proto_rawDescData
}

var file_message_service_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_message_service_v1_message_proto_goTypes = []interface{}{
	(*AvatarReviewReq)(nil),                  // 0: message.v1.AvatarReviewReq
	(*ProfileReviewReq)(nil),                 // 1: message.v1.ProfileReviewReq
	(*AvatarReviewReq_JobsDetailStruct)(nil), // 2: message.v1.AvatarReviewReq.JobsDetailStruct
	nil,                                      // 3: message.v1.AvatarReviewReq.JobsDetailStruct.CosHeadersEntry
	(*ProfileReviewReq_SectionPornInfoStruct)(nil),    // 4: message.v1.ProfileReviewReq.SectionPornInfoStruct
	(*ProfileReviewReq_SectionAdsInfoStruct)(nil),     // 5: message.v1.ProfileReviewReq.SectionAdsInfoStruct
	(*ProfileReviewReq_SectionIllegalInfoStruct)(nil), // 6: message.v1.ProfileReviewReq.SectionIllegalInfoStruct
	(*ProfileReviewReq_SectionAbuseInfoStruct)(nil),   // 7: message.v1.ProfileReviewReq.SectionAbuseInfoStruct
	(*ProfileReviewReq_SectionStruct)(nil),            // 8: message.v1.ProfileReviewReq.SectionStruct
	(*ProfileReviewReq_JobsDetailStruct)(nil),         // 9: message.v1.ProfileReviewReq.JobsDetailStruct
	nil,                   // 10: message.v1.ProfileReviewReq.JobsDetailStruct.CosHeadersEntry
	(*emptypb.Empty)(nil), // 11: google.protobuf.Empty
}
var file_message_service_v1_message_proto_depIdxs = []int32{
	2,  // 0: message.v1.AvatarReviewReq.JobsDetail:type_name -> message.v1.AvatarReviewReq.JobsDetailStruct
	9,  // 1: message.v1.ProfileReviewReq.JobsDetail:type_name -> message.v1.ProfileReviewReq.JobsDetailStruct
	3,  // 2: message.v1.AvatarReviewReq.JobsDetailStruct.CosHeaders:type_name -> message.v1.AvatarReviewReq.JobsDetailStruct.CosHeadersEntry
	4,  // 3: message.v1.ProfileReviewReq.SectionStruct.PornInfo:type_name -> message.v1.ProfileReviewReq.SectionPornInfoStruct
	5,  // 4: message.v1.ProfileReviewReq.SectionStruct.AdsInfo:type_name -> message.v1.ProfileReviewReq.SectionAdsInfoStruct
	6,  // 5: message.v1.ProfileReviewReq.SectionStruct.IllegalInfo:type_name -> message.v1.ProfileReviewReq.SectionIllegalInfoStruct
	7,  // 6: message.v1.ProfileReviewReq.SectionStruct.AbuseInfo:type_name -> message.v1.ProfileReviewReq.SectionAbuseInfoStruct
	10, // 7: message.v1.ProfileReviewReq.JobsDetailStruct.CosHeaders:type_name -> message.v1.ProfileReviewReq.JobsDetailStruct.CosHeadersEntry
	8,  // 8: message.v1.ProfileReviewReq.JobsDetailStruct.Section:type_name -> message.v1.ProfileReviewReq.SectionStruct
	0,  // 9: message.v1.Message.AvatarReview:input_type -> message.v1.AvatarReviewReq
	1,  // 10: message.v1.Message.ProfileReview:input_type -> message.v1.ProfileReviewReq
	11, // 11: message.v1.Message.AvatarReview:output_type -> google.protobuf.Empty
	11, // 12: message.v1.Message.ProfileReview:output_type -> google.protobuf.Empty
	11, // [11:13] is the sub-list for method output_type
	9,  // [9:11] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_message_service_v1_message_proto_init() }
func file_message_service_v1_message_proto_init() {
	if File_message_service_v1_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_service_v1_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarReviewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_service_v1_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileReviewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_service_v1_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarReviewReq_JobsDetailStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_service_v1_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileReviewReq_SectionPornInfoStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_service_v1_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileReviewReq_SectionAdsInfoStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_service_v1_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileReviewReq_SectionIllegalInfoStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_service_v1_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileReviewReq_SectionAbuseInfoStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_service_v1_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileReviewReq_SectionStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_service_v1_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileReviewReq_JobsDetailStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_service_v1_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_message_service_v1_message_proto_goTypes,
		DependencyIndexes: file_message_service_v1_message_proto_depIdxs,
		MessageInfos:      file_message_service_v1_message_proto_msgTypes,
	}.Build()
	File_message_service_v1_message_proto = out.File
	file_message_service_v1_message_proto_rawDesc = nil
	file_message_service_v1_message_proto_goTypes = nil
	file_message_service_v1_message_proto_depIdxs = nil
}
