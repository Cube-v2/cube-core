syntax = "proto3";

package creation.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";

option go_package = "api/creation/service/v1;v1";

service Creation {

  rpc GetLeaderBoard(google.protobuf.Empty) returns (GetLeaderBoardReply){}

  rpc GetArticleList(GetArticleListReq) returns (GetArticleListReply){}

  rpc GetArticleListHot(GetArticleListHotReq) returns (GetArticleListHotReply){}

  rpc GetArticleStatistic(GetArticleStatisticReq)returns (GetArticleStatisticReply){}

  rpc GetArticleListStatistic(GetArticleListStatisticReq)returns (GetArticleListStatisticReply){}

  rpc GetLastArticleDraft(GetLastArticleDraftReq) returns (GetLastArticleDraftReply){}

  rpc CreateArticle(CreateArticleReq) returns (google.protobuf.Empty){}

  rpc CreateArticleCacheAndSearch(CreateArticleCacheAndSearchReq) returns (google.protobuf.Empty){}

  rpc CreateArticleDraft(CreateArticleDraftReq) returns (CreateArticleDraftReply){}

  rpc ArticleDraftMark(ArticleDraftMarkReq) returns (google.protobuf.Empty){}

  rpc GetArticleDraftList(GetArticleDraftListReq) returns (GetArticleDraftListReply){}

  rpc SendArticle(SendArticleReq) returns (google.protobuf.Empty){}
}

message GetLeaderBoardReply{
  message Board{
    int32 id = 1;
    string uuid = 2;
    string mode = 3;
  }
  repeated Board board = 1;
}

message GetArticleListReq{
  int32 page = 1;
}

message GetArticleListReply{
  message Article{
    int32 id = 1;
    string uuid = 2;
  }
  repeated Article article = 1;
}

message GetArticleListHotReq{
  int32 page = 1;
}

message GetArticleListHotReply{
  message Article{
    int32 id = 1;
    string uuid = 2;
  }
  repeated Article article = 1;
}

message GetArticleStatisticReq{
  int32 id = 1;
}

message GetArticleListStatisticReq{
  repeated int32 ids = 1;
}

message GetArticleStatisticReply{
  string uuid = 1;
  int32 agree = 2;
  int32 collect = 3;
  int32 view = 4;
  int32  comment = 5;
}

message GetArticleListStatisticReply{
  message Count{
    int32 id = 1;
    int32 agree = 2;
    int32 collect = 3;
    int32 view = 4;
    int32 comment = 5;
  }
  repeated Count count = 1;
}

message GetLastArticleDraftReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetLastArticleDraftReply{
  int32 id = 1;
  int32 status = 2;
}

message CreateArticleReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message CreateArticleCacheAndSearchReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message CreateArticleDraftReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message CreateArticleDraftReply{
  int32 id = 1;
}

message ArticleDraftMarkReq{
  int32 id = 1;
  string uuid = 2 [(validate.rules).string.uuid = true];
}

message GetArticleDraftListReq{
  string uuid = 1 [(validate.rules).string.uuid = true];
}

message GetArticleDraftListReply{
  message Draft{
    int32 id = 1;
  }
  repeated Draft draft = 1;
}

message SendArticleReq{
  int32 id = 1;
  string uuid = 3 [(validate.rules).string.uuid = true];
}
